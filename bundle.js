!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=25)}([function(e,t,n){"use strict";e.exports=n(15)},function(e,t,n){e.exports=n(19)()},,function(e,t){e.exports=function(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}},function(e,t,n){var r=n(22);e.exports=p,e.exports.parse=o,e.exports.compile=function(e,t){return l(o(e,t),t)},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=d;var a=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function o(e,t){for(var n,r=[],o=0,i=0,l="",s=t&&t.delimiter||"/";null!=(n=a.exec(e));){var f=n[0],d=n[1],p=n.index;if(l+=e.slice(i,p),i=p+f.length,d)l+=d[1];else{var m=e[i],h=n[2],v=n[3],y=n[4],g=n[5],b=n[6],w=n[7];l&&(r.push(l),l="");var k=null!=h&&null!=m&&m!==h,x="+"===b||"*"===b,E="?"===b||"*"===b,S=n[2]||s,T=y||g;r.push({name:v||o++,prefix:h||"",delimiter:S,optional:E,repeat:x,partial:k,asterisk:!!w,pattern:T?c(T):w?".*":"[^"+u(S)+"]+?"})}}return i<e.length&&(l+=e.substr(i)),l&&r.push(l),r}function i(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function l(e,t){for(var n=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(n[a]=new RegExp("^(?:"+e[a].pattern+")$",f(t)));return function(t,a){for(var o="",l=t||{},u=(a||{}).pretty?i:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,d=l[s.name];if(null==d){if(s.optional){s.partial&&(o+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(d)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=u(d[p]),!n[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");o+=(0===p?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(d),!n[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');o+=s.prefix+f}}else o+=s}return o}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function s(e,t){return e.keys=t,e}function f(e){return e&&e.sensitive?"":"i"}function d(e,t,n){r(t)||(n=t||n,t=[]);for(var a=(n=n||{}).strict,o=!1!==n.end,i="",l=0;l<e.length;l++){var c=e[l];if("string"==typeof c)i+=u(c);else{var d=u(c.prefix),p="(?:"+c.pattern+")";t.push(c),c.repeat&&(p+="(?:"+d+p+")*"),i+=p=c.optional?c.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var m=u(n.delimiter||"/"),h=i.slice(-m.length)===m;return a||(i=(h?i.slice(0,-m.length):i)+"(?:"+m+"(?=$))?"),i+=o?"$":a&&h?"":"(?="+m+"|$)",s(new RegExp("^"+i,f(n)),t)}function p(e,t,n){return r(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(e,t)}(e,t):r(e)?function(e,t,n){for(var r=[],a=0;a<e.length;a++)r.push(p(e[a],t,n).source);return s(new RegExp("(?:"+r.join("|")+")",f(n)),t)}(e,t,n):function(e,t,n){return d(o(e,n),t,n)}(e,t,n)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),o=u(a),i=u(n(1)),l=u(n(24));function u(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return n.state={value:e.value},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),r(t,[{key:"componentWillReceiveProps",value:function(e){var t=e.value;null!=t&&t!==this.state.value&&this.setState({value:t})}},{key:"onChange",value:function(e){var t=this.props,n=t.editing,r=t.value;n&&null==r&&this.setState({value:e})}},{key:"onStarClick",value:function(e,t,n,r){r.stopPropagation();var a=this.props,o=a.onStarClick;a.editing&&o&&o(e,t,n,r)}},{key:"onStarHover",value:function(e,t,n,r){r.stopPropagation();var a=this.props,o=a.onStarHover;a.editing&&o&&o(e,t,n,r)}},{key:"onStarHoverOut",value:function(e,t,n,r){r.stopPropagation();var a=this.props,o=a.onStarHoverOut;a.editing&&o&&o(e,t,n,r)}},{key:"renderStars",value:function(){for(var e=this,t=this.props,n=t.name,r=t.starCount,a=t.starColor,i=t.emptyStarColor,l=t.editing,u=this.state.value,c=function(e,t){return{float:"right",cursor:l?"pointer":"default",color:t>=e?a:i}},s={display:"none",position:"absolute",marginLeft:-9999},f=[],d=function(t){var r=n+"_"+t,a=o.default.createElement("input",{key:"input_"+r,style:s,className:"dv-star-rating-input",type:"radio",name:n,id:r,value:t,checked:u===t,onChange:e.onChange.bind(e,t,n)}),i=o.default.createElement("label",{key:"label_"+r,style:c(t,u),className:"dv-star-rating-star "+(u>=t?"dv-star-rating-full-star":"dv-star-rating-empty-star"),htmlFor:r,onClick:function(r){return e.onStarClick(t,u,n,r)},onMouseOver:function(r){return e.onStarHover(t,u,n,r)},onMouseLeave:function(r){return e.onStarHoverOut(t,u,n,r)}},e.renderIcon(t,u,n,r));f.push(a),f.push(i)},p=r;p>0;p--)d(p);return f.length?f:null}},{key:"renderIcon",value:function(e,t,n,r){var a=this.props,i=a.renderStarIcon,l=a.renderStarIconHalf;return"function"==typeof l&&Math.ceil(t)===e&&t%1!=0?l(e,t,n,r):"function"==typeof i?i(e,t,n,r):o.default.createElement("i",{key:"icon_"+r,style:{fontStyle:"normal"}},"â˜…")}},{key:"render",value:function(){var e=this.props,t=e.editing,n=e.className,r=(0,l.default)("dv-star-rating",{"dv-star-rating-non-editable":!t},n);return o.default.createElement("div",{style:{display:"inline-block",position:"relative"},className:r},this.renderStars())}}]),t}(a.Component);c.propTypes={name:i.default.string.isRequired,value:i.default.number,editing:i.default.bool,starCount:i.default.number,starColor:i.default.string,onStarClick:i.default.func,onStarHover:i.default.func,onStarHoverOut:i.default.func,renderStarIcon:i.default.func,renderStarIconHalf:i.default.func},c.defaultProps={starCount:5,editing:!0,starColor:"#ffb400",emptyStarColor:"#333"},t.default=c,e.exports=t.default},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;function i(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,l,u=i(e),c=1;c<arguments.length;c++){for(var s in n=Object(arguments[c]))a.call(n,s)&&(u[s]=n[s]);if(r){l=r(n);for(var f=0;f<l.length;f++)o.call(n,l[f])&&(u[l[f]]=n[l[f]])}}return u}},function(e,t,n){"use strict";e.exports=n(23)},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}}(),e.exports=n(16)},function(e,t,n){"use strict";(function(t){var n="__global_unique_id__";e.exports=function(){return t[n]=(t[n]||0)+1}}).call(this,n(21))},function(e,t,n){"use strict";var r=n(7),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},o={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},i={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function u(e){return r.isMemo(e)?i:l[e.$$typeof]||a}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=i;var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,m=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(m){var a=p(n);a&&a!==m&&e(t,a,r)}var i=s(n);f&&(i=i.concat(f(n)));for(var l=u(t),h=u(n),v=0;v<i.length;++v){var y=i[v];if(!(o[y]||r&&r[y]||h&&h[y]||l&&l[y])){var g=d(n,y);try{c(t,y,g)}catch(e){}}}}return t}},function(e,t,n){var r=n(12),a=n(13);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(a,o),a.locals?a.locals:{});e.exports=i},function(e,t,n){"use strict";var r,a=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},o=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),i=[];function l(e){for(var t=-1,n=0;n<i.length;n++)if(i[n].identifier===e){t=n;break}return t}function u(e,t){for(var n={},r=[],a=0;a<e.length;a++){var o=e[a],u=t.base?o[0]+t.base:o[0],c=n[u]||0,s="".concat(u," ").concat(c);n[u]=c+1;var f=l(s),d={css:o[1],media:o[2],sourceMap:o[3]};-1!==f?(i[f].references++,i[f].updater(d)):i.push({identifier:s,updater:v(d,t),references:1}),r.push(s)}return r}function c(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var a=n.nc;a&&(r.nonce=a)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var i=o(e.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}return t}var s,f=(s=[],function(e,t){return s[e]=t,s.filter(Boolean).join("\n")});function d(e,t,n,r){var a=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=f(t,a);else{var o=document.createTextNode(a),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(o,i[t]):e.appendChild(o)}}function p(e,t,n){var r=n.css,a=n.media,o=n.sourceMap;if(a?e.setAttribute("media",a):e.removeAttribute("media"),o&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var m=null,h=0;function v(e,t){var n,r,a;if(t.singleton){var o=h++;n=m||(m=c(t)),r=d.bind(null,n,o,!1),a=d.bind(null,n,o,!0)}else n=c(t),r=p.bind(null,n,t),a=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else a()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=a());var n=u(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var a=l(n[r]);i[a].references--}for(var o=u(e,t),c=0;c<n.length;c++){var s=l(n[c]);0===i[s].references&&(i[s].updater(),i.splice(s,1))}n=o}}}},function(e,t,n){(t=n(14)(!1)).push([e.i,".stars{font-size:50px}\n",""]),e.exports=t},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var a=(i=r,l=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),u="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),"/*# ".concat(u," */")),o=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[n].concat(o).concat([a]).join("\n")}var i,l,u;return[n].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var a={};if(r)for(var o=0;o<this.length;o++){var i=this[o][0];null!=i&&(a[i]=!0)}for(var l=0;l<e.length;l++){var u=[].concat(e[l]);r&&a[u[0]]||(n&&(u[2]?u[2]="".concat(n," and ").concat(u[2]):u[2]=n),t.push(u))}},t}},function(e,t,n){"use strict";
/** @license React v16.13.0
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(6),a="function"==typeof Symbol&&Symbol.for,o=a?Symbol.for("react.element"):60103,i=a?Symbol.for("react.portal"):60106,l=a?Symbol.for("react.fragment"):60107,u=a?Symbol.for("react.strict_mode"):60108,c=a?Symbol.for("react.profiler"):60114,s=a?Symbol.for("react.provider"):60109,f=a?Symbol.for("react.context"):60110,d=a?Symbol.for("react.forward_ref"):60112,p=a?Symbol.for("react.suspense"):60113,m=a?Symbol.for("react.memo"):60115,h=a?Symbol.for("react.lazy"):60116,v="function"==typeof Symbol&&Symbol.iterator;function y(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var g={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function w(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||g}function k(){}function x(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||g}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(y(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=w.prototype;var E=x.prototype=new k;E.constructor=x,r(E,w.prototype),E.isPureReactComponent=!0;var S={current:null},T=Object.prototype.hasOwnProperty,C={key:!0,ref:!0,__self:!0,__source:!0};function _(e,t,n){var r,a={},i=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)T.call(t,r)&&!C.hasOwnProperty(r)&&(a[r]=t[r]);var u=arguments.length-2;if(1===u)a.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];a.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===a[r]&&(a[r]=u[r]);return{$$typeof:o,type:e,key:i,ref:l,props:a,_owner:S.current}}function P(e){return"object"==typeof e&&null!==e&&e.$$typeof===o}var N=/\/+/g,O=[];function z(e,t,n,r){if(O.length){var a=O.pop();return a.result=e,a.keyPrefix=t,a.func=n,a.context=r,a.count=0,a}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function M(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>O.length&&O.push(e)}function R(e,t,n){return null==e?0:function e(t,n,r,a){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var u=!1;if(null===t)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case o:case i:u=!0}}if(u)return r(a,t,""===n?"."+I(t,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var s=n+I(l=t[c],c);u+=e(l,s,r,a)}else if(null===t||"object"!=typeof t?s=null:s="function"==typeof(s=v&&t[v]||t["@@iterator"])?s:null,"function"==typeof s)for(t=s.call(t),c=0;!(l=t.next()).done;)u+=e(l=l.value,s=n+I(l,c++),r,a);else if("object"===l)throw r=""+t,Error(y(31,"[object Object]"===r?"object with keys {"+Object.keys(t).join(", ")+"}":r,""));return u}(e,"",t,n)}function I(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function L(e,t){e.func.call(e.context,t,e.count++)}function F(e,t,n){var r=e.result,a=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?j(e,r,n,(function(e){return e})):null!=e&&(P(e)&&(e=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,a+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(N,"$&/")+"/")+n)),r.push(e))}function j(e,t,n,r,a){var o="";null!=n&&(o=(""+n).replace(N,"$&/")+"/"),R(e,F,t=z(t,o,r,a)),M(t)}var D={current:null};function A(){var e=D.current;if(null===e)throw Error(y(321));return e}var U={ReactCurrentDispatcher:D,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:S,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return j(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;R(e,L,t=z(null,null,t,n)),M(t)},count:function(e){return R(e,(function(){return null}),null)},toArray:function(e){var t=[];return j(e,t,null,(function(e){return e})),t},only:function(e){if(!P(e))throw Error(y(143));return e}},t.Component=w,t.Fragment=l,t.Profiler=c,t.PureComponent=x,t.StrictMode=u,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=U,t.cloneElement=function(e,t,n){if(null==e)throw Error(y(267,e));var a=r({},e.props),i=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=S.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)T.call(t,s)&&!C.hasOwnProperty(s)&&(a[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)a.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];a.children=c}return{$$typeof:o,type:e.type,key:i,ref:l,props:a,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=_,t.createFactory=function(e){var t=_.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:d,render:e}},t.isValidElement=P,t.lazy=function(e){return{$$typeof:h,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return A().useCallback(e,t)},t.useContext=function(e,t){return A().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return A().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return A().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return A().useLayoutEffect(e,t)},t.useMemo=function(e,t){return A().useMemo(e,t)},t.useReducer=function(e,t,n){return A().useReducer(e,t,n)},t.useRef=function(e){return A().useRef(e)},t.useState=function(e){return A().useState(e)},t.version="16.13.0"},function(e,t,n){"use strict";
/** @license React v16.13.0
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),a=n(6),o=n(17);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(i(227));function l(e,t,n,r,a,o,i,l,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var u=!1,c=null,s=!1,f=null,d={onError:function(e){u=!0,c=e}};function p(e,t,n,r,a,o,i,s,f){u=!1,c=null,l.apply(d,arguments)}var m=null,h=null,v=null;function y(e,t,n){var r=e.type||"unknown-event";e.currentTarget=v(n),function(e,t,n,r,a,o,l,d,m){if(p.apply(this,arguments),u){if(!u)throw Error(i(198));var h=c;u=!1,c=null,s||(s=!0,f=h)}}(r,t,void 0,e),e.currentTarget=null}var g=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;g.hasOwnProperty("ReactCurrentDispatcher")||(g.ReactCurrentDispatcher={current:null}),g.hasOwnProperty("ReactCurrentBatchConfig")||(g.ReactCurrentBatchConfig={suspense:null});var b=/^(.*)[\\\/]/,w="function"==typeof Symbol&&Symbol.for,k=w?Symbol.for("react.element"):60103,x=w?Symbol.for("react.portal"):60106,E=w?Symbol.for("react.fragment"):60107,S=w?Symbol.for("react.strict_mode"):60108,T=w?Symbol.for("react.profiler"):60114,C=w?Symbol.for("react.provider"):60109,_=w?Symbol.for("react.context"):60110,P=w?Symbol.for("react.concurrent_mode"):60111,N=w?Symbol.for("react.forward_ref"):60112,O=w?Symbol.for("react.suspense"):60113,z=w?Symbol.for("react.suspense_list"):60120,M=w?Symbol.for("react.memo"):60115,R=w?Symbol.for("react.lazy"):60116,I=w?Symbol.for("react.block"):60121,L="function"==typeof Symbol&&Symbol.iterator;function F(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=L&&e[L]||e["@@iterator"])?e:null}function j(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case E:return"Fragment";case x:return"Portal";case T:return"Profiler";case S:return"StrictMode";case O:return"Suspense";case z:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case _:return"Context.Consumer";case C:return"Context.Provider";case N:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case M:return j(e.type);case I:return j(e.render);case R:if(e=1===e._status?e._result:null)return j(e)}return null}function D(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,a=e._debugSource,o=j(e.type);n=null,r&&(n=j(r.type)),r=o,o="",a?o=" (at "+a.fileName.replace(b,"")+":"+a.lineNumber+")":n&&(o=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+o}t+=n,e=e.return}while(e);return t}var A=null,U={};function $(){if(A)for(var e in U){var t=U[e],n=A.indexOf(e);if(!(-1<n))throw Error(i(96,e));if(!V[n]){if(!t.extractEvents)throw Error(i(97,e));for(var r in V[n]=t,n=t.eventTypes){var a=void 0,o=n[r],l=t,u=r;if(W.hasOwnProperty(u))throw Error(i(99,u));W[u]=o;var c=o.phasedRegistrationNames;if(c){for(a in c)c.hasOwnProperty(a)&&H(c[a],l,u);a=!0}else o.registrationName?(H(o.registrationName,l,u),a=!0):a=!1;if(!a)throw Error(i(98,r,e))}}}}function H(e,t,n){if(B[e])throw Error(i(100,e));B[e]=t,Q[e]=t.eventTypes[n].dependencies}var V=[],W={},B={},Q={};function K(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!U.hasOwnProperty(t)||U[t]!==r){if(U[t])throw Error(i(102,t));U[t]=r,n=!0}}n&&$()}var q=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),Y=null,X=null,J=null;function G(e){if(e=h(e)){if("function"!=typeof Y)throw Error(i(280));var t=e.stateNode;t&&(t=m(t),Y(e.stateNode,e.type,t))}}function Z(e){X?J?J.push(e):J=[e]:X=e}function ee(){if(X){var e=X,t=J;if(J=X=null,G(e),t)for(e=0;e<t.length;e++)G(t[e])}}function te(e,t){return e(t)}function ne(e,t,n,r,a){return e(t,n,r,a)}function re(){}var ae=te,oe=!1,ie=!1;function le(){null===X&&null===J||(re(),ee())}function ue(e,t,n){if(ie)return e(t,n);ie=!0;try{return ae(e,t,n)}finally{ie=!1,le()}}var ce=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,se=Object.prototype.hasOwnProperty,fe={},de={};function pe(e,t,n,r,a,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o}var me={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){me[e]=new pe(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];me[t]=new pe(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){me[e]=new pe(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){me[e]=new pe(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){me[e]=new pe(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){me[e]=new pe(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){me[e]=new pe(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){me[e]=new pe(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){me[e]=new pe(e,5,!1,e.toLowerCase(),null,!1)}));var he=/[\-:]([a-z])/g;function ve(e){return e[1].toUpperCase()}function ye(e,t,n,r){var a=me.hasOwnProperty(t)?me[t]:null;(null!==a?0===a.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!se.call(de,e)||!se.call(fe,e)&&(ce.test(e)?de[e]=!0:(fe[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function ge(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function we(e){e._valueTracker||(e._valueTracker=function(e){var t=be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function ke(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=be(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function xe(e,t){var n=t.checked;return a({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=ge(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Se(e,t){null!=(t=t.checked)&&ye(e,"checked",t,!1)}function Te(e,t){Se(e,t);var n=ge(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?_e(e,t.type,n):t.hasOwnProperty("defaultValue")&&_e(e,t.type,ge(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Ce(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function _e(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Pe(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Ne(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+ge(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function Oe(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ze(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(i(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(i(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:ge(n)}}function Me(e,t){var n=ge(t.value),r=ge(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Re(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(he,ve);me[t]=new pe(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(he,ve);me[t]=new pe(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(he,ve);me[t]=new pe(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){me[e]=new pe(e,1,!1,e.toLowerCase(),null,!1)})),me.xlinkHref=new pe("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){me[e]=new pe(e,1,!1,e.toLowerCase(),null,!0)}));var Ie="http://www.w3.org/1999/xhtml",Le="http://www.w3.org/2000/svg";function Fe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function je(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Fe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var De,Ae=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,a){MSApp.execUnsafeLocalFunction((function(){return e(t,n)}))}:e}((function(e,t){if(e.namespaceURI!==Le||"innerHTML"in e)e.innerHTML=t;else{for((De=De||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=De.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function Ue(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function $e(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var He={animationend:$e("Animation","AnimationEnd"),animationiteration:$e("Animation","AnimationIteration"),animationstart:$e("Animation","AnimationStart"),transitionend:$e("Transition","TransitionEnd")},Ve={},We={};function Be(e){if(Ve[e])return Ve[e];if(!He[e])return e;var t,n=He[e];for(t in n)if(n.hasOwnProperty(t)&&t in We)return Ve[e]=n[t];return e}q&&(We=document.createElement("div").style,"AnimationEvent"in window||(delete He.animationend.animation,delete He.animationiteration.animation,delete He.animationstart.animation),"TransitionEvent"in window||delete He.transitionend.transition);var Qe=Be("animationend"),Ke=Be("animationiteration"),qe=Be("animationstart"),Ye=Be("transitionend"),Xe="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Je=new("function"==typeof WeakMap?WeakMap:Map);function Ge(e){var t=Je.get(e);return void 0===t&&(t=new Map,Je.set(e,t)),t}function Ze(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function et(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function tt(e){if(Ze(e)!==e)throw Error(i(188))}function nt(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ze(e)))throw Error(i(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(r=a.return)){n=r;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===n)return tt(a),e;if(o===r)return tt(a),t;o=o.sibling}throw Error(i(188))}if(n.return!==r.return)n=a,r=o;else{for(var l=!1,u=a.child;u;){if(u===n){l=!0,n=a,r=o;break}if(u===r){l=!0,r=a,n=o;break}u=u.sibling}if(!l){for(u=o.child;u;){if(u===n){l=!0,n=o,r=a;break}if(u===r){l=!0,r=o,n=a;break}u=u.sibling}if(!l)throw Error(i(189))}}if(n.alternate!==r)throw Error(i(190))}if(3!==n.tag)throw Error(i(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function rt(e,t){if(null==t)throw Error(i(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function at(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var ot=null;function it(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)y(e,t[r],n[r]);else t&&y(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function lt(e){if(null!==e&&(ot=rt(ot,e)),e=ot,ot=null,e){if(at(e,it),ot)throw Error(i(95));if(s)throw e=f,s=!1,f=null,e}}function ut(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ct(e){if(!q)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var st=[];function ft(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>st.length&&st.push(e)}function dt(e,t,n,r){if(st.length){var a=st.pop();return a.topLevelType=e,a.eventSystemFlags=r,a.nativeEvent=t,a.targetInst=n,a}return{topLevelType:e,eventSystemFlags:r,nativeEvent:t,targetInst:n,ancestors:[]}}function pt(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=_n(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var a=ut(e.nativeEvent);r=e.topLevelType;var o=e.nativeEvent,i=e.eventSystemFlags;0===n&&(i|=64);for(var l=null,u=0;u<V.length;u++){var c=V[u];c&&(c=c.extractEvents(r,t,o,a,i))&&(l=rt(l,c))}lt(l)}}function mt(e,t,n){if(!n.has(e)){switch(e){case"scroll":qt(t,"scroll",!0);break;case"focus":case"blur":qt(t,"focus",!0),qt(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":ct(e)&&qt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Xe.indexOf(e)&&Kt(e,t)}n.set(e,null)}}var ht,vt,yt,gt=!1,bt=[],wt=null,kt=null,xt=null,Et=new Map,St=new Map,Tt=[],Ct="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),_t="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function Pt(e,t,n,r,a){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:a,container:r}}function Nt(e,t){switch(e){case"focus":case"blur":wt=null;break;case"dragenter":case"dragleave":kt=null;break;case"mouseover":case"mouseout":xt=null;break;case"pointerover":case"pointerout":Et.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":St.delete(t.pointerId)}}function Ot(e,t,n,r,a,o){return null===e||e.nativeEvent!==o?(e=Pt(t,n,r,a,o),null!==t&&(null!==(t=Pn(t))&&vt(t)),e):(e.eventSystemFlags|=r,e)}function zt(e){var t=_n(e.target);if(null!==t){var n=Ze(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=et(n)))return e.blockedOn=t,void o.unstable_runWithPriority(e.priority,(function(){yt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Mt(e){if(null!==e.blockedOn)return!1;var t=Gt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=Pn(t);return null!==n&&vt(n),e.blockedOn=t,!1}return!0}function Rt(e,t,n){Mt(e)&&n.delete(t)}function It(){for(gt=!1;0<bt.length;){var e=bt[0];if(null!==e.blockedOn){null!==(e=Pn(e.blockedOn))&&ht(e);break}var t=Gt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:bt.shift()}null!==wt&&Mt(wt)&&(wt=null),null!==kt&&Mt(kt)&&(kt=null),null!==xt&&Mt(xt)&&(xt=null),Et.forEach(Rt),St.forEach(Rt)}function Lt(e,t){e.blockedOn===t&&(e.blockedOn=null,gt||(gt=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,It)))}function Ft(e){function t(t){return Lt(t,e)}if(0<bt.length){Lt(bt[0],e);for(var n=1;n<bt.length;n++){var r=bt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==wt&&Lt(wt,e),null!==kt&&Lt(kt,e),null!==xt&&Lt(xt,e),Et.forEach(t),St.forEach(t),n=0;n<Tt.length;n++)(r=Tt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Tt.length&&null===(n=Tt[0]).blockedOn;)zt(n),null===n.blockedOn&&Tt.shift()}var jt={},Dt=new Map,At=new Map,Ut=["abort","abort",Qe,"animationEnd",Ke,"animationIteration",qe,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ye,"transitionEnd","waiting","waiting"];function $t(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],a=e[n+1],o="on"+(a[0].toUpperCase()+a.slice(1));o={phasedRegistrationNames:{bubbled:o,captured:o+"Capture"},dependencies:[r],eventPriority:t},At.set(r,t),Dt.set(r,o),jt[a]=o}}$t("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),$t("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),$t(Ut,2);for(var Ht="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Vt=0;Vt<Ht.length;Vt++)At.set(Ht[Vt],0);var Wt=o.unstable_UserBlockingPriority,Bt=o.unstable_runWithPriority,Qt=!0;function Kt(e,t){qt(t,e,!1)}function qt(e,t,n){var r=At.get(t);switch(void 0===r?2:r){case 0:r=Yt.bind(null,t,1,e);break;case 1:r=Xt.bind(null,t,1,e);break;default:r=Jt.bind(null,t,1,e)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function Yt(e,t,n,r){oe||re();var a=Jt,o=oe;oe=!0;try{ne(a,e,t,n,r)}finally{(oe=o)||le()}}function Xt(e,t,n,r){Bt(Wt,Jt.bind(null,e,t,n,r))}function Jt(e,t,n,r){if(Qt)if(0<bt.length&&-1<Ct.indexOf(e))e=Pt(null,e,t,n,r),bt.push(e);else{var a=Gt(e,t,n,r);if(null===a)Nt(e,r);else if(-1<Ct.indexOf(e))e=Pt(a,e,t,n,r),bt.push(e);else if(!function(e,t,n,r,a){switch(t){case"focus":return wt=Ot(wt,e,t,n,r,a),!0;case"dragenter":return kt=Ot(kt,e,t,n,r,a),!0;case"mouseover":return xt=Ot(xt,e,t,n,r,a),!0;case"pointerover":var o=a.pointerId;return Et.set(o,Ot(Et.get(o)||null,e,t,n,r,a)),!0;case"gotpointercapture":return o=a.pointerId,St.set(o,Ot(St.get(o)||null,e,t,n,r,a)),!0}return!1}(a,e,t,n,r)){Nt(e,r),e=dt(e,r,null,t);try{ue(pt,e)}finally{ft(e)}}}}function Gt(e,t,n,r){if(null!==(n=_n(n=ut(r)))){var a=Ze(n);if(null===a)n=null;else{var o=a.tag;if(13===o){if(null!==(n=et(a)))return n;n=null}else if(3===o){if(a.stateNode.hydrate)return 3===a.tag?a.stateNode.containerInfo:null;n=null}else a!==n&&(n=null)}}e=dt(e,r,n,t);try{ue(pt,e)}finally{ft(e)}return null}var Zt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},en=["Webkit","ms","Moz","O"];function tn(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Zt.hasOwnProperty(e)&&Zt[e]?(""+t).trim():t+"px"}function nn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=tn(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(Zt).forEach((function(e){en.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Zt[t]=Zt[e]}))}));var rn=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function an(e,t){if(t){if(rn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if(!("object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(i(62,""))}}function on(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ln=Ie;function un(e,t){var n=Ge(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=Q[t];for(var r=0;r<t.length;r++)mt(t[r],e,n)}function cn(){}function sn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function fn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function dn(e,t){var n,r=fn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=fn(r)}}function pn(){for(var e=window,t=sn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=sn((e=t.contentWindow).document)}return t}function mn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var hn=null,vn=null;function yn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function gn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var bn="function"==typeof setTimeout?setTimeout:void 0,wn="function"==typeof clearTimeout?clearTimeout:void 0;function kn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function xn(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var En=Math.random().toString(36).slice(2),Sn="__reactInternalInstance$"+En,Tn="__reactEventHandlers$"+En,Cn="__reactContainere$"+En;function _n(e){var t=e[Sn];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Cn]||n[Sn]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=xn(e);null!==e;){if(n=e[Sn])return n;e=xn(e)}return t}n=(e=n).parentNode}return null}function Pn(e){return!(e=e[Sn]||e[Cn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Nn(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function On(e){return e[Tn]||null}function zn(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Mn(e,t){var n=e.stateNode;if(!n)return null;var r=m(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(i(231,t,typeof n));return n}function Rn(e,t,n){(t=Mn(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function In(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=zn(t);for(t=n.length;0<t--;)Rn(n[t],"captured",e);for(t=0;t<n.length;t++)Rn(n[t],"bubbled",e)}}function Ln(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=Mn(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function Fn(e){e&&e.dispatchConfig.registrationName&&Ln(e._targetInst,null,e)}function jn(e){at(e,In)}var Dn=null,An=null,Un=null;function $n(){if(Un)return Un;var e,t,n=An,r=n.length,a="value"in Dn?Dn.value:Dn.textContent,o=a.length;for(e=0;e<r&&n[e]===a[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===a[o-t];t++);return Un=a.slice(e,1<t?1-t:void 0)}function Hn(){return!0}function Vn(){return!1}function Wn(e,t,n,r){for(var a in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(a)&&((t=e[a])?this[a]=t(n):"target"===a?this.target=r:this[a]=n[a]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Hn:Vn,this.isPropagationStopped=Vn,this}function Bn(e,t,n,r){if(this.eventPool.length){var a=this.eventPool.pop();return this.call(a,e,t,n,r),a}return new this(e,t,n,r)}function Qn(e){if(!(e instanceof this))throw Error(i(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Kn(e){e.eventPool=[],e.getPooled=Bn,e.release=Qn}a(Wn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Hn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Hn)},persist:function(){this.isPersistent=Hn},isPersistent:Vn,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Vn,this._dispatchInstances=this._dispatchListeners=null}}),Wn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Wn.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var o=new t;return a(o,n.prototype),n.prototype=o,n.prototype.constructor=n,n.Interface=a({},r.Interface,e),n.extend=r.extend,Kn(n),n},Kn(Wn);var qn=Wn.extend({data:null}),Yn=Wn.extend({data:null}),Xn=[9,13,27,32],Jn=q&&"CompositionEvent"in window,Gn=null;q&&"documentMode"in document&&(Gn=document.documentMode);var Zn=q&&"TextEvent"in window&&!Gn,er=q&&(!Jn||Gn&&8<Gn&&11>=Gn),tr=String.fromCharCode(32),nr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},rr=!1;function ar(e,t){switch(e){case"keyup":return-1!==Xn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function or(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var ir=!1;var lr={eventTypes:nr,extractEvents:function(e,t,n,r){var a;if(Jn)e:{switch(e){case"compositionstart":var o=nr.compositionStart;break e;case"compositionend":o=nr.compositionEnd;break e;case"compositionupdate":o=nr.compositionUpdate;break e}o=void 0}else ir?ar(e,n)&&(o=nr.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=nr.compositionStart);return o?(er&&"ko"!==n.locale&&(ir||o!==nr.compositionStart?o===nr.compositionEnd&&ir&&(a=$n()):(An="value"in(Dn=r)?Dn.value:Dn.textContent,ir=!0)),o=qn.getPooled(o,t,n,r),a?o.data=a:null!==(a=or(n))&&(o.data=a),jn(o),a=o):a=null,(e=Zn?function(e,t){switch(e){case"compositionend":return or(t);case"keypress":return 32!==t.which?null:(rr=!0,tr);case"textInput":return(e=t.data)===tr&&rr?null:e;default:return null}}(e,n):function(e,t){if(ir)return"compositionend"===e||!Jn&&ar(e,t)?(e=$n(),Un=An=Dn=null,ir=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return er&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=Yn.getPooled(nr.beforeInput,t,n,r)).data=e,jn(t)):t=null,null===a?t:null===t?a:[a,t]}},ur={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function cr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!ur[e.type]:"textarea"===t}var sr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function fr(e,t,n){return(e=Wn.getPooled(sr.change,e,t,n)).type="change",Z(n),jn(e),e}var dr=null,pr=null;function mr(e){lt(e)}function hr(e){if(ke(Nn(e)))return e}function vr(e,t){if("change"===e)return t}var yr=!1;function gr(){dr&&(dr.detachEvent("onpropertychange",br),pr=dr=null)}function br(e){if("value"===e.propertyName&&hr(pr))if(e=fr(pr,e,ut(e)),oe)lt(e);else{oe=!0;try{te(mr,e)}finally{oe=!1,le()}}}function wr(e,t,n){"focus"===e?(gr(),pr=n,(dr=t).attachEvent("onpropertychange",br)):"blur"===e&&gr()}function kr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return hr(pr)}function xr(e,t){if("click"===e)return hr(t)}function Er(e,t){if("input"===e||"change"===e)return hr(t)}q&&(yr=ct("input")&&(!document.documentMode||9<document.documentMode));var Sr={eventTypes:sr,_isInputEventSupported:yr,extractEvents:function(e,t,n,r){var a=t?Nn(t):window,o=a.nodeName&&a.nodeName.toLowerCase();if("select"===o||"input"===o&&"file"===a.type)var i=vr;else if(cr(a))if(yr)i=Er;else{i=kr;var l=wr}else(o=a.nodeName)&&"input"===o.toLowerCase()&&("checkbox"===a.type||"radio"===a.type)&&(i=xr);if(i&&(i=i(e,t)))return fr(i,n,r);l&&l(e,a,t),"blur"===e&&(e=a._wrapperState)&&e.controlled&&"number"===a.type&&_e(a,"number",a.value)}},Tr=Wn.extend({view:null,detail:null}),Cr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function _r(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Cr[e])&&!!t[e]}function Pr(){return _r}var Nr=0,Or=0,zr=!1,Mr=!1,Rr=Tr.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Pr,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Nr;return Nr=e.screenX,zr?"mousemove"===e.type?e.screenX-t:0:(zr=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Or;return Or=e.screenY,Mr?"mousemove"===e.type?e.screenY-t:0:(Mr=!0,0)}}),Ir=Rr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Lr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Fr={eventTypes:Lr,extractEvents:function(e,t,n,r,a){var o="mouseover"===e||"pointerover"===e,i="mouseout"===e||"pointerout"===e;if(o&&0==(32&a)&&(n.relatedTarget||n.fromElement)||!i&&!o)return null;(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,i)?(i=t,null!==(t=(t=n.relatedTarget||n.toElement)?_n(t):null)&&(t!==Ze(t)||5!==t.tag&&6!==t.tag)&&(t=null)):i=null;if(i===t)return null;if("mouseout"===e||"mouseover"===e)var l=Rr,u=Lr.mouseLeave,c=Lr.mouseEnter,s="mouse";else"pointerout"!==e&&"pointerover"!==e||(l=Ir,u=Lr.pointerLeave,c=Lr.pointerEnter,s="pointer");if(e=null==i?o:Nn(i),o=null==t?o:Nn(t),(u=l.getPooled(u,i,n,r)).type=s+"leave",u.target=e,u.relatedTarget=o,(n=l.getPooled(c,t,n,r)).type=s+"enter",n.target=o,n.relatedTarget=e,s=t,(r=i)&&s)e:{for(c=s,i=0,e=l=r;e;e=zn(e))i++;for(e=0,t=c;t;t=zn(t))e++;for(;0<i-e;)l=zn(l),i--;for(;0<e-i;)c=zn(c),e--;for(;i--;){if(l===c||l===c.alternate)break e;l=zn(l),c=zn(c)}l=null}else l=null;for(c=l,l=[];r&&r!==c&&(null===(i=r.alternate)||i!==c);)l.push(r),r=zn(r);for(r=[];s&&s!==c&&(null===(i=s.alternate)||i!==c);)r.push(s),s=zn(s);for(s=0;s<l.length;s++)Ln(l[s],"bubbled",u);for(s=r.length;0<s--;)Ln(r[s],"captured",n);return 0==(64&a)?[u]:[u,n]}};var jr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Dr=Object.prototype.hasOwnProperty;function Ar(e,t){if(jr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Dr.call(t,n[r])||!jr(e[n[r]],t[n[r]]))return!1;return!0}var Ur=q&&"documentMode"in document&&11>=document.documentMode,$r={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Hr=null,Vr=null,Wr=null,Br=!1;function Qr(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Br||null==Hr||Hr!==sn(n)?null:("selectionStart"in(n=Hr)&&mn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Wr&&Ar(Wr,n)?null:(Wr=n,(e=Wn.getPooled($r.select,Vr,e,t)).type="select",e.target=Hr,jn(e),e))}var Kr={eventTypes:$r,extractEvents:function(e,t,n,r,a,o){if(!(o=!(a=o||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{a=Ge(a),o=Q.onSelect;for(var i=0;i<o.length;i++)if(!a.has(o[i])){a=!1;break e}a=!0}o=!a}if(o)return null;switch(a=t?Nn(t):window,e){case"focus":(cr(a)||"true"===a.contentEditable)&&(Hr=a,Vr=t,Wr=null);break;case"blur":Wr=Vr=Hr=null;break;case"mousedown":Br=!0;break;case"contextmenu":case"mouseup":case"dragend":return Br=!1,Qr(n,r);case"selectionchange":if(Ur)break;case"keydown":case"keyup":return Qr(n,r)}return null}},qr=Wn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Yr=Wn.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Xr=Tr.extend({relatedTarget:null});function Jr(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Gr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Zr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},ea=Tr.extend({key:function(e){if(e.key){var t=Gr[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Jr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Zr[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Pr,charCode:function(e){return"keypress"===e.type?Jr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Jr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),ta=Rr.extend({dataTransfer:null}),na=Tr.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Pr}),ra=Wn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),aa=Rr.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),oa={eventTypes:jt,extractEvents:function(e,t,n,r){var a=Dt.get(e);if(!a)return null;switch(e){case"keypress":if(0===Jr(n))return null;case"keydown":case"keyup":e=ea;break;case"blur":case"focus":e=Xr;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Rr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=ta;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=na;break;case Qe:case Ke:case qe:e=qr;break;case Ye:e=ra;break;case"scroll":e=Tr;break;case"wheel":e=aa;break;case"copy":case"cut":case"paste":e=Yr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Ir;break;default:e=Wn}return jn(t=e.getPooled(a,t,n,r)),t}};if(A)throw Error(i(101));A=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),$(),m=On,h=Pn,v=Nn,K({SimpleEventPlugin:oa,EnterLeaveEventPlugin:Fr,ChangeEventPlugin:Sr,SelectEventPlugin:Kr,BeforeInputEventPlugin:lr});var ia=[],la=-1;function ua(e){0>la||(e.current=ia[la],ia[la]=null,la--)}function ca(e,t){la++,ia[la]=e.current,e.current=t}var sa={},fa={current:sa},da={current:!1},pa=sa;function ma(e,t){var n=e.type.contextTypes;if(!n)return sa;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in n)o[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function ha(e){return null!=(e=e.childContextTypes)}function va(){ua(da),ua(fa)}function ya(e,t,n){if(fa.current!==sa)throw Error(i(168));ca(fa,t),ca(da,n)}function ga(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var o in r=r.getChildContext())if(!(o in e))throw Error(i(108,j(t)||"Unknown",o));return a({},n,{},r)}function ba(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||sa,pa=fa.current,ca(fa,e),ca(da,da.current),!0}function wa(e,t,n){var r=e.stateNode;if(!r)throw Error(i(169));n?(e=ga(e,t,pa),r.__reactInternalMemoizedMergedChildContext=e,ua(da),ua(fa),ca(fa,e)):ua(da),ca(da,n)}var ka=o.unstable_runWithPriority,xa=o.unstable_scheduleCallback,Ea=o.unstable_cancelCallback,Sa=o.unstable_requestPaint,Ta=o.unstable_now,Ca=o.unstable_getCurrentPriorityLevel,_a=o.unstable_ImmediatePriority,Pa=o.unstable_UserBlockingPriority,Na=o.unstable_NormalPriority,Oa=o.unstable_LowPriority,za=o.unstable_IdlePriority,Ma={},Ra=o.unstable_shouldYield,Ia=void 0!==Sa?Sa:function(){},La=null,Fa=null,ja=!1,Da=Ta(),Aa=1e4>Da?Ta:function(){return Ta()-Da};function Ua(){switch(Ca()){case _a:return 99;case Pa:return 98;case Na:return 97;case Oa:return 96;case za:return 95;default:throw Error(i(332))}}function $a(e){switch(e){case 99:return _a;case 98:return Pa;case 97:return Na;case 96:return Oa;case 95:return za;default:throw Error(i(332))}}function Ha(e,t){return e=$a(e),ka(e,t)}function Va(e,t,n){return e=$a(e),xa(e,t,n)}function Wa(e){return null===La?(La=[e],Fa=xa(_a,Qa)):La.push(e),Ma}function Ba(){if(null!==Fa){var e=Fa;Fa=null,Ea(e)}Qa()}function Qa(){if(!ja&&null!==La){ja=!0;var e=0;try{var t=La;Ha(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),La=null}catch(t){throw null!==La&&(La=La.slice(e+1)),xa(_a,Ba),t}finally{ja=!1}}}function Ka(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function qa(e,t){if(e&&e.defaultProps)for(var n in t=a({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var Ya={current:null},Xa=null,Ja=null,Ga=null;function Za(){Ga=Ja=Xa=null}function eo(e){var t=Ya.current;ua(Ya),e.type._context._currentValue=t}function to(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function no(e,t){Xa=e,Ga=Ja=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Oi=!0),e.firstContext=null)}function ro(e,t){if(Ga!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Ga=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Ja){if(null===Xa)throw Error(i(308));Ja=t,Xa.dependencies={expirationTime:0,firstContext:t,responders:null}}else Ja=Ja.next=t;return e._currentValue}var ao=!1;function oo(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function io(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function lo(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function uo(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function co(e,t){var n=e.alternate;null!==n&&io(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function so(e,t,n,r){var o=e.updateQueue;ao=!1;var i=o.baseQueue,l=o.shared.pending;if(null!==l){if(null!==i){var u=i.next;i.next=l.next,l.next=u}i=l,o.shared.pending=null,null!==(u=e.alternate)&&(null!==(u=u.updateQueue)&&(u.baseQueue=l))}if(null!==i){u=i.next;var c=o.baseState,s=0,f=null,d=null,p=null;if(null!==u)for(var m=u;;){if((l=m.expirationTime)<r){var h={expirationTime:m.expirationTime,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null};null===p?(d=p=h,f=c):p=p.next=h,l>s&&(s=l)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null}),ou(l,m.suspenseConfig);e:{var v=e,y=m;switch(l=t,h=n,y.tag){case 1:if("function"==typeof(v=y.payload)){c=v.call(h,c,l);break e}c=v;break e;case 3:v.effectTag=-4097&v.effectTag|64;case 0:if(null==(l="function"==typeof(v=y.payload)?v.call(h,c,l):v))break e;c=a({},c,l);break e;case 2:ao=!0}}null!==m.callback&&(e.effectTag|=32,null===(l=o.effects)?o.effects=[m]:l.push(m))}if(null===(m=m.next)||m===u){if(null===(l=o.shared.pending))break;m=i.next=l.next,l.next=u,o.baseQueue=i=l,o.shared.pending=null}}null===p?f=c:p.next=d,o.baseState=f,o.baseQueue=p,iu(s),e.expirationTime=s,e.memoizedState=c}}function fo(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=a,a=n,"function"!=typeof r)throw Error(i(191,r));r.call(a)}}}var po=g.ReactCurrentBatchConfig,mo=(new r.Component).refs;function ho(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:a({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var vo={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Ze(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Ql(),a=po.suspense;(a=lo(r=Kl(r,e,a),a)).payload=t,null!=n&&(a.callback=n),uo(e,a),ql(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Ql(),a=po.suspense;(a=lo(r=Kl(r,e,a),a)).tag=1,a.payload=t,null!=n&&(a.callback=n),uo(e,a),ql(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Ql(),r=po.suspense;(r=lo(n=Kl(n,e,r),r)).tag=2,null!=t&&(r.callback=t),uo(e,r),ql(e,n)}};function yo(e,t,n,r,a,o,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,i):!t.prototype||!t.prototype.isPureReactComponent||(!Ar(n,r)||!Ar(a,o))}function go(e,t,n){var r=!1,a=sa,o=t.contextType;return"object"==typeof o&&null!==o?o=ro(o):(a=ha(t)?pa:fa.current,o=(r=null!=(r=t.contextTypes))?ma(e,a):sa),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=vo,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=o),t}function bo(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&vo.enqueueReplaceState(t,t.state,null)}function wo(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=mo,oo(e);var o=t.contextType;"object"==typeof o&&null!==o?a.context=ro(o):(o=ha(t)?pa:fa.current,a.context=ma(e,o)),so(e,n,a,r),a.state=e.memoizedState,"function"==typeof(o=t.getDerivedStateFromProps)&&(ho(e,t,o,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&vo.enqueueReplaceState(a,a.state,null),so(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.effectTag|=4)}var ko=Array.isArray;function xo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(i(309));var r=n.stateNode}if(!r)throw Error(i(147,e));var a=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===a?t.ref:((t=function(e){var t=r.refs;t===mo&&(t=r.refs={}),null===e?delete t[a]:t[a]=e})._stringRef=a,t)}if("string"!=typeof e)throw Error(i(284));if(!n._owner)throw Error(i(290,e))}return e}function Eo(e,t){if("textarea"!==e.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function So(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Cu(e,t)).index=0,e.sibling=null,e}function o(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Nu(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=a(t,n.props)).ref=xo(e,t,n),r.return=e,r):((r=_u(n.type,n.key,n.props,null,e.mode,r)).ref=xo(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Ou(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function f(e,t,n,r,o){return null===t||7!==t.tag?((t=Pu(n,e.mode,r,o)).return=e,t):((t=a(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Nu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case k:return(n=_u(t.type,t.key,t.props,null,e.mode,n)).ref=xo(e,null,t),n.return=e,n;case x:return(t=Ou(t,e.mode,n)).return=e,t}if(ko(t)||F(t))return(t=Pu(t,e.mode,n,null)).return=e,t;Eo(e,t)}return null}function p(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==a?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case k:return n.key===a?n.type===E?f(e,t,n.props.children,r,a):c(e,t,n,r):null;case x:return n.key===a?s(e,t,n,r):null}if(ko(n)||F(n))return null!==a?null:f(e,t,n,r,null);Eo(e,n)}return null}function m(e,t,n,r,a){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case k:return e=e.get(null===r.key?n:r.key)||null,r.type===E?f(t,e,r.props.children,a,r.key):c(t,e,r,a);case x:return s(t,e=e.get(null===r.key?n:r.key)||null,r,a)}if(ko(r)||F(r))return f(t,e=e.get(n)||null,r,a,null);Eo(t,r)}return null}function h(a,i,l,u){for(var c=null,s=null,f=i,h=i=0,v=null;null!==f&&h<l.length;h++){f.index>h?(v=f,f=null):v=f.sibling;var y=p(a,f,l[h],u);if(null===y){null===f&&(f=v);break}e&&f&&null===y.alternate&&t(a,f),i=o(y,i,h),null===s?c=y:s.sibling=y,s=y,f=v}if(h===l.length)return n(a,f),c;if(null===f){for(;h<l.length;h++)null!==(f=d(a,l[h],u))&&(i=o(f,i,h),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(a,f);h<l.length;h++)null!==(v=m(f,a,h,l[h],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?h:v.key),i=o(v,i,h),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach((function(e){return t(a,e)})),c}function v(a,l,u,c){var s=F(u);if("function"!=typeof s)throw Error(i(150));if(null==(u=s.call(u)))throw Error(i(151));for(var f=s=null,h=l,v=l=0,y=null,g=u.next();null!==h&&!g.done;v++,g=u.next()){h.index>v?(y=h,h=null):y=h.sibling;var b=p(a,h,g.value,c);if(null===b){null===h&&(h=y);break}e&&h&&null===b.alternate&&t(a,h),l=o(b,l,v),null===f?s=b:f.sibling=b,f=b,h=y}if(g.done)return n(a,h),s;if(null===h){for(;!g.done;v++,g=u.next())null!==(g=d(a,g.value,c))&&(l=o(g,l,v),null===f?s=g:f.sibling=g,f=g);return s}for(h=r(a,h);!g.done;v++,g=u.next())null!==(g=m(h,a,v,g.value,c))&&(e&&null!==g.alternate&&h.delete(null===g.key?v:g.key),l=o(g,l,v),null===f?s=g:f.sibling=g,f=g);return e&&h.forEach((function(e){return t(a,e)})),s}return function(e,r,o,u){var c="object"==typeof o&&null!==o&&o.type===E&&null===o.key;c&&(o=o.props.children);var s="object"==typeof o&&null!==o;if(s)switch(o.$$typeof){case k:e:{for(s=o.key,c=r;null!==c;){if(c.key===s){switch(c.tag){case 7:if(o.type===E){n(e,c.sibling),(r=a(c,o.props.children)).return=e,e=r;break e}break;default:if(c.elementType===o.type){n(e,c.sibling),(r=a(c,o.props)).ref=xo(e,c,o),r.return=e,e=r;break e}}n(e,c);break}t(e,c),c=c.sibling}o.type===E?((r=Pu(o.props.children,e.mode,u,o.key)).return=e,e=r):((u=_u(o.type,o.key,o.props,null,e.mode,u)).ref=xo(e,r,o),u.return=e,e=u)}return l(e);case x:e:{for(c=o.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===o.containerInfo&&r.stateNode.implementation===o.implementation){n(e,r.sibling),(r=a(r,o.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Ou(o,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof o||"number"==typeof o)return o=""+o,null!==r&&6===r.tag?(n(e,r.sibling),(r=a(r,o)).return=e,e=r):(n(e,r),(r=Nu(o,e.mode,u)).return=e,e=r),l(e);if(ko(o))return h(e,r,o,u);if(F(o))return v(e,r,o,u);if(s&&Eo(e,o),void 0===o&&!c)switch(e.tag){case 1:case 0:throw e=e.type,Error(i(152,e.displayName||e.name||"Component"))}return n(e,r)}}var To=So(!0),Co=So(!1),_o={},Po={current:_o},No={current:_o},Oo={current:_o};function zo(e){if(e===_o)throw Error(i(174));return e}function Mo(e,t){switch(ca(Oo,t),ca(No,e),ca(Po,_o),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:je(null,"");break;default:t=je(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}ua(Po),ca(Po,t)}function Ro(){ua(Po),ua(No),ua(Oo)}function Io(e){zo(Oo.current);var t=zo(Po.current),n=je(t,e.type);t!==n&&(ca(No,e),ca(Po,n))}function Lo(e){No.current===e&&(ua(Po),ua(No))}var Fo={current:0};function jo(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Do(e,t){return{responder:e,props:t}}var Ao=g.ReactCurrentDispatcher,Uo=g.ReactCurrentBatchConfig,$o=0,Ho=null,Vo=null,Wo=null,Bo=!1;function Qo(){throw Error(i(321))}function Ko(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!jr(e[n],t[n]))return!1;return!0}function qo(e,t,n,r,a,o){if($o=o,Ho=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,Ao.current=null===e||null===e.memoizedState?yi:gi,e=n(r,a),t.expirationTime===$o){o=0;do{if(t.expirationTime=0,!(25>o))throw Error(i(301));o+=1,Wo=Vo=null,t.updateQueue=null,Ao.current=bi,e=n(r,a)}while(t.expirationTime===$o)}if(Ao.current=vi,t=null!==Vo&&null!==Vo.next,$o=0,Wo=Vo=Ho=null,Bo=!1,t)throw Error(i(300));return e}function Yo(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Wo?Ho.memoizedState=Wo=e:Wo=Wo.next=e,Wo}function Xo(){if(null===Vo){var e=Ho.alternate;e=null!==e?e.memoizedState:null}else e=Vo.next;var t=null===Wo?Ho.memoizedState:Wo.next;if(null!==t)Wo=t,Vo=e;else{if(null===e)throw Error(i(310));e={memoizedState:(Vo=e).memoizedState,baseState:Vo.baseState,baseQueue:Vo.baseQueue,queue:Vo.queue,next:null},null===Wo?Ho.memoizedState=Wo=e:Wo=Wo.next=e}return Wo}function Jo(e,t){return"function"==typeof t?t(e):t}function Go(e){var t=Xo(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=Vo,a=r.baseQueue,o=n.pending;if(null!==o){if(null!==a){var l=a.next;a.next=o.next,o.next=l}r.baseQueue=a=o,n.pending=null}if(null!==a){a=a.next,r=r.baseState;var u=l=o=null,c=a;do{var s=c.expirationTime;if(s<$o){var f={expirationTime:c.expirationTime,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(l=u=f,o=r):u=u.next=f,s>Ho.expirationTime&&(Ho.expirationTime=s,iu(s))}else null!==u&&(u=u.next={expirationTime:1073741823,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),ou(s,c.suspenseConfig),r=c.eagerReducer===e?c.eagerState:e(r,c.action);c=c.next}while(null!==c&&c!==a);null===u?o=r:u.next=l,jr(r,t.memoizedState)||(Oi=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function Zo(e){var t=Xo(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,o=t.memoizedState;if(null!==a){n.pending=null;var l=a=a.next;do{o=e(o,l.action),l=l.next}while(l!==a);jr(o,t.memoizedState)||(Oi=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function ei(e){var t=Yo();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:Jo,lastRenderedState:e}).dispatch=hi.bind(null,Ho,e),[t.memoizedState,e]}function ti(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Ho.updateQueue)?(t={lastEffect:null},Ho.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function ni(){return Xo().memoizedState}function ri(e,t,n,r){var a=Yo();Ho.effectTag|=e,a.memoizedState=ti(1|t,n,void 0,void 0===r?null:r)}function ai(e,t,n,r){var a=Xo();r=void 0===r?null:r;var o=void 0;if(null!==Vo){var i=Vo.memoizedState;if(o=i.destroy,null!==r&&Ko(r,i.deps))return void ti(t,n,o,r)}Ho.effectTag|=e,a.memoizedState=ti(1|t,n,o,r)}function oi(e,t){return ri(516,4,e,t)}function ii(e,t){return ai(516,4,e,t)}function li(e,t){return ai(4,2,e,t)}function ui(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function ci(e,t,n){return n=null!=n?n.concat([e]):null,ai(4,2,ui.bind(null,t,e),n)}function si(){}function fi(e,t){return Yo().memoizedState=[e,void 0===t?null:t],e}function di(e,t){var n=Xo();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ko(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function pi(e,t){var n=Xo();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ko(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function mi(e,t,n){var r=Ua();Ha(98>r?98:r,(function(){e(!0)})),Ha(97<r?97:r,(function(){var r=Uo.suspense;Uo.suspense=void 0===t?null:t;try{e(!1),n()}finally{Uo.suspense=r}}))}function hi(e,t,n){var r=Ql(),a=po.suspense;a={expirationTime:r=Kl(r,e,a),suspenseConfig:a,action:n,eagerReducer:null,eagerState:null,next:null};var o=t.pending;if(null===o?a.next=a:(a.next=o.next,o.next=a),t.pending=a,o=e.alternate,e===Ho||null!==o&&o===Ho)Bo=!0,a.expirationTime=$o,Ho.expirationTime=$o;else{if(0===e.expirationTime&&(null===o||0===o.expirationTime)&&null!==(o=t.lastRenderedReducer))try{var i=t.lastRenderedState,l=o(i,n);if(a.eagerReducer=o,a.eagerState=l,jr(l,i))return}catch(e){}ql(e,r)}}var vi={readContext:ro,useCallback:Qo,useContext:Qo,useEffect:Qo,useImperativeHandle:Qo,useLayoutEffect:Qo,useMemo:Qo,useReducer:Qo,useRef:Qo,useState:Qo,useDebugValue:Qo,useResponder:Qo,useDeferredValue:Qo,useTransition:Qo},yi={readContext:ro,useCallback:fi,useContext:ro,useEffect:oi,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,ri(4,2,ui.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ri(4,2,e,t)},useMemo:function(e,t){var n=Yo();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Yo();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=hi.bind(null,Ho,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Yo().memoizedState=e},useState:ei,useDebugValue:si,useResponder:Do,useDeferredValue:function(e,t){var n=ei(e),r=n[0],a=n[1];return oi((function(){var n=Uo.suspense;Uo.suspense=void 0===t?null:t;try{a(e)}finally{Uo.suspense=n}}),[e,t]),r},useTransition:function(e){var t=ei(!1),n=t[0];return t=t[1],[fi(mi.bind(null,t,e),[t,e]),n]}},gi={readContext:ro,useCallback:di,useContext:ro,useEffect:ii,useImperativeHandle:ci,useLayoutEffect:li,useMemo:pi,useReducer:Go,useRef:ni,useState:function(){return Go(Jo)},useDebugValue:si,useResponder:Do,useDeferredValue:function(e,t){var n=Go(Jo),r=n[0],a=n[1];return ii((function(){var n=Uo.suspense;Uo.suspense=void 0===t?null:t;try{a(e)}finally{Uo.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Go(Jo),n=t[0];return t=t[1],[di(mi.bind(null,t,e),[t,e]),n]}},bi={readContext:ro,useCallback:di,useContext:ro,useEffect:ii,useImperativeHandle:ci,useLayoutEffect:li,useMemo:pi,useReducer:Zo,useRef:ni,useState:function(){return Zo(Jo)},useDebugValue:si,useResponder:Do,useDeferredValue:function(e,t){var n=Zo(Jo),r=n[0],a=n[1];return ii((function(){var n=Uo.suspense;Uo.suspense=void 0===t?null:t;try{a(e)}finally{Uo.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Zo(Jo),n=t[0];return t=t[1],[di(mi.bind(null,t,e),[t,e]),n]}},wi=null,ki=null,xi=!1;function Ei(e,t){var n=Su(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Si(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Ti(e){if(xi){var t=ki;if(t){var n=t;if(!Si(e,t)){if(!(t=kn(n.nextSibling))||!Si(e,t))return e.effectTag=-1025&e.effectTag|2,xi=!1,void(wi=e);Ei(wi,n)}wi=e,ki=kn(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,xi=!1,wi=e}}function Ci(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;wi=e}function _i(e){if(e!==wi)return!1;if(!xi)return Ci(e),xi=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!gn(t,e.memoizedProps))for(t=ki;t;)Ei(e,t),t=kn(t.nextSibling);if(Ci(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ki=kn(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ki=null}}else ki=wi?kn(e.stateNode.nextSibling):null;return!0}function Pi(){ki=wi=null,xi=!1}var Ni=g.ReactCurrentOwner,Oi=!1;function zi(e,t,n,r){t.child=null===e?Co(t,null,n,r):To(t,e.child,n,r)}function Mi(e,t,n,r,a){n=n.render;var o=t.ref;return no(t,a),r=qo(e,t,n,r,o,a),null===e||Oi?(t.effectTag|=1,zi(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=a&&(e.expirationTime=0),qi(e,t,a))}function Ri(e,t,n,r,a,o){if(null===e){var i=n.type;return"function"!=typeof i||Tu(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=_u(n.type,null,r,null,t.mode,o)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Ii(e,t,i,r,a,o))}return i=e.child,a<o&&(a=i.memoizedProps,(n=null!==(n=n.compare)?n:Ar)(a,r)&&e.ref===t.ref)?qi(e,t,o):(t.effectTag|=1,(e=Cu(i,r)).ref=t.ref,e.return=t,t.child=e)}function Ii(e,t,n,r,a,o){return null!==e&&Ar(e.memoizedProps,r)&&e.ref===t.ref&&(Oi=!1,a<o)?(t.expirationTime=e.expirationTime,qi(e,t,o)):Fi(e,t,n,r,o)}function Li(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Fi(e,t,n,r,a){var o=ha(n)?pa:fa.current;return o=ma(t,o),no(t,a),n=qo(e,t,n,r,o,a),null===e||Oi?(t.effectTag|=1,zi(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=a&&(e.expirationTime=0),qi(e,t,a))}function ji(e,t,n,r,a){if(ha(n)){var o=!0;ba(t)}else o=!1;if(no(t,a),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),go(t,n,r),wo(t,n,r,a),r=!0;else if(null===e){var i=t.stateNode,l=t.memoizedProps;i.props=l;var u=i.context,c=n.contextType;"object"==typeof c&&null!==c?c=ro(c):c=ma(t,c=ha(n)?pa:fa.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof i.getSnapshotBeforeUpdate;f||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==c)&&bo(t,i,r,c),ao=!1;var d=t.memoizedState;i.state=d,so(t,r,i,a),u=t.memoizedState,l!==r||d!==u||da.current||ao?("function"==typeof s&&(ho(t,n,s,r),u=t.memoizedState),(l=ao||yo(t,n,l,r,d,u,c))?(f||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.effectTag|=4)):("function"==typeof i.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),i.props=r,i.state=u,i.context=c,r=l):("function"==typeof i.componentDidMount&&(t.effectTag|=4),r=!1)}else i=t.stateNode,io(e,t),l=t.memoizedProps,i.props=t.type===t.elementType?l:qa(t.type,l),u=i.context,"object"==typeof(c=n.contextType)&&null!==c?c=ro(c):c=ma(t,c=ha(n)?pa:fa.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==c)&&bo(t,i,r,c),ao=!1,u=t.memoizedState,i.state=u,so(t,r,i,a),d=t.memoizedState,l!==r||u!==d||da.current||ao?("function"==typeof s&&(ho(t,n,s,r),d=t.memoizedState),(s=ao||yo(t,n,l,r,u,d,c))?(f||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,d,c),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,d,c)),"function"==typeof i.componentDidUpdate&&(t.effectTag|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),i.props=r,i.state=d,i.context=c,r=s):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return Di(e,t,n,r,o,a)}function Di(e,t,n,r,a,o){Li(e,t);var i=0!=(64&t.effectTag);if(!r&&!i)return a&&wa(t,n,!1),qi(e,t,o);r=t.stateNode,Ni.current=t;var l=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&i?(t.child=To(t,e.child,null,o),t.child=To(t,null,l,o)):zi(e,t,l,o),t.memoizedState=r.state,a&&wa(t,n,!0),t.child}function Ai(e){var t=e.stateNode;t.pendingContext?ya(0,t.pendingContext,t.pendingContext!==t.context):t.context&&ya(0,t.context,!1),Mo(e,t.containerInfo)}var Ui,$i,Hi,Vi={dehydrated:null,retryTime:0};function Wi(e,t,n){var r,a=t.mode,o=t.pendingProps,i=Fo.current,l=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&i)&&(null===e||null!==e.memoizedState)),r?(l=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(i|=1),ca(Fo,1&i),null===e){if(void 0!==o.fallback&&Ti(t),l){if(l=o.fallback,(o=Pu(null,a,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,o.child=e;null!==e;)e.return=o,e=e.sibling;return(n=Pu(l,a,n,null)).return=t,o.sibling=n,t.memoizedState=Vi,t.child=o,n}return a=o.children,t.memoizedState=null,t.child=Co(t,null,a,n)}if(null!==e.memoizedState){if(a=(e=e.child).sibling,l){if(o=o.fallback,(n=Cu(e,e.pendingProps)).return=t,0==(2&t.mode)&&(l=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=l;null!==l;)l.return=n,l=l.sibling;return(a=Cu(a,o)).return=t,n.sibling=a,n.childExpirationTime=0,t.memoizedState=Vi,t.child=n,a}return n=To(t,e.child,o.children,n),t.memoizedState=null,t.child=n}if(e=e.child,l){if(l=o.fallback,(o=Pu(null,a,0,null)).return=t,o.child=e,null!==e&&(e.return=o),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,o.child=e;null!==e;)e.return=o,e=e.sibling;return(n=Pu(l,a,n,null)).return=t,o.sibling=n,n.effectTag|=2,o.childExpirationTime=0,t.memoizedState=Vi,t.child=o,n}return t.memoizedState=null,t.child=To(t,e,o.children,n)}function Bi(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),to(e.return,t)}function Qi(e,t,n,r,a,o){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:a,lastEffect:o}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=n,i.tailExpiration=0,i.tailMode=a,i.lastEffect=o)}function Ki(e,t,n){var r=t.pendingProps,a=r.revealOrder,o=r.tail;if(zi(e,t,r.children,n),0!=(2&(r=Fo.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Bi(e,n);else if(19===e.tag)Bi(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ca(Fo,r),0==(2&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===jo(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Qi(t,!1,a,n,o,t.lastEffect);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===jo(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Qi(t,!0,n,null,o,t.lastEffect);break;case"together":Qi(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function qi(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&iu(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(n=Cu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Cu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Yi(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Xi(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return ha(t.type)&&va(),null;case 3:return Ro(),ua(da),ua(fa),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!_i(t)||(t.effectTag|=4),null;case 5:Lo(t),n=zo(Oo.current);var o=t.type;if(null!==e&&null!=t.stateNode)$i(e,t,o,r,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!r){if(null===t.stateNode)throw Error(i(166));return null}if(e=zo(Po.current),_i(t)){r=t.stateNode,o=t.type;var l=t.memoizedProps;switch(r[Sn]=t,r[Tn]=l,o){case"iframe":case"object":case"embed":Kt("load",r);break;case"video":case"audio":for(e=0;e<Xe.length;e++)Kt(Xe[e],r);break;case"source":Kt("error",r);break;case"img":case"image":case"link":Kt("error",r),Kt("load",r);break;case"form":Kt("reset",r),Kt("submit",r);break;case"details":Kt("toggle",r);break;case"input":Ee(r,l),Kt("invalid",r),un(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!l.multiple},Kt("invalid",r),un(n,"onChange");break;case"textarea":ze(r,l),Kt("invalid",r),un(n,"onChange")}for(var u in an(o,l),e=null,l)if(l.hasOwnProperty(u)){var c=l[u];"children"===u?"string"==typeof c?r.textContent!==c&&(e=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(e=["children",""+c]):B.hasOwnProperty(u)&&null!=c&&un(n,u)}switch(o){case"input":we(r),Ce(r,l,!0);break;case"textarea":we(r),Re(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=cn)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(u=9===n.nodeType?n:n.ownerDocument,e===ln&&(e=Fe(o)),e===ln?"script"===o?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(o,{is:r.is}):(e=u.createElement(o),"select"===o&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,o),e[Sn]=t,e[Tn]=r,Ui(e,t),t.stateNode=e,u=on(o,r),o){case"iframe":case"object":case"embed":Kt("load",e),c=r;break;case"video":case"audio":for(c=0;c<Xe.length;c++)Kt(Xe[c],e);c=r;break;case"source":Kt("error",e),c=r;break;case"img":case"image":case"link":Kt("error",e),Kt("load",e),c=r;break;case"form":Kt("reset",e),Kt("submit",e),c=r;break;case"details":Kt("toggle",e),c=r;break;case"input":Ee(e,r),c=xe(e,r),Kt("invalid",e),un(n,"onChange");break;case"option":c=Pe(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},c=a({},r,{value:void 0}),Kt("invalid",e),un(n,"onChange");break;case"textarea":ze(e,r),c=Oe(e,r),Kt("invalid",e),un(n,"onChange");break;default:c=r}an(o,c);var s=c;for(l in s)if(s.hasOwnProperty(l)){var f=s[l];"style"===l?nn(e,f):"dangerouslySetInnerHTML"===l?null!=(f=f?f.__html:void 0)&&Ae(e,f):"children"===l?"string"==typeof f?("textarea"!==o||""!==f)&&Ue(e,f):"number"==typeof f&&Ue(e,""+f):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(B.hasOwnProperty(l)?null!=f&&un(n,l):null!=f&&ye(e,l,f,u))}switch(o){case"input":we(e),Ce(e,r,!1);break;case"textarea":we(e),Re(e);break;case"option":null!=r.value&&e.setAttribute("value",""+ge(r.value));break;case"select":e.multiple=!!r.multiple,null!=(n=r.value)?Ne(e,!!r.multiple,n,!1):null!=r.defaultValue&&Ne(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof c.onClick&&(e.onclick=cn)}yn(o,r)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Hi(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(i(166));n=zo(Oo.current),zo(Po.current),_i(t)?(n=t.stateNode,r=t.memoizedProps,n[Sn]=t,n.nodeValue!==r&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Sn]=t,t.stateNode=n)}return null;case 13:return ua(Fo),r=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==r,r=!1,null===e?void 0!==t.memoizedProps.fallback&&_i(t):(r=null!==(o=e.memoizedState),n||null===o||null!==(o=e.child.sibling)&&(null!==(l=t.firstEffect)?(t.firstEffect=o,o.nextEffect=l):(t.firstEffect=t.lastEffect=o,o.nextEffect=null),o.effectTag=8)),n&&!r&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Fo.current)?_l===wl&&(_l=kl):(_l!==wl&&_l!==kl||(_l=xl),0!==Ml&&null!==Sl&&(Ru(Sl,Cl),Iu(Sl,Ml)))),(n||r)&&(t.effectTag|=4),null);case 4:return Ro(),null;case 10:return eo(t),null;case 17:return ha(t.type)&&va(),null;case 19:if(ua(Fo),null===(r=t.memoizedState))return null;if(o=0!=(64&t.effectTag),null===(l=r.rendering)){if(o)Yi(r,!1);else if(_l!==wl||null!==e&&0!=(64&e.effectTag))for(l=t.child;null!==l;){if(null!==(e=jo(l))){for(t.effectTag|=64,Yi(r,!1),null!==(o=e.updateQueue)&&(t.updateQueue=o,t.effectTag|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=t.child;null!==r;)l=n,(o=r).effectTag&=2,o.nextEffect=null,o.firstEffect=null,o.lastEffect=null,null===(e=o.alternate)?(o.childExpirationTime=0,o.expirationTime=l,o.child=null,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null):(o.childExpirationTime=e.childExpirationTime,o.expirationTime=e.expirationTime,o.child=e.child,o.memoizedProps=e.memoizedProps,o.memoizedState=e.memoizedState,o.updateQueue=e.updateQueue,l=e.dependencies,o.dependencies=null===l?null:{expirationTime:l.expirationTime,firstContext:l.firstContext,responders:l.responders}),r=r.sibling;return ca(Fo,1&Fo.current|2),t.child}l=l.sibling}}else{if(!o)if(null!==(e=jo(l))){if(t.effectTag|=64,o=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),Yi(r,!0),null===r.tail&&"hidden"===r.tailMode&&!l.alternate)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Aa()-r.renderingStartTime>r.tailExpiration&&1<n&&(t.effectTag|=64,o=!0,Yi(r,!1),t.expirationTime=t.childExpirationTime=n-1);r.isBackwards?(l.sibling=t.child,t.child=l):(null!==(n=r.last)?n.sibling=l:t.child=l,r.last=l)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=Aa()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Aa(),n.sibling=null,t=Fo.current,ca(Fo,o?1&t|2:1&t),n):null}throw Error(i(156,t.tag))}function Ji(e){switch(e.tag){case 1:ha(e.type)&&va();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Ro(),ua(da),ua(fa),0!=(64&(t=e.effectTag)))throw Error(i(285));return e.effectTag=-4097&t|64,e;case 5:return Lo(e),null;case 13:return ua(Fo),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return ua(Fo),null;case 4:return Ro(),null;case 10:return eo(e),null;default:return null}}function Gi(e,t){return{value:e,source:t,stack:D(t)}}Ui=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},$i=function(e,t,n,r,o){var i=e.memoizedProps;if(i!==r){var l,u,c=t.stateNode;switch(zo(Po.current),e=null,n){case"input":i=xe(c,i),r=xe(c,r),e=[];break;case"option":i=Pe(c,i),r=Pe(c,r),e=[];break;case"select":i=a({},i,{value:void 0}),r=a({},r,{value:void 0}),e=[];break;case"textarea":i=Oe(c,i),r=Oe(c,r),e=[];break;default:"function"!=typeof i.onClick&&"function"==typeof r.onClick&&(c.onclick=cn)}for(l in an(n,r),n=null,i)if(!r.hasOwnProperty(l)&&i.hasOwnProperty(l)&&null!=i[l])if("style"===l)for(u in c=i[l])c.hasOwnProperty(u)&&(n||(n={}),n[u]="");else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(B.hasOwnProperty(l)?e||(e=[]):(e=e||[]).push(l,null));for(l in r){var s=r[l];if(c=null!=i?i[l]:void 0,r.hasOwnProperty(l)&&s!==c&&(null!=s||null!=c))if("style"===l)if(c){for(u in c)!c.hasOwnProperty(u)||s&&s.hasOwnProperty(u)||(n||(n={}),n[u]="");for(u in s)s.hasOwnProperty(u)&&c[u]!==s[u]&&(n||(n={}),n[u]=s[u])}else n||(e||(e=[]),e.push(l,n)),n=s;else"dangerouslySetInnerHTML"===l?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(l,s)):"children"===l?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(l,""+s):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(B.hasOwnProperty(l)?(null!=s&&un(o,l),e||c===s||(e=[])):(e=e||[]).push(l,s))}n&&(e=e||[]).push("style",n),o=e,(t.updateQueue=o)&&(t.effectTag|=4)}},Hi=function(e,t,n,r){n!==r&&(t.effectTag|=4)};var Zi="function"==typeof WeakSet?WeakSet:Set;function el(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=D(n)),null!==n&&j(n.type),t=t.value,null!==e&&1===e.tag&&j(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function tl(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){gu(e,t)}else t.current=null}function nl(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:qa(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(i(163))}function rl(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==t)}}function al(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function ol(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void al(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var r=n.elementType===n.type?t.memoizedProps:qa(n.type,t.memoizedProps);e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&fo(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}fo(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&yn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Ft(n)))));case 19:case 17:case 20:case 21:return}throw Error(i(163))}function il(e,t,n){switch("function"==typeof xu&&xu(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;Ha(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var a=t;try{n()}catch(e){gu(a,e)}}e=e.next}while(e!==r)}))}break;case 1:tl(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){gu(e,t)}}(t,n);break;case 5:tl(t);break;case 4:sl(e,t,n)}}function ll(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&ll(t)}function ul(e){return 5===e.tag||3===e.tag||4===e.tag}function cl(e){e:{for(var t=e.return;null!==t;){if(ul(t)){var n=t;break e}t=t.return}throw Error(i(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(i(161))}16&n.effectTag&&(Ue(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||ul(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}r?function e(t,n,r){var a=t.tag,o=5===a||6===a;if(o)t=o?t.stateNode:t.stateNode.instance,n?8===r.nodeType?r.parentNode.insertBefore(t,n):r.insertBefore(t,n):(8===r.nodeType?(n=r.parentNode).insertBefore(t,r):(n=r).appendChild(t),null!==(r=r._reactRootContainer)&&void 0!==r||null!==n.onclick||(n.onclick=cn));else if(4!==a&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t):function e(t,n,r){var a=t.tag,o=5===a||6===a;if(o)t=o?t.stateNode:t.stateNode.instance,n?r.insertBefore(t,n):r.appendChild(t);else if(4!==a&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t)}function sl(e,t,n){for(var r,a,o=t,l=!1;;){if(!l){l=o.return;e:for(;;){if(null===l)throw Error(i(160));switch(r=l.stateNode,l.tag){case 5:a=!1;break e;case 3:case 4:r=r.containerInfo,a=!0;break e}l=l.return}l=!0}if(5===o.tag||6===o.tag){e:for(var u=e,c=o,s=n,f=c;;)if(il(u,f,s),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===c)break e;for(;null===f.sibling;){if(null===f.return||f.return===c)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}a?(u=r,c=o.stateNode,8===u.nodeType?u.parentNode.removeChild(c):u.removeChild(c)):r.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){r=o.stateNode.containerInfo,a=!0,o.child.return=o,o=o.child;continue}}else if(il(e,o,n),null!==o.child){o.child.return=o,o=o.child;continue}if(o===t)break;for(;null===o.sibling;){if(null===o.return||o.return===t)return;4===(o=o.return).tag&&(l=!1)}o.sibling.return=o.return,o=o.sibling}}function fl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void rl(3,t);case 1:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,a=null!==e?e.memoizedProps:r;e=t.type;var o=t.updateQueue;if(t.updateQueue=null,null!==o){for(n[Tn]=r,"input"===e&&"radio"===r.type&&null!=r.name&&Se(n,r),on(e,a),t=on(e,r),a=0;a<o.length;a+=2){var l=o[a],u=o[a+1];"style"===l?nn(n,u):"dangerouslySetInnerHTML"===l?Ae(n,u):"children"===l?Ue(n,u):ye(n,l,u,t)}switch(e){case"input":Te(n,r);break;case"textarea":Me(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Ne(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Ne(n,!!r.multiple,r.defaultValue,!0):Ne(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(i(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,Ft(t.containerInfo)));case 12:return;case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,Il=Aa()),null!==n)e:for(e=n;;){if(5===e.tag)o=e.stateNode,r?"function"==typeof(o=o.style).setProperty?o.setProperty("display","none","important"):o.display="none":(o=e.stateNode,a=null!=(a=e.memoizedProps.style)&&a.hasOwnProperty("display")?a.display:null,o.style.display=tn("display",a));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(o=e.child.sibling).return=e,e=o;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void dl(t);case 19:return void dl(t);case 17:return}throw Error(i(163))}function dl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Zi),t.forEach((function(t){var r=wu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var pl="function"==typeof WeakMap?WeakMap:Map;function ml(e,t,n){(n=lo(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Fl||(Fl=!0,jl=r),el(e,t)},n}function hl(e,t,n){(n=lo(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return el(e,t),r(a)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Dl?Dl=new Set([this]):Dl.add(this),el(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var vl,yl=Math.ceil,gl=g.ReactCurrentDispatcher,bl=g.ReactCurrentOwner,wl=0,kl=3,xl=4,El=0,Sl=null,Tl=null,Cl=0,_l=wl,Pl=null,Nl=1073741823,Ol=1073741823,zl=null,Ml=0,Rl=!1,Il=0,Ll=null,Fl=!1,jl=null,Dl=null,Al=!1,Ul=null,$l=90,Hl=null,Vl=0,Wl=null,Bl=0;function Ql(){return 0!=(48&El)?1073741821-(Aa()/10|0):0!==Bl?Bl:Bl=1073741821-(Aa()/10|0)}function Kl(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=Ua();if(0==(4&t))return 99===r?1073741823:1073741822;if(0!=(16&El))return Cl;if(null!==n)e=Ka(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=Ka(e,150,100);break;case 97:case 96:e=Ka(e,5e3,250);break;case 95:e=2;break;default:throw Error(i(326))}return null!==Sl&&e===Cl&&--e,e}function ql(e,t){if(50<Vl)throw Vl=0,Wl=null,Error(i(185));if(null!==(e=Yl(e,t))){var n=Ua();1073741823===t?0!=(8&El)&&0==(48&El)?Zl(e):(Jl(e),0===El&&Ba()):Jl(e),0==(4&El)||98!==n&&99!==n||(null===Hl?Hl=new Map([[e,t]]):(void 0===(n=Hl.get(e))||n>t)&&Hl.set(e,t))}}function Yl(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,a=null;if(null===r&&3===e.tag)a=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){a=r.stateNode;break}r=r.return}return null!==a&&(Sl===a&&(iu(t),_l===xl&&Ru(a,Cl)),Iu(a,t)),a}function Xl(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!Mu(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function Jl(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Wa(Zl.bind(null,e));else{var t=Xl(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=Ql();if(1073741823===t?r=99:1===t||2===t?r=95:r=0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var a=e.callbackPriority;if(e.callbackExpirationTime===t&&a>=r)return;n!==Ma&&Ea(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Wa(Zl.bind(null,e)):Va(r,Gl.bind(null,e),{timeout:10*(1073741821-t)-Aa()}),e.callbackNode=t}}}function Gl(e,t){if(Bl=0,t)return Lu(e,t=Ql()),Jl(e),null;var n=Xl(e);if(0!==n){if(t=e.callbackNode,0!=(48&El))throw Error(i(327));if(hu(),e===Sl&&n===Cl||nu(e,n),null!==Tl){var r=El;El|=16;for(var a=au();;)try{uu();break}catch(t){ru(e,t)}if(Za(),El=r,gl.current=a,1===_l)throw t=Pl,nu(e,n),Ru(e,n),Jl(e),t;if(null===Tl)switch(a=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=_l,Sl=null,r){case wl:case 1:throw Error(i(345));case 2:Lu(e,2<n?2:n);break;case kl:if(Ru(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fu(a)),1073741823===Nl&&10<(a=Il+500-Aa())){if(Rl){var o=e.lastPingedTime;if(0===o||o>=n){e.lastPingedTime=n,nu(e,n);break}}if(0!==(o=Xl(e))&&o!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=bn(du.bind(null,e),a);break}du(e);break;case xl:if(Ru(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fu(a)),Rl&&(0===(a=e.lastPingedTime)||a>=n)){e.lastPingedTime=n,nu(e,n);break}if(0!==(a=Xl(e))&&a!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==Ol?r=10*(1073741821-Ol)-Aa():1073741823===Nl?r=0:(r=10*(1073741821-Nl)-5e3,0>(r=(a=Aa())-r)&&(r=0),(n=10*(1073741821-n)-a)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*yl(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=bn(du.bind(null,e),r);break}du(e);break;case 5:if(1073741823!==Nl&&null!==zl){o=Nl;var l=zl;if(0>=(r=0|l.busyMinDurationMs)?r=0:(a=0|l.busyDelayMs,r=(o=Aa()-(10*(1073741821-o)-(0|l.timeoutMs||5e3)))<=a?0:a+r-o),10<r){Ru(e,n),e.timeoutHandle=bn(du.bind(null,e),r);break}}du(e);break;default:throw Error(i(329))}if(Jl(e),e.callbackNode===t)return Gl.bind(null,e)}}return null}function Zl(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,0!=(48&El))throw Error(i(327));if(hu(),e===Sl&&t===Cl||nu(e,t),null!==Tl){var n=El;El|=16;for(var r=au();;)try{lu();break}catch(t){ru(e,t)}if(Za(),El=n,gl.current=r,1===_l)throw n=Pl,nu(e,t),Ru(e,t),Jl(e),n;if(null!==Tl)throw Error(i(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,Sl=null,du(e),Jl(e)}return null}function eu(e,t){var n=El;El|=1;try{return e(t)}finally{0===(El=n)&&Ba()}}function tu(e,t){var n=El;El&=-2,El|=8;try{return e(t)}finally{0===(El=n)&&Ba()}}function nu(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,wn(n)),null!==Tl)for(n=Tl.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&va();break;case 3:Ro(),ua(da),ua(fa);break;case 5:Lo(r);break;case 4:Ro();break;case 13:case 19:ua(Fo);break;case 10:eo(r)}n=n.return}Sl=e,Tl=Cu(e.current,null),Cl=t,_l=wl,Pl=null,Ol=Nl=1073741823,zl=null,Ml=0,Rl=!1}function ru(e,t){for(;;){try{if(Za(),Ao.current=vi,Bo)for(var n=Ho.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if($o=0,Wo=Vo=Ho=null,Bo=!1,null===Tl||null===Tl.return)return _l=1,Pl=t,Tl=null;e:{var a=e,o=Tl.return,i=Tl,l=t;if(t=Cl,i.effectTag|=2048,i.firstEffect=i.lastEffect=null,null!==l&&"object"==typeof l&&"function"==typeof l.then){var u=l;if(0==(2&i.mode)){var c=i.alternate;c?(i.memoizedState=c.memoizedState,i.expirationTime=c.expirationTime):i.memoizedState=null}var s=0!=(1&Fo.current),f=o;do{var d;if(d=13===f.tag){var p=f.memoizedState;if(null!==p)d=null!==p.dehydrated;else{var m=f.memoizedProps;d=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!s)}}if(d){var h=f.updateQueue;if(null===h){var v=new Set;v.add(u),f.updateQueue=v}else h.add(u);if(0==(2&f.mode)){if(f.effectTag|=64,i.effectTag&=-2981,1===i.tag)if(null===i.alternate)i.tag=17;else{var y=lo(1073741823,null);y.tag=2,uo(i,y)}i.expirationTime=1073741823;break e}l=void 0,i=t;var g=a.pingCache;if(null===g?(g=a.pingCache=new pl,l=new Set,g.set(u,l)):void 0===(l=g.get(u))&&(l=new Set,g.set(u,l)),!l.has(i)){l.add(i);var b=bu.bind(null,a,u,i);u.then(b,b)}f.effectTag|=4096,f.expirationTime=t;break e}f=f.return}while(null!==f);l=Error((j(i.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+D(i))}5!==_l&&(_l=2),l=Gi(l,i),f=o;do{switch(f.tag){case 3:u=l,f.effectTag|=4096,f.expirationTime=t,co(f,ml(f,u,t));break e;case 1:u=l;var w=f.type,k=f.stateNode;if(0==(64&f.effectTag)&&("function"==typeof w.getDerivedStateFromError||null!==k&&"function"==typeof k.componentDidCatch&&(null===Dl||!Dl.has(k)))){f.effectTag|=4096,f.expirationTime=t,co(f,hl(f,u,t));break e}}f=f.return}while(null!==f)}Tl=su(Tl)}catch(e){t=e;continue}break}}function au(){var e=gl.current;return gl.current=vi,null===e?vi:e}function ou(e,t){e<Nl&&2<e&&(Nl=e),null!==t&&e<Ol&&2<e&&(Ol=e,zl=t)}function iu(e){e>Ml&&(Ml=e)}function lu(){for(;null!==Tl;)Tl=cu(Tl)}function uu(){for(;null!==Tl&&!Ra();)Tl=cu(Tl)}function cu(e){var t=vl(e.alternate,e,Cl);return e.memoizedProps=e.pendingProps,null===t&&(t=su(e)),bl.current=null,t}function su(e){Tl=e;do{var t=Tl.alternate;if(e=Tl.return,0==(2048&Tl.effectTag)){if(t=Xi(t,Tl,Cl),1===Cl||1!==Tl.childExpirationTime){for(var n=0,r=Tl.child;null!==r;){var a=r.expirationTime,o=r.childExpirationTime;a>n&&(n=a),o>n&&(n=o),r=r.sibling}Tl.childExpirationTime=n}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=Tl.firstEffect),null!==Tl.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=Tl.firstEffect),e.lastEffect=Tl.lastEffect),1<Tl.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=Tl:e.firstEffect=Tl,e.lastEffect=Tl))}else{if(null!==(t=Ji(Tl)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=Tl.sibling))return t;Tl=e}while(null!==Tl);return _l===wl&&(_l=5),null}function fu(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function du(e){var t=Ua();return Ha(99,pu.bind(null,e,t)),null}function pu(e,t){do{hu()}while(null!==Ul);if(0!=(48&El))throw Error(i(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(i(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var a=fu(n);if(e.firstPendingTime=a,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Sl&&(Tl=Sl=null,Cl=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,a=n.firstEffect):a=n:a=n.firstEffect,null!==a){var o=El;El|=32,bl.current=null,hn=Qt;var l=pn();if(mn(l)){if("selectionStart"in l)var u={start:l.selectionStart,end:l.selectionEnd};else e:{var c=(u=(u=l.ownerDocument)&&u.defaultView||window).getSelection&&u.getSelection();if(c&&0!==c.rangeCount){u=c.anchorNode;var s=c.anchorOffset,f=c.focusNode;c=c.focusOffset;try{u.nodeType,f.nodeType}catch(e){u=null;break e}var d=0,p=-1,m=-1,h=0,v=0,y=l,g=null;t:for(;;){for(var b;y!==u||0!==s&&3!==y.nodeType||(p=d+s),y!==f||0!==c&&3!==y.nodeType||(m=d+c),3===y.nodeType&&(d+=y.nodeValue.length),null!==(b=y.firstChild);)g=y,y=b;for(;;){if(y===l)break t;if(g===u&&++h===s&&(p=d),g===f&&++v===c&&(m=d),null!==(b=y.nextSibling))break;g=(y=g).parentNode}y=b}u=-1===p||-1===m?null:{start:p,end:m}}else u=null}u=u||{start:0,end:0}}else u=null;vn={activeElementDetached:null,focusedElem:l,selectionRange:u},Qt=!1,Ll=a;do{try{mu()}catch(e){if(null===Ll)throw Error(i(330));gu(Ll,e),Ll=Ll.nextEffect}}while(null!==Ll);Ll=a;do{try{for(l=e,u=t;null!==Ll;){var w=Ll.effectTag;if(16&w&&Ue(Ll.stateNode,""),128&w){var k=Ll.alternate;if(null!==k){var x=k.ref;null!==x&&("function"==typeof x?x(null):x.current=null)}}switch(1038&w){case 2:cl(Ll),Ll.effectTag&=-3;break;case 6:cl(Ll),Ll.effectTag&=-3,fl(Ll.alternate,Ll);break;case 1024:Ll.effectTag&=-1025;break;case 1028:Ll.effectTag&=-1025,fl(Ll.alternate,Ll);break;case 4:fl(Ll.alternate,Ll);break;case 8:sl(l,s=Ll,u),ll(s)}Ll=Ll.nextEffect}}catch(e){if(null===Ll)throw Error(i(330));gu(Ll,e),Ll=Ll.nextEffect}}while(null!==Ll);if(x=vn,k=pn(),w=x.focusedElem,u=x.selectionRange,k!==w&&w&&w.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(w.ownerDocument.documentElement,w)){null!==u&&mn(w)&&(k=u.start,void 0===(x=u.end)&&(x=k),"selectionStart"in w?(w.selectionStart=k,w.selectionEnd=Math.min(x,w.value.length)):(x=(k=w.ownerDocument||document)&&k.defaultView||window).getSelection&&(x=x.getSelection(),s=w.textContent.length,l=Math.min(u.start,s),u=void 0===u.end?l:Math.min(u.end,s),!x.extend&&l>u&&(s=u,u=l,l=s),s=dn(w,l),f=dn(w,u),s&&f&&(1!==x.rangeCount||x.anchorNode!==s.node||x.anchorOffset!==s.offset||x.focusNode!==f.node||x.focusOffset!==f.offset)&&((k=k.createRange()).setStart(s.node,s.offset),x.removeAllRanges(),l>u?(x.addRange(k),x.extend(f.node,f.offset)):(k.setEnd(f.node,f.offset),x.addRange(k))))),k=[];for(x=w;x=x.parentNode;)1===x.nodeType&&k.push({element:x,left:x.scrollLeft,top:x.scrollTop});for("function"==typeof w.focus&&w.focus(),w=0;w<k.length;w++)(x=k[w]).element.scrollLeft=x.left,x.element.scrollTop=x.top}Qt=!!hn,vn=hn=null,e.current=n,Ll=a;do{try{for(w=e;null!==Ll;){var E=Ll.effectTag;if(36&E&&ol(w,Ll.alternate,Ll),128&E){k=void 0;var S=Ll.ref;if(null!==S){var T=Ll.stateNode;switch(Ll.tag){case 5:k=T;break;default:k=T}"function"==typeof S?S(k):S.current=k}}Ll=Ll.nextEffect}}catch(e){if(null===Ll)throw Error(i(330));gu(Ll,e),Ll=Ll.nextEffect}}while(null!==Ll);Ll=null,Ia(),El=o}else e.current=n;if(Al)Al=!1,Ul=e,$l=t;else for(Ll=a;null!==Ll;)t=Ll.nextEffect,Ll.nextEffect=null,Ll=t;if(0===(t=e.firstPendingTime)&&(Dl=null),1073741823===t?e===Wl?Vl++:(Vl=0,Wl=e):Vl=0,"function"==typeof ku&&ku(n.stateNode,r),Jl(e),Fl)throw Fl=!1,e=jl,jl=null,e;return 0!=(8&El)||Ba(),null}function mu(){for(;null!==Ll;){var e=Ll.effectTag;0!=(256&e)&&nl(Ll.alternate,Ll),0==(512&e)||Al||(Al=!0,Va(97,(function(){return hu(),null}))),Ll=Ll.nextEffect}}function hu(){if(90!==$l){var e=97<$l?97:$l;return $l=90,Ha(e,vu)}}function vu(){if(null===Ul)return!1;var e=Ul;if(Ul=null,0!=(48&El))throw Error(i(331));var t=El;for(El|=32,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:rl(5,n),al(5,n)}}catch(t){if(null===e)throw Error(i(330));gu(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return El=t,Ba(),!0}function yu(e,t,n){uo(e,t=ml(e,t=Gi(n,t),1073741823)),null!==(e=Yl(e,1073741823))&&Jl(e)}function gu(e,t){if(3===e.tag)yu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){yu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Dl||!Dl.has(r))){uo(n,e=hl(n,e=Gi(t,e),1073741823)),null!==(n=Yl(n,1073741823))&&Jl(n);break}}n=n.return}}function bu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),Sl===e&&Cl===n?_l===xl||_l===kl&&1073741823===Nl&&Aa()-Il<500?nu(e,Cl):Rl=!0:Mu(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,Jl(e)))}function wu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(t=Kl(t=Ql(),e,null)),null!==(e=Yl(e,t))&&Jl(e)}vl=function(e,t,n){var r=t.expirationTime;if(null!==e){var a=t.pendingProps;if(e.memoizedProps!==a||da.current)Oi=!0;else{if(r<n){switch(Oi=!1,t.tag){case 3:Ai(t),Pi();break;case 5:if(Io(t),4&t.mode&&1!==n&&a.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:ha(t.type)&&ba(t);break;case 4:Mo(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value,a=t.type._context,ca(Ya,a._currentValue),a._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Wi(e,t,n):(ca(Fo,1&Fo.current),null!==(t=qi(e,t,n))?t.sibling:null);ca(Fo,1&Fo.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return Ki(e,t,n);t.effectTag|=64}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null),ca(Fo,Fo.current),!r)return null}return qi(e,t,n)}Oi=!1}}else Oi=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,a=ma(t,fa.current),no(t,n),a=qo(null,t,r,e,a,n),t.effectTag|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,ha(r)){var o=!0;ba(t)}else o=!1;t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,oo(t);var l=r.getDerivedStateFromProps;"function"==typeof l&&ho(t,r,l,e),a.updater=vo,t.stateNode=a,a._reactInternalFiber=t,wo(t,r,e,n),t=Di(null,t,r,!0,o,n)}else t.tag=0,zi(null,t,a,n),t=t.child;return t;case 16:e:{if(a=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(a),1!==a._status)throw a._result;switch(a=a._result,t.type=a,o=t.tag=function(e){if("function"==typeof e)return Tu(e)?1:0;if(null!=e){if((e=e.$$typeof)===N)return 11;if(e===M)return 14}return 2}(a),e=qa(a,e),o){case 0:t=Fi(null,t,a,e,n);break e;case 1:t=ji(null,t,a,e,n);break e;case 11:t=Mi(null,t,a,e,n);break e;case 14:t=Ri(null,t,a,qa(a.type,e),r,n);break e}throw Error(i(306,a,""))}return t;case 0:return r=t.type,a=t.pendingProps,Fi(e,t,r,a=t.elementType===r?a:qa(r,a),n);case 1:return r=t.type,a=t.pendingProps,ji(e,t,r,a=t.elementType===r?a:qa(r,a),n);case 3:if(Ai(t),r=t.updateQueue,null===e||null===r)throw Error(i(282));if(r=t.pendingProps,a=null!==(a=t.memoizedState)?a.element:null,io(e,t),so(t,r,null,n),(r=t.memoizedState.element)===a)Pi(),t=qi(e,t,n);else{if((a=t.stateNode.hydrate)&&(ki=kn(t.stateNode.containerInfo.firstChild),wi=t,a=xi=!0),a)for(n=Co(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else zi(e,t,r,n),Pi();t=t.child}return t;case 5:return Io(t),null===e&&Ti(t),r=t.type,a=t.pendingProps,o=null!==e?e.memoizedProps:null,l=a.children,gn(r,a)?l=null:null!==o&&gn(r,o)&&(t.effectTag|=16),Li(e,t),4&t.mode&&1!==n&&a.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(zi(e,t,l,n),t=t.child),t;case 6:return null===e&&Ti(t),null;case 13:return Wi(e,t,n);case 4:return Mo(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=To(t,null,r,n):zi(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,Mi(e,t,r,a=t.elementType===r?a:qa(r,a),n);case 7:return zi(e,t,t.pendingProps,n),t.child;case 8:case 12:return zi(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,a=t.pendingProps,l=t.memoizedProps,o=a.value;var u=t.type._context;if(ca(Ya,u._currentValue),u._currentValue=o,null!==l)if(u=l.value,0===(o=jr(u,o)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,o):1073741823))){if(l.children===a.children&&!da.current){t=qi(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){l=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&o)){1===u.tag&&((s=lo(n,null)).tag=2,uo(u,s)),u.expirationTime<n&&(u.expirationTime=n),null!==(s=u.alternate)&&s.expirationTime<n&&(s.expirationTime=n),to(u.return,n),c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}zi(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=(o=t.pendingProps).children,no(t,n),r=r(a=ro(a,o.unstable_observedBits)),t.effectTag|=1,zi(e,t,r,n),t.child;case 14:return o=qa(a=t.type,t.pendingProps),Ri(e,t,a,o=qa(a.type,o),r,n);case 15:return Ii(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:qa(r,a),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,ha(r)?(e=!0,ba(t)):e=!1,no(t,n),go(t,r,a),wo(t,r,a,n),Di(null,t,r,!0,e,n);case 19:return Ki(e,t,n)}throw Error(i(156,t.tag))};var ku=null,xu=null;function Eu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Su(e,t,n,r){return new Eu(e,t,n,r)}function Tu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Cu(e,t){var n=e.alternate;return null===n?((n=Su(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function _u(e,t,n,r,a,o){var l=2;if(r=e,"function"==typeof e)Tu(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case E:return Pu(n.children,a,o,t);case P:l=8,a|=7;break;case S:l=8,a|=1;break;case T:return(e=Su(12,n,t,8|a)).elementType=T,e.type=T,e.expirationTime=o,e;case O:return(e=Su(13,n,t,a)).type=O,e.elementType=O,e.expirationTime=o,e;case z:return(e=Su(19,n,t,a)).elementType=z,e.expirationTime=o,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case C:l=10;break e;case _:l=9;break e;case N:l=11;break e;case M:l=14;break e;case R:l=16,r=null;break e;case I:l=22;break e}throw Error(i(130,null==e?e:typeof e,""))}return(t=Su(l,n,t,a)).elementType=e,t.type=r,t.expirationTime=o,t}function Pu(e,t,n,r){return(e=Su(7,e,r,t)).expirationTime=n,e}function Nu(e,t,n){return(e=Su(6,e,null,t)).expirationTime=n,e}function Ou(e,t,n){return(t=Su(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function zu(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Mu(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function Ru(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Iu(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function Lu(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Fu(e,t,n,r){var a=t.current,o=Ql(),l=po.suspense;o=Kl(o,a,l);e:if(n){t:{if(Ze(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(i(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(ha(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(i(171))}if(1===n.tag){var c=n.type;if(ha(c)){n=ga(n,c,u);break e}}n=u}else n=sa;return null===t.context?t.context=n:t.pendingContext=n,(t=lo(o,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),uo(a,t),ql(a,o),o}function ju(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Du(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function Au(e,t){Du(e,t),(e=e.alternate)&&Du(e,t)}function Uu(e,t,n){var r=new zu(e,t,n=null!=n&&!0===n.hydrate),a=Su(3,null,null,2===t?7:1===t?3:0);r.current=a,a.stateNode=r,oo(a),e[Cn]=r.current,n&&0!==t&&function(e,t){var n=Ge(t);Ct.forEach((function(e){mt(e,t,n)})),_t.forEach((function(e){mt(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function $u(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Hu(e,t,n,r,a){var o=n._reactRootContainer;if(o){var i=o._internalRoot;if("function"==typeof a){var l=a;a=function(){var e=ju(i);l.call(e)}}Fu(t,i,e,a)}else{if(o=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Uu(e,0,t?{hydrate:!0}:void 0)}(n,r),i=o._internalRoot,"function"==typeof a){var u=a;a=function(){var e=ju(i);u.call(e)}}tu((function(){Fu(t,i,e,a)}))}return ju(i)}function Vu(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:x,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Wu(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!$u(t))throw Error(i(200));return Vu(e,t,null,n)}Uu.prototype.render=function(e){Fu(e,this._internalRoot,null,null)},Uu.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Fu(null,e,null,(function(){t[Cn]=null}))},ht=function(e){if(13===e.tag){var t=Ka(Ql(),150,100);ql(e,t),Au(e,t)}},vt=function(e){13===e.tag&&(ql(e,3),Au(e,3))},yt=function(e){if(13===e.tag){var t=Ql();ql(e,t=Kl(t,e,null)),Au(e,t)}},Y=function(e,t,n){switch(t){case"input":if(Te(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=On(r);if(!a)throw Error(i(90));ke(r),Te(r,a)}}}break;case"textarea":Me(e,n);break;case"select":null!=(t=n.value)&&Ne(e,!!n.multiple,t,!1)}},te=eu,ne=function(e,t,n,r,a){var o=El;El|=4;try{return Ha(98,e.bind(null,t,n,r,a))}finally{0===(El=o)&&Ba()}},re=function(){0==(49&El)&&(function(){if(null!==Hl){var e=Hl;Hl=null,e.forEach((function(e,t){Lu(t,e),Jl(t)})),Ba()}}(),hu())},ae=function(e,t){var n=El;El|=2;try{return e(t)}finally{0===(El=n)&&Ba()}};var Bu,Qu,Ku={Events:[Pn,Nn,On,K,W,jn,function(e){at(e,Fn)},Z,ee,Jt,lt,hu,{current:!1}]};Qu=(Bu={findFiberByHostInstance:_n,bundleType:0,version:"16.13.0",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);ku=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},xu=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(a({},Bu,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:g.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=nt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return Qu?Qu(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null})),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Ku,t.createPortal=Wu,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(i(188));throw Error(i(268,Object.keys(e)))}return e=null===(e=nt(t))?null:e.stateNode},t.flushSync=function(e,t){if(0!=(48&El))throw Error(i(187));var n=El;El|=1;try{return Ha(99,e.bind(null,t))}finally{El=n,Ba()}},t.hydrate=function(e,t,n){if(!$u(t))throw Error(i(200));return Hu(null,e,t,!0,n)},t.render=function(e,t,n){if(!$u(t))throw Error(i(200));return Hu(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!$u(e))throw Error(i(40));return!!e._reactRootContainer&&(tu((function(){Hu(null,null,e,!1,(function(){e._reactRootContainer=null,e[Cn]=null}))})),!0)},t.unstable_batchedUpdates=eu,t.unstable_createPortal=function(e,t){return Wu(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!$u(n))throw Error(i(200));if(null==e||void 0===e._reactInternalFiber)throw Error(i(38));return Hu(e,t,n,!1,r)},t.version="16.13.0"},function(e,t,n){"use strict";e.exports=n(18)},function(e,t,n){"use strict";
/** @license React v0.19.0
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r,a,o,i,l;if("undefined"==typeof window||"function"!=typeof MessageChannel){var u=null,c=null,s=function(){if(null!==u)try{var e=t.unstable_now();u(!0,e),u=null}catch(e){throw setTimeout(s,0),e}},f=Date.now();t.unstable_now=function(){return Date.now()-f},r=function(e){null!==u?setTimeout(r,0,e):(u=e,setTimeout(s,0))},a=function(e,t){c=setTimeout(e,t)},o=function(){clearTimeout(c)},i=function(){return!1},l=t.unstable_forceFrameRate=function(){}}else{var d=window.performance,p=window.Date,m=window.setTimeout,h=window.clearTimeout;if("undefined"!=typeof console){var v=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof v&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof d&&"function"==typeof d.now)t.unstable_now=function(){return d.now()};else{var y=p.now();t.unstable_now=function(){return p.now()-y}}var g=!1,b=null,w=-1,k=5,x=0;i=function(){return t.unstable_now()>=x},l=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):k=0<e?Math.floor(1e3/e):5};var E=new MessageChannel,S=E.port2;E.port1.onmessage=function(){if(null!==b){var e=t.unstable_now();x=e+k;try{b(!0,e)?S.postMessage(null):(g=!1,b=null)}catch(e){throw S.postMessage(null),e}}else g=!1},r=function(e){b=e,g||(g=!0,S.postMessage(null))},a=function(e,n){w=m((function(){e(t.unstable_now())}),n)},o=function(){h(w),w=-1}}function T(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,a=e[r];if(!(void 0!==a&&0<P(a,t)))break e;e[r]=t,e[n]=a,n=r}}function C(e){return void 0===(e=e[0])?null:e}function _(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length;r<a;){var o=2*(r+1)-1,i=e[o],l=o+1,u=e[l];if(void 0!==i&&0>P(i,n))void 0!==u&&0>P(u,i)?(e[r]=u,e[l]=n,r=l):(e[r]=i,e[o]=n,r=o);else{if(!(void 0!==u&&0>P(u,n)))break e;e[r]=u,e[l]=n,r=l}}}return t}return null}function P(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var N=[],O=[],z=1,M=null,R=3,I=!1,L=!1,F=!1;function j(e){for(var t=C(O);null!==t;){if(null===t.callback)_(O);else{if(!(t.startTime<=e))break;_(O),t.sortIndex=t.expirationTime,T(N,t)}t=C(O)}}function D(e){if(F=!1,j(e),!L)if(null!==C(N))L=!0,r(A);else{var t=C(O);null!==t&&a(D,t.startTime-e)}}function A(e,n){L=!1,F&&(F=!1,o()),I=!0;var r=R;try{for(j(n),M=C(N);null!==M&&(!(M.expirationTime>n)||e&&!i());){var l=M.callback;if(null!==l){M.callback=null,R=M.priorityLevel;var u=l(M.expirationTime<=n);n=t.unstable_now(),"function"==typeof u?M.callback=u:M===C(N)&&_(N),j(n)}else _(N);M=C(N)}if(null!==M)var c=!0;else{var s=C(O);null!==s&&a(D,s.startTime-n),c=!1}return c}finally{M=null,R=r,I=!1}}function U(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var $=l;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){L||I||(L=!0,r(A))},t.unstable_getCurrentPriorityLevel=function(){return R},t.unstable_getFirstCallbackNode=function(){return C(N)},t.unstable_next=function(e){switch(R){case 1:case 2:case 3:var t=3;break;default:t=R}var n=R;R=t;try{return e()}finally{R=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=$,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=R;R=e;try{return t()}finally{R=n}},t.unstable_scheduleCallback=function(e,n,i){var l=t.unstable_now();if("object"==typeof i&&null!==i){var u=i.delay;u="number"==typeof u&&0<u?l+u:l,i="number"==typeof i.timeout?i.timeout:U(e)}else i=U(e),u=l;return e={id:z++,callback:n,priorityLevel:e,startTime:u,expirationTime:i=u+i,sortIndex:-1},u>l?(e.sortIndex=u,T(O,e),null===C(N)&&e===C(O)&&(F?o():F=!0,a(D,u-l))):(e.sortIndex=i,T(N,e),L||I||(L=!0,r(A))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();j(e);var n=C(N);return n!==M&&null!==M&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<M.expirationTime||i()},t.unstable_wrapCallback=function(e){var t=R;return function(){var n=R;R=t;try{return e.apply(this,arguments)}finally{R=n}}}},function(e,t,n){"use strict";var r=n(20);function a(){}e.exports=function(){function e(e,t,n,a,o,i){if(i!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t};return n.checkPropTypes=a,n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},function(e,t,n){"use strict";
/** @license React v16.13.0
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r="function"==typeof Symbol&&Symbol.for,a=r?Symbol.for("react.element"):60103,o=r?Symbol.for("react.portal"):60106,i=r?Symbol.for("react.fragment"):60107,l=r?Symbol.for("react.strict_mode"):60108,u=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,s=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,d=r?Symbol.for("react.concurrent_mode"):60111,p=r?Symbol.for("react.forward_ref"):60112,m=r?Symbol.for("react.suspense"):60113,h=r?Symbol.for("react.suspense_list"):60120,v=r?Symbol.for("react.memo"):60115,y=r?Symbol.for("react.lazy"):60116,g=r?Symbol.for("react.block"):60121,b=r?Symbol.for("react.fundamental"):60117,w=r?Symbol.for("react.responder"):60118,k=r?Symbol.for("react.scope"):60119;function x(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case a:switch(e=e.type){case f:case d:case i:case u:case l:case m:return e;default:switch(e=e&&e.$$typeof){case s:case p:case y:case v:case c:return e;default:return t}}case o:return t}}}function E(e){return x(e)===d}t.AsyncMode=f,t.ConcurrentMode=d,t.ContextConsumer=s,t.ContextProvider=c,t.Element=a,t.ForwardRef=p,t.Fragment=i,t.Lazy=y,t.Memo=v,t.Portal=o,t.Profiler=u,t.StrictMode=l,t.Suspense=m,t.isAsyncMode=function(e){return E(e)||x(e)===f},t.isConcurrentMode=E,t.isContextConsumer=function(e){return x(e)===s},t.isContextProvider=function(e){return x(e)===c},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===a},t.isForwardRef=function(e){return x(e)===p},t.isFragment=function(e){return x(e)===i},t.isLazy=function(e){return x(e)===y},t.isMemo=function(e){return x(e)===v},t.isPortal=function(e){return x(e)===o},t.isProfiler=function(e){return x(e)===u},t.isStrictMode=function(e){return x(e)===l},t.isSuspense=function(e){return x(e)===m},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===i||e===d||e===u||e===l||e===m||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===y||e.$$typeof===v||e.$$typeof===c||e.$$typeof===s||e.$$typeof===p||e.$$typeof===b||e.$$typeof===w||e.$$typeof===k||e.$$typeof===g)},t.typeOf=x},function(e,t,n){var r;
/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/!function(){"use strict";var n={}.hasOwnProperty;function a(){for(var e=[],t=0;t<arguments.length;t++){var r=arguments[t];if(r){var o=typeof r;if("string"===o||"number"===o)e.push(r);else if(Array.isArray(r)&&r.length){var i=a.apply(null,r);i&&e.push(i)}else if("object"===o)for(var l in r)n.call(r,l)&&r[l]&&e.push(l)}}return e.join(" ")}e.exports?(a.default=a,e.exports=a):void 0===(r=function(){return a}.apply(t,[]))||(e.exports=r)}()},function(e,t,n){"use strict";n.r(t);n(11),n.p;var r=n(0),a=n.n(r),o=n(8),i=n.n(o);function l(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}var u=n(1),c=n.n(u);function s(){return(s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function f(e){return"/"===e.charAt(0)}function d(e,t){for(var n=t,r=n+1,a=e.length;r<a;n+=1,r+=1)e[n]=e[r];e.pop()}var p=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],a=t&&t.split("/")||[],o=e&&f(e),i=t&&f(t),l=o||i;if(e&&f(e)?a=r:r.length&&(a.pop(),a=a.concat(r)),!a.length)return"/";if(a.length){var u=a[a.length-1];n="."===u||".."===u||""===u}else n=!1;for(var c=0,s=a.length;s>=0;s--){var p=a[s];"."===p?d(a,s):".."===p?(d(a,s),c++):c&&(d(a,s),c--)}if(!l)for(;c--;c)a.unshift("..");!l||""===a[0]||a[0]&&f(a[0])||a.unshift("");var m=a.join("/");return n&&"/"!==m.substr(-1)&&(m+="/"),m};var m=function(e,t){if(!e)throw new Error("Invariant failed")};function h(e){return"/"===e.charAt(0)?e:"/"+e}function v(e){return"/"===e.charAt(0)?e.substr(1):e}function y(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function g(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function b(e){var t=e.pathname,n=e.search,r=e.hash,a=t||"/";return n&&"?"!==n&&(a+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(a+="#"===r.charAt(0)?r:"#"+r),a}function w(e,t,n,r){var a;"string"==typeof e?(a=function(e){var t=e||"/",n="",r="",a=t.indexOf("#");-1!==a&&(r=t.substr(a),t=t.substr(0,a));var o=t.indexOf("?");return-1!==o&&(n=t.substr(o),t=t.substr(0,o)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(a=s({},e)).pathname&&(a.pathname=""),a.search?"?"!==a.search.charAt(0)&&(a.search="?"+a.search):a.search="",a.hash?"#"!==a.hash.charAt(0)&&(a.hash="#"+a.hash):a.hash="",void 0!==t&&void 0===a.state&&(a.state=t));try{a.pathname=decodeURI(a.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+a.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(a.key=n),r?a.pathname?"/"!==a.pathname.charAt(0)&&(a.pathname=p(a.pathname,r.pathname)):a.pathname=r.pathname:a.pathname||(a.pathname="/"),a}function k(){var e=null;var t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,a){if(null!=e){var o="function"==typeof e?e(t,n):e;"string"==typeof o?"function"==typeof r?r(o,a):a(!0):a(!1!==o)}else a(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var x=!("undefined"==typeof window||!window.document||!window.document.createElement);function E(e,t){t(window.confirm(e))}function S(){try{return window.history.state||{}}catch(e){return{}}}function T(e){void 0===e&&(e={}),x||m(!1);var t,n=window.history,r=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,a=!(-1===window.navigator.userAgent.indexOf("Trident")),o=e,i=o.forceRefresh,l=void 0!==i&&i,u=o.getUserConfirmation,c=void 0===u?E:u,f=o.keyLength,d=void 0===f?6:f,p=e.basename?g(h(e.basename)):"";function v(e){var t=e||{},n=t.key,r=t.state,a=window.location,o=a.pathname+a.search+a.hash;return p&&(o=y(o,p)),w(o,r,n)}function T(){return Math.random().toString(36).substr(2,d)}var C=k();function _(e){s(A,e),A.length=n.length,C.notifyListeners(A.location,A.action)}function P(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||z(v(e.state))}function N(){z(v(S()))}var O=!1;function z(e){if(O)O=!1,_();else{C.confirmTransitionTo(e,"POP",c,(function(t){t?_({action:"POP",location:e}):function(e){var t=A.location,n=R.indexOf(t.key);-1===n&&(n=0);var r=R.indexOf(e.key);-1===r&&(r=0);var a=n-r;a&&(O=!0,L(a))}(e)}))}}var M=v(S()),R=[M.key];function I(e){return p+b(e)}function L(e){n.go(e)}var F=0;function j(e){1===(F+=e)&&1===e?(window.addEventListener("popstate",P),a&&window.addEventListener("hashchange",N)):0===F&&(window.removeEventListener("popstate",P),a&&window.removeEventListener("hashchange",N))}var D=!1;var A={length:n.length,action:"POP",location:M,createHref:I,push:function(e,t){var a=w(e,t,T(),A.location);C.confirmTransitionTo(a,"PUSH",c,(function(e){if(e){var t=I(a),o=a.key,i=a.state;if(r)if(n.pushState({key:o,state:i},null,t),l)window.location.href=t;else{var u=R.indexOf(A.location.key),c=R.slice(0,u+1);c.push(a.key),R=c,_({action:"PUSH",location:a})}else window.location.href=t}}))},replace:function(e,t){var a=w(e,t,T(),A.location);C.confirmTransitionTo(a,"REPLACE",c,(function(e){if(e){var t=I(a),o=a.key,i=a.state;if(r)if(n.replaceState({key:o,state:i},null,t),l)window.location.replace(t);else{var u=R.indexOf(A.location.key);-1!==u&&(R[u]=a.key),_({action:"REPLACE",location:a})}else window.location.replace(t)}}))},go:L,goBack:function(){L(-1)},goForward:function(){L(1)},block:function(e){void 0===e&&(e=!1);var t=C.setPrompt(e);return D||(j(1),D=!0),function(){return D&&(D=!1,j(-1)),t()}},listen:function(e){var t=C.appendListener(e);return j(1),function(){j(-1),t()}}};return A}var C={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+v(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:v,decodePath:h},slash:{encodePath:h,decodePath:h}};function _(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function P(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function N(e){window.location.replace(_(window.location.href)+"#"+e)}function O(e){void 0===e&&(e={}),x||m(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),r=n.getUserConfirmation,a=void 0===r?E:r,o=n.hashType,i=void 0===o?"slash":o,l=e.basename?g(h(e.basename)):"",u=C[i],c=u.encodePath,f=u.decodePath;function d(){var e=f(P());return l&&(e=y(e,l)),w(e)}var p=k();function v(e){s(A,e),A.length=t.length,p.notifyListeners(A.location,A.action)}var S=!1,T=null;function O(){var e,t,n=P(),r=c(n);if(n!==r)N(r);else{var o=d(),i=A.location;if(!S&&(t=o,(e=i).pathname===t.pathname&&e.search===t.search&&e.hash===t.hash))return;if(T===b(o))return;T=null,function(e){if(S)S=!1,v();else{p.confirmTransitionTo(e,"POP",a,(function(t){t?v({action:"POP",location:e}):function(e){var t=A.location,n=I.lastIndexOf(b(t));-1===n&&(n=0);var r=I.lastIndexOf(b(e));-1===r&&(r=0);var a=n-r;a&&(S=!0,L(a))}(e)}))}}(o)}}var z=P(),M=c(z);z!==M&&N(M);var R=d(),I=[b(R)];function L(e){t.go(e)}var F=0;function j(e){1===(F+=e)&&1===e?window.addEventListener("hashchange",O):0===F&&window.removeEventListener("hashchange",O)}var D=!1;var A={length:t.length,action:"POP",location:R,createHref:function(e){var t=document.querySelector("base"),n="";return t&&t.getAttribute("href")&&(n=_(window.location.href)),n+"#"+c(l+b(e))},push:function(e,t){var n=w(e,void 0,void 0,A.location);p.confirmTransitionTo(n,"PUSH",a,(function(e){if(e){var t=b(n),r=c(l+t);if(P()!==r){T=t,function(e){window.location.hash=e}(r);var a=I.lastIndexOf(b(A.location)),o=I.slice(0,a+1);o.push(t),I=o,v({action:"PUSH",location:n})}else v()}}))},replace:function(e,t){var n=w(e,void 0,void 0,A.location);p.confirmTransitionTo(n,"REPLACE",a,(function(e){if(e){var t=b(n),r=c(l+t);P()!==r&&(T=t,N(r));var a=I.indexOf(b(A.location));-1!==a&&(I[a]=t),v({action:"REPLACE",location:n})}}))},go:L,goBack:function(){L(-1)},goForward:function(){L(1)},block:function(e){void 0===e&&(e=!1);var t=p.setPrompt(e);return D||(j(1),D=!0),function(){return D&&(D=!1,j(-1)),t()}},listen:function(e){var t=p.appendListener(e);return j(1),function(){j(-1),t()}}};return A}function z(e,t,n){return Math.min(Math.max(e,t),n)}function M(e){void 0===e&&(e={});var t=e,n=t.getUserConfirmation,r=t.initialEntries,a=void 0===r?["/"]:r,o=t.initialIndex,i=void 0===o?0:o,l=t.keyLength,u=void 0===l?6:l,c=k();function f(e){s(y,e),y.length=y.entries.length,c.notifyListeners(y.location,y.action)}function d(){return Math.random().toString(36).substr(2,u)}var p=z(i,0,a.length-1),m=a.map((function(e){return w(e,void 0,"string"==typeof e?d():e.key||d())})),h=b;function v(e){var t=z(y.index+e,0,y.entries.length-1),r=y.entries[t];c.confirmTransitionTo(r,"POP",n,(function(e){e?f({action:"POP",location:r,index:t}):f()}))}var y={length:m.length,action:"POP",location:m[p],index:p,entries:m,createHref:h,push:function(e,t){var r=w(e,t,d(),y.location);c.confirmTransitionTo(r,"PUSH",n,(function(e){if(e){var t=y.index+1,n=y.entries.slice(0);n.length>t?n.splice(t,n.length-t,r):n.push(r),f({action:"PUSH",location:r,index:t,entries:n})}}))},replace:function(e,t){var r=w(e,t,d(),y.location);c.confirmTransitionTo(r,"REPLACE",n,(function(e){e&&(y.entries[y.index]=r,f({action:"REPLACE",location:r}))}))},go:v,goBack:function(){v(-1)},goForward:function(){v(1)},canGo:function(e){var t=y.index+e;return t>=0&&t<y.entries.length},block:function(e){return void 0===e&&(e=!1),c.setPrompt(e)},listen:function(e){return c.appendListener(e)}};return y}var R=n(3),I=n.n(R),L=n(9),F=n.n(L);function j(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(n,r){e=n,t.forEach((function(t){return t(e,r)}))}}}var D=a.a.createContext||function(e,t){var n,a,o="__create-react-context-"+F()()+"__",i=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).emitter=j(t.props.value),t}I()(n,e);var r=n.prototype;return r.getChildContext=function(){var e;return(e={})[o]=this.emitter,e},r.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,r=this.props.value,a=e.value;((o=r)===(i=a)?0!==o||1/o==1/i:o!=o&&i!=i)?n=0:(n="function"==typeof t?t(r,a):1073741823,0!==(n|=0)&&this.emitter.set(e.value,n))}var o,i},r.render=function(){return this.props.children},n}(r.Component);i.childContextTypes=((n={})[o]=c.a.object.isRequired,n);var l=function(t){function n(){var e;return(e=t.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(t,n){0!=((0|e.observedBits)&n)&&e.setState({value:e.getValue()})},e}I()(n,t);var r=n.prototype;return r.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?1073741823:t},r.componentDidMount=function(){this.context[o]&&this.context[o].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?1073741823:e},r.componentWillUnmount=function(){this.context[o]&&this.context[o].off(this.onUpdate)},r.getValue=function(){return this.context[o]?this.context[o].get():e},r.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(r.Component);return l.contextTypes=((a={})[o]=c.a.object,a),{Provider:i,Consumer:l}},A=n(4),U=n.n(A);n(7);function $(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}var H=n(10),V=n.n(H),W=function(e){var t=D();return t.displayName=e,t}("Router"),B=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen((function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e}))),n}l(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return a.a.createElement(W.Provider,{children:this.props.children||null,value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}})},t}(a.a.Component);a.a.Component;a.a.Component;var Q={},K=0;function q(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,a=n.exact,o=void 0!==a&&a,i=n.strict,l=void 0!==i&&i,u=n.sensitive,c=void 0!==u&&u;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=Q[n]||(Q[n]={});if(r[e])return r[e];var a=[],o={regexp:U()(e,a,t),keys:a};return K<1e4&&(r[e]=o,K++),o}(n,{end:o,strict:l,sensitive:c}),a=r.regexp,i=r.keys,u=a.exec(e);if(!u)return null;var s=u[0],f=u.slice(1),d=e===s;return o&&!d?null:{path:n,url:"/"===n&&""===s?"/":s,isExact:d,params:i.reduce((function(e,t,n){return e[t.name]=f[n],e}),{})}}),null)}var Y=function(e){function t(){return e.apply(this,arguments)||this}return l(t,e),t.prototype.render=function(){var e=this;return a.a.createElement(W.Consumer,null,(function(t){t||m(!1);var n=e.props.location||t.location,r=s({},t,{location:n,match:e.props.computedMatch?e.props.computedMatch:e.props.path?q(n.pathname,e.props):t.match}),o=e.props,i=o.children,l=o.component,u=o.render;return Array.isArray(i)&&0===i.length&&(i=null),a.a.createElement(W.Provider,{value:r},r.match?i?"function"==typeof i?i(r):i:l?a.a.createElement(l,r):u?u(r):null:"function"==typeof i?i(r):null)}))},t}(a.a.Component);function X(e){return"/"===e.charAt(0)?e:"/"+e}function J(e,t){if(!e)return t;var n=X(e);return 0!==t.pathname.indexOf(n)?t:s({},t,{pathname:t.pathname.substr(n.length)})}function G(e){return"string"==typeof e?e:b(e)}function Z(e){return function(){m(!1)}}function ee(){}a.a.Component;a.a.Component;a.a.useContext;a.a.Component;var te=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return(t=e.call.apply(e,[this].concat(r))||this).history=O(t.props),t}return l(t,e),t.prototype.render=function(){return a.a.createElement(B,{history:this.history,children:this.props.children})},t}(a.a.Component);var ne=function(e,t){return"function"==typeof e?e(t):e},re=function(e,t){return"string"==typeof e?w(e,null,null,t):e},ae=function(e){return e},oe=a.a.forwardRef;void 0===oe&&(oe=ae);var ie=oe((function(e,t){var n=e.innerRef,r=e.navigate,o=e.onClick,i=$(e,["innerRef","navigate","onClick"]),l=i.target,u=s({},i,{onClick:function(e){try{o&&o(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||l&&"_self"!==l||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return u.ref=ae!==oe&&t||n,a.a.createElement("a",u)}));var le=oe((function(e,t){var n=e.component,r=void 0===n?ie:n,o=e.replace,i=e.to,l=e.innerRef,u=$(e,["component","replace","to","innerRef"]);return a.a.createElement(W.Consumer,null,(function(e){e||m(!1);var n=e.history,c=re(ne(i,e.location),e.location),f=c?n.createHref(c):"",d=s({},u,{href:f,navigate:function(){var t=ne(i,e.location);(o?n.replace:n.push)(t)}});return ae!==oe?d.ref=t||l:d.innerRef=l,a.a.createElement(r,d)}))})),ue=function(e){return e},ce=a.a.forwardRef;void 0===ce&&(ce=ue);ce((function(e,t){var n=e["aria-current"],r=void 0===n?"page":n,o=e.activeClassName,i=void 0===o?"active":o,l=e.activeStyle,u=e.className,c=e.exact,f=e.isActive,d=e.location,p=e.strict,h=e.style,v=e.to,y=e.innerRef,g=$(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","strict","style","to","innerRef"]);return a.a.createElement(W.Consumer,null,(function(e){e||m(!1);var n=d||e.location,o=re(ne(v,n),n),b=o.pathname,w=b&&b.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),k=w?q(n.pathname,{path:w,exact:c,strict:p}):null,x=!!(f?f(k,n):k),E=x?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(u,i):u,S=x?s({},h,{},l):h,T=s({"aria-current":x&&r||null,className:E,style:S,to:o},g);return ue!==ce?T.ref=t||y:T.innerRef=y,a.a.createElement(le,T)}))}));class se extends r.Component{render(){return a.a.createElement("h1",null,"yo",a.a.createElement("span",{className:"badge badge-info"},this.props.name),"!")}}var fe=se,de="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto),pe=new Uint8Array(16);function me(){if(!de)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return de(pe)}for(var he=[],ve=0;ve<256;++ve)he[ve]=(ve+256).toString(16).substr(1);var ye=function(e,t){var n=t||0,r=he;return[r[e[n++]],r[e[n++]],r[e[n++]],r[e[n++]],"-",r[e[n++]],r[e[n++]],"-",r[e[n++]],r[e[n++]],"-",r[e[n++]],r[e[n++]],"-",r[e[n++]],r[e[n++]],r[e[n++]],r[e[n++]],r[e[n++]],r[e[n++]]].join("")};var ge=function(e,t,n){var r=t&&n||0;"string"==typeof e&&(t="binary"===e?new Array(16):null,e=null);var a=(e=e||{}).random||(e.rng||me)();if(a[6]=15&a[6]|64,a[8]=63&a[8]|128,t)for(var o=0;o<16;++o)t[r+o]=a[o];return t||ye(a)};var be=new class{constructor(e){this.storage=e}async getUserId(){const e=await this.storage.read("user-id");return e||null}async createUserId(){const e=await this._generateUserId();return await this.storage.create("user-id",e),e}async _generateUserId(){return ge()}async isUserIdCreated(){return null!==await this.storage.read("user-id")}async clearStoredUserId(){await this.storage.remove("user-id")}}({create:async(e,t)=>await localStorage.setItem(e,JSON.stringify(t)),update:async(e,t)=>await localStorage.setItem(e,JSON.stringify(t)),async read(e){const t=await localStorage.getItem(e);try{return JSON.parse(t)}catch(e){return t}},remove:async e=>await localStorage.removeItem(e)}),we={create:async(e,t)=>(await fetch(e,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(t)})).json(),update:async(e,t)=>(await fetch(e,{method:"PUT",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(t)})).json(),read:async(e,t)=>(await fetch(`${e}/${t}`,{method:"GET"})).json(),remove:async(e,t)=>(await fetch(`${e}/${t}`,{method:"DELETE"})).json()};const ke="https://fakes.herokuapp.com/users";var xe={create(e,t){const n=Object.assign({id:e},t);return we.create(ke,n)},update:(e,t)=>we.update(`${ke}/${e}`,t),read:e=>we.read(ke,e),remove:e=>we.remove(ke,e)};var Ee=new class{constructor(e){this.storage=e}async createUser(e){return console.log("UserHelper#saveAnswers"),await this.storage.create(e)}async removeUser(e){return await this.storage.remove(e)}}(xe);class Se extends r.Component{constructor(e){super(e),this.state={userName:"there",isUserCreated:!1}}componentDidMount(){this.updateUserState()}async updateUserState(){const e=await be.isUserIdCreated(),t=await be.getUserId()||"there";this.setState(n=>({...n,isUserCreated:e,userName:t}))}async createUser(){const e=await be.createUserId();console.log("IntroComponent#createUser",e),await Ee.createUser(e),await this.updateUserState()}async redirectToForm(){const e=await be.getUserId(),{history:t}=this.props;t.push(`/user/${e}`)}async removeUser(){const e=await be.getUserId();await be.clearStoredUserId(),await this.updateUserState(),await Ee.removeUser(e)}render(){return a.a.createElement("div",{className:"container"},a.a.createElement("div",{className:"jumbotron"},a.a.createElement(fe,{name:this.state.userName}),!this.state.isUserCreated&&a.a.createElement(a.a.Fragment,null,a.a.createElement("button",{className:"btn btn-success",onClick:()=>this.createUser()},"StwÃ³rz uÅ¼ytkownika")),this.state.isUserCreated&&a.a.createElement(a.a.Fragment,null,a.a.createElement("p",{className:"lead"},"Zdefiniuj swoje umiejÄ™tnoÅ›ci"),a.a.createElement("button",{className:"btn btn-success",onClick:()=>this.redirectToForm()},"Wpisz swoje umiejÄ™tnoÅ›ci"),a.a.createElement("button",{className:"btn btn-danger ml-3",onClick:()=>this.removeUser()},"UsuÅ„ zapisane wartoÅ›ci"))))}}var Te,Ce,_e,Pe=(Ce="withRouter("+((Te=Se).displayName||Te.name)+")",(_e=function(e){var t=e.wrappedComponentRef,n=$(e,["wrappedComponentRef"]);return a.a.createElement(W.Consumer,null,(function(e){return e||m(!1),a.a.createElement(Te,s({},n,e,{ref:t}))}))}).displayName=Ce,_e.WrappedComponent=Te,V()(_e,Te)),Ne=n(5),Oe=n.n(Ne);var ze=new class{constructor(e){this.storage=e}async getByUserId(e){console.log("AnswersHelper#getByUserId");const t={};try{const n=await this.storage.read(e);return n&&n.answers?n.answers:t}catch(e){return t}}async updateAnswers(e,t){return console.log("AnswersHelper#updateAnswers"),await this.storage.update(e,{answers:t})}}(xe);class Me extends r.Component{constructor(e){super(e),this.state={answers:{javascriptLevel:0,hasVisitedWorkshops:"",javascriptDurationExperience:"",typescriptLevel:0,isTypeScriptLover:"",knowsInterpolationProcess:"",knowsDifferenceBetweenDOMAndHTML:"",isSCSSLover:""}},this.$form=a.a.createRef(),this.onChangeField_knowsInterpolationProcess=this.onChangeField_knowsInterpolationProcess.bind(this)}async componentDidMount(){const e=await be.getUserId(),t=await be.getUserId()||"there",n=await ze.getByUserId(e),r=Object.assign(this.state.answers,n);this.setState({userName:t,answers:r})}async onSubmit(e){e.preventDefault();const t=new FormData(this.$form.current),n={};console.group("Dane formularza");for(let[e,r]of t.entries())console.log(e,r),n[e]=r;console.groupEnd();const r=Object.assign(this.state.answers,n);this.setState({answers:r});const a=this.props.match.params.id;await ze.updateAnswers(a,n)}_updateStateField(e,t){console.warn("_updateStateField",e,t());const n=Object.assign(this.state.answers,{[e]:t()});this.setState({answers:n})}onChangeField_hasVisitedWorkshops(e){this._updateStateField("hasVisitedWorkshops",()=>e.target.value)}onChangeField_javascriptLevel(e){this._updateStateField("javascriptLevel",()=>e)}onChangeField_javascriptDurationExperience(e){this._updateStateField("javascriptDurationExperience",()=>e.target.value)}onChangeField_typescriptLevel(e){this._updateStateField("typescriptLevel",()=>e)}onChangeField_isTypeScriptLover(e){this._updateStateField("isTypeScriptLover",()=>!this.state.answers.isTypeScriptLover)}onChangeField_knowsInterpolationProcess(e){this._updateStateField("knowsInterpolationProcess",()=>!this.state.answers.knowsInterpolationProcess)}onChangeField_knowsDifferenceBetweenDOMAndHTML(e){this._updateStateField("knowsDifferenceBetweenDOMAndHTML",()=>!this.state.answers.knowsDifferenceBetweenDOMAndHTML)}onChangeField_isSCSSLover(e){this._updateStateField("isSCSSLover",()=>!this.state.answers.isSCSSLover)}render(){return a.a.createElement("div",{className:"container"},a.a.createElement("div",{className:"jumbotron"},a.a.createElement(fe,{name:this.state.userName}),a.a.createElement("p",{className:"lead"},"Odpowiadaj na pytania bez przekÅ‚amywania."),a.a.createElement(le,{to:"/",className:"btn btn-warning"},"PowrÃ³t do strony gÅ‚Ã³wnej")),a.a.createElement("form",{onSubmit:e=>this.onSubmit(e),ref:this.$form},a.a.createElement("h2",{className:"bg-dark text-white p-2"},"Pytania"),a.a.createElement("h3",null,"JavaScript"),a.a.createElement("div",{className:"jumbotron py-4"},a.a.createElement("div",{className:"form-group"},a.a.createElement("label",null,"OkreÅ›l swÃ³j poziom znajomoÅ›ci jÄ™zyka JavaScript:"),a.a.createElement("div",null,a.a.createElement(Oe.a,{className:"stars",name:"javascriptLevel",starCount:10,value:Number(this.state.answers.javascriptLevel),onStarClick:e=>this.onChangeField_javascriptLevel(e)}))),a.a.createElement("div",{className:"form-group"},a.a.createElement("label",{htmlFor:"has-visited-workshops"},"Czy byÅ‚eÅ› kiedyÅ› na warsztatach?"),a.a.createElement("div",{className:"row"},a.a.createElement("span",{className:"col-3 text-danger text-center"},"Nie"),a.a.createElement("input",{id:"has-visited-workshops",type:"range",className:"form-control-range col-6 p-0",name:"hasVisitedWorkshops",step:"1",min:"0",max:"1",value:this.state.answers.hasVisitedWorkshops,onChange:e=>this.onChangeField_hasVisitedWorkshops(e)}),a.a.createElement("span",{className:"col-3 text-success text-center"},"Tak"))),a.a.createElement("div",{className:"form-group"},a.a.createElement("label",{htmlFor:"javascript-experience"},"Od ilu lat programujesz w JavaScript?"),a.a.createElement("select",{className:"form-control",id:"javascript-duration-experience",name:"javascriptDurationExperience",value:this.state.answers.javascriptDurationExperience,onChange:e=>this.onChangeField_javascriptDurationExperience(e)},a.a.createElement("option",{value:"0"},"wybierz"),a.a.createElement("option",null,"1"),a.a.createElement("option",null,"2"),a.a.createElement("option",null,"3"),a.a.createElement("option",null,"4"),a.a.createElement("option",null,"5"),a.a.createElement("option",null,"6"),a.a.createElement("option",null,"7"),a.a.createElement("option",null,"8"),a.a.createElement("option",null,"9"),a.a.createElement("option",null,"10")))),a.a.createElement("h3",null,"TypeScript"),a.a.createElement("div",{className:"jumbotron py-4"},a.a.createElement("div",{className:"form-group"},a.a.createElement("label",{htmlFor:"formControlRange"},"OkreÅ›l swÃ³j poziom znajomoÅ›ci jÄ™zyka TypeScript:"),a.a.createElement("br",null),a.a.createElement(Oe.a,{className:"stars",name:"typescriptLevel",starCount:10,onStarClick:this.onStarClick,value:Number(this.state.answers.typescriptLevel),onStarClick:e=>this.onChangeField_typescriptLevel(e)})),a.a.createElement("div",{className:"form-group form-check"},a.a.createElement("label",{className:"form-check-label"},a.a.createElement("input",{className:"form-check-input",type:"checkbox",value:"1",name:"isTypeScriptLover",checked:this.state.answers.isTypeScriptLover,onChange:e=>this.onChangeField_isTypeScriptLover(e)}),"Czy preferujesz pisanie kodu w TypeScript?"))),a.a.createElement("h3",null,"HTML"),a.a.createElement("div",{className:"jumbotron py-4"},a.a.createElement("div",{className:"form-group form-check"},a.a.createElement("label",{className:"form-check-label"},a.a.createElement("input",{className:"form-check-input",type:"checkbox",value:"1",name:"knowsInterpolationProcess",checked:this.state.answers.knowsInterpolationProcess,onChange:this.onChangeField_knowsInterpolationProcess}),"Czy wiesz co to jest interpolacja?")),a.a.createElement("div",{className:"form-group form-check"},a.a.createElement("label",{className:"form-check-label"},a.a.createElement("input",{className:"form-check-input",type:"checkbox",value:"1",name:"knowsDifferenceBetweenDOMAndHTML",checked:this.state.answers.knowsDifferenceBetweenDOMAndHTML,onChange:e=>this.onChangeField_knowsDifferenceBetweenDOMAndHTML(e)}),"Czy znasz roÅ¼nicÄ™ miÄ™dzy elementem DOM a znacznikiem HTML?"))),a.a.createElement("h3",null,"SASS"),a.a.createElement("div",{className:"jumbotron py-4"},a.a.createElement("div",{className:"form-group form-check"},a.a.createElement("label",{className:"form-check-label"},a.a.createElement("input",{className:"form-check-input",type:"checkbox",value:"1",name:"isSCSSLover",checked:this.state.answers.isSCSSLover,onChange:e=>this.onChangeField_isSCSSLover(e)}),"Czy znasz skÅ‚adniÄ™ SCSS?"))),a.a.createElement("div",{className:"form-group"},a.a.createElement("input",{className:"btn btn-primary",type:"submit",value:"Zapisz"}))))}}var Re=Me,Ie=class extends a.a.PureComponent{render(){return a.a.createElement(te,null,a.a.createElement("div",{id:"main",className:"my-4"},a.a.createElement(Y,{exact:!0,path:"/",component:Pe}),a.a.createElement(Y,{exact:!0,path:"/user/:id",component:Re})))}};i.a.render(a.a.createElement(Ie,null),document.querySelector("#app"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzTG9vc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9ub2RlX21vZHVsZXMvcGF0aC10by1yZWdleHAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXN0YXItcmF0aW5nLWNvbXBvbmVudC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ3VkL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy9kaXN0L2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzLmNqcy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL21haW4uc2Nzcz82OWM3Iiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL21haW4uc2NzcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL25vZGVfbW9kdWxlcy9pc2FycmF5L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NsYXNzbmFtZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4Lmh0bWwiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUtcGF0aG5hbWUvZXNtL3Jlc29sdmUtcGF0aG5hbWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3RpbnktaW52YXJpYW50L2Rpc3QvdGlueS1pbnZhcmlhbnQuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzbS9oaXN0b3J5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9taW5pLWNyZWF0ZS1yZWFjdC1jb250ZXh0L2Rpc3QvZXNtL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXNtL3JlYWN0LXJvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lc20vcmVhY3Qtcm91dGVyLWRvbS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL2hlYWRsaW5lLmpzeCIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3JuZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL2J5dGVzVG9VdWlkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdjQuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NjcmlwdHMvaGVscGVycy91c2VyLWlkLmhlbHBlci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9jb25maWdzL3N0b3JhZ2UuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NjcmlwdHMvc2VydmljZXMvbG9jYWwtc3RvcmFnZS5zZXJ2aWNlLmpzIiwid2VicGFjazovLy8uL3NyYy9zY3JpcHRzL3NlcnZpY2VzL2h0dHAuc2VydmljZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9jb25maWdzL3VybHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NjcmlwdHMvc2VydmljZXMvaHR0cC11c2Vycy1zdG9yYWdlLnNlcnZpY2UuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NjcmlwdHMvaGVscGVycy91c2VyLmhlbHBlci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL2ludHJvLmpzeCIsIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9oZWxwZXJzL2Fuc3dlcnMuaGVscGVyLmpzIiwid2VicGFjazovLy8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvZm9ybS5qc3giLCJ3ZWJwYWNrOi8vLy4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9hcHAuanN4Iiwid2VicGFjazovLy8uL3NyYy9zY3JpcHRzL21haW4uanN4Il0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiY29uc3RydWN0b3IiLCJfX3Byb3RvX18iLCJpc2FycmF5IiwicGF0aFRvUmVnZXhwIiwicGFyc2UiLCJjb21waWxlIiwic3RyIiwib3B0aW9ucyIsInRva2Vuc1RvRnVuY3Rpb24iLCJ0b2tlbnNUb1JlZ0V4cCIsIlBBVEhfUkVHRVhQIiwiUmVnRXhwIiwiam9pbiIsInJlcyIsInRva2VucyIsImluZGV4IiwicGF0aCIsImRlZmF1bHREZWxpbWl0ZXIiLCJkZWxpbWl0ZXIiLCJleGVjIiwiZXNjYXBlZCIsIm9mZnNldCIsInNsaWNlIiwibGVuZ3RoIiwibmV4dCIsInByZWZpeCIsImNhcHR1cmUiLCJncm91cCIsIm1vZGlmaWVyIiwiYXN0ZXJpc2siLCJwdXNoIiwicGFydGlhbCIsInJlcGVhdCIsIm9wdGlvbmFsIiwicGF0dGVybiIsImVzY2FwZUdyb3VwIiwiZXNjYXBlU3RyaW5nIiwic3Vic3RyIiwiZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IiwiZW5jb2RlVVJJIiwicmVwbGFjZSIsImNoYXJDb2RlQXQiLCJ0b1N0cmluZyIsInRvVXBwZXJDYXNlIiwibWF0Y2hlcyIsIkFycmF5IiwiZmxhZ3MiLCJvYmoiLCJvcHRzIiwiZGF0YSIsImVuY29kZSIsInByZXR0eSIsImVuY29kZVVSSUNvbXBvbmVudCIsInRva2VuIiwic2VnbWVudCIsIlR5cGVFcnJvciIsIkpTT04iLCJzdHJpbmdpZnkiLCJqIiwidGVzdCIsImF0dGFjaEtleXMiLCJyZSIsImtleXMiLCJzZW5zaXRpdmUiLCJzdHJpY3QiLCJlbmQiLCJyb3V0ZSIsImVuZHNXaXRoRGVsaW1pdGVyIiwiZ3JvdXBzIiwic291cmNlIiwibWF0Y2giLCJyZWdleHBUb1JlZ2V4cCIsInBhcnRzIiwiYXJyYXlUb1JlZ2V4cCIsInN0cmluZ1RvUmVnZXhwIiwiX2NyZWF0ZUNsYXNzIiwiZGVmaW5lUHJvcGVydGllcyIsInRhcmdldCIsInByb3BzIiwiZGVzY3JpcHRvciIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiQ29uc3RydWN0b3IiLCJwcm90b1Byb3BzIiwic3RhdGljUHJvcHMiLCJfcmVhY3QiLCJfcmVhY3QyIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9wcm9wVHlwZXMyIiwiX2NsYXNzbmFtZXMyIiwiZGVmYXVsdCIsIlN0YXJSYXRpbmdDb21wb25lbnQiLCJfQ29tcG9uZW50IiwiaW5zdGFuY2UiLCJfY2xhc3NDYWxsQ2hlY2siLCJ0aGlzIiwiX3RoaXMiLCJzZWxmIiwiUmVmZXJlbmNlRXJyb3IiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsImdldFByb3RvdHlwZU9mIiwic3RhdGUiLCJzZXRQcm90b3R5cGVPZiIsIl9pbmhlcml0cyIsIm5leHRQcm9wcyIsInNldFN0YXRlIiwiaW5wdXRWYWx1ZSIsIl9wcm9wcyIsImVkaXRpbmciLCJlIiwic3RvcFByb3BhZ2F0aW9uIiwiX3Byb3BzMiIsIm9uU3RhckNsaWNrIiwiX3Byb3BzMyIsIm9uU3RhckhvdmVyIiwiX3Byb3BzNCIsIm9uU3RhckhvdmVyT3V0IiwiX3RoaXMyIiwiX3Byb3BzNSIsInN0YXJDb3VudCIsInN0YXJDb2xvciIsImVtcHR5U3RhckNvbG9yIiwic3RhclN0eWxlcyIsImZsb2F0IiwiY3Vyc29yIiwiY29sb3IiLCJyYWRpb1N0eWxlcyIsImRpc3BsYXkiLCJwb3NpdGlvbiIsIm1hcmdpbkxlZnQiLCJzdGFyTm9kZXMiLCJfbG9vcCIsImlkIiwic3Rhck5vZGVJbnB1dCIsImNyZWF0ZUVsZW1lbnQiLCJzdHlsZSIsImNsYXNzTmFtZSIsInR5cGUiLCJjaGVja2VkIiwib25DaGFuZ2UiLCJzdGFyTm9kZUxhYmVsIiwiaHRtbEZvciIsIm9uQ2xpY2siLCJvbk1vdXNlT3ZlciIsIm9uTW91c2VMZWF2ZSIsInJlbmRlckljb24iLCJfcHJvcHM2IiwicmVuZGVyU3Rhckljb24iLCJyZW5kZXJTdGFySWNvbkhhbGYiLCJNYXRoIiwiY2VpbCIsImZvbnRTdHlsZSIsIl9wcm9wczciLCJjbGFzc2VzIiwicmVuZGVyU3RhcnMiLCJDb21wb25lbnQiLCJwcm9wVHlwZXMiLCJzdHJpbmciLCJpc1JlcXVpcmVkIiwibnVtYmVyIiwiYm9vbCIsImZ1bmMiLCJkZWZhdWx0UHJvcHMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJwcm9wSXNFbnVtZXJhYmxlIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJ0b09iamVjdCIsInZhbCIsImFzc2lnbiIsInRlc3QxIiwiU3RyaW5nIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsInRlc3QyIiwiZnJvbUNoYXJDb2RlIiwibWFwIiwidGVzdDMiLCJzcGxpdCIsImZvckVhY2giLCJsZXR0ZXIiLCJlcnIiLCJzaG91bGRVc2VOYXRpdmUiLCJmcm9tIiwic3ltYm9scyIsInRvIiwiYXJndW1lbnRzIiwiY2hlY2tEQ0UiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJjb25zb2xlIiwiZXJyb3IiLCJnbG9iYWwiLCJyZWFjdElzIiwiUkVBQ1RfU1RBVElDUyIsImNoaWxkQ29udGV4dFR5cGVzIiwiY29udGV4dFR5cGUiLCJjb250ZXh0VHlwZXMiLCJkaXNwbGF5TmFtZSIsImdldERlZmF1bHRQcm9wcyIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsIm1peGlucyIsIktOT1dOX1NUQVRJQ1MiLCJjYWxsZXIiLCJjYWxsZWUiLCJhcml0eSIsIk1FTU9fU1RBVElDUyIsImNvbXBhcmUiLCJUWVBFX1NUQVRJQ1MiLCJnZXRTdGF0aWNzIiwiY29tcG9uZW50IiwiaXNNZW1vIiwiRm9yd2FyZFJlZiIsInJlbmRlciIsIk1lbW8iLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJvYmplY3RQcm90b3R5cGUiLCJob2lzdE5vblJlYWN0U3RhdGljcyIsInRhcmdldENvbXBvbmVudCIsInNvdXJjZUNvbXBvbmVudCIsImJsYWNrbGlzdCIsImluaGVyaXRlZENvbXBvbmVudCIsImNvbmNhdCIsInRhcmdldFN0YXRpY3MiLCJzb3VyY2VTdGF0aWNzIiwiYXBpIiwiY29udGVudCIsImV4cG9ydGVkIiwibG9jYWxzIiwibWVtbyIsImlzT2xkSUUiLCJCb29sZWFuIiwid2luZG93IiwiZG9jdW1lbnQiLCJhbGwiLCJhdG9iIiwiZ2V0VGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJxdWVyeVNlbGVjdG9yIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwic3R5bGVzSW5Eb20iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJsaXN0IiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiaXRlbSIsImJhc2UiLCJjb3VudCIsImNzcyIsIm1lZGlhIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRTdHlsZSIsImluc2VydFN0eWxlRWxlbWVudCIsImF0dHJpYnV0ZXMiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJ0ZXh0U3RvcmUiLCJyZXBsYWNlVGV4dCIsInJlcGxhY2VtZW50IiwiZmlsdGVyIiwiYXBwbHlUb1NpbmdsZXRvblRhZyIsInJlbW92ZSIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiY3NzTm9kZSIsImNyZWF0ZVRleHROb2RlIiwiY2hpbGROb2RlcyIsInJlbW92ZUNoaWxkIiwiaW5zZXJ0QmVmb3JlIiwiYXBwbHlUb1RhZyIsInJlbW92ZUF0dHJpYnV0ZSIsImJ0b2EiLCJ1bmVzY2FwZSIsImZpcnN0Q2hpbGQiLCJzaW5nbGV0b24iLCJzaW5nbGV0b25Db3VudGVyIiwidXBkYXRlIiwic3R5bGVJbmRleCIsInBhcmVudE5vZGUiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJuZXdPYmoiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJzcGxpY2UiLCJfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18iLCJ1c2VTb3VyY2VNYXAiLCJjc3NNYXBwaW5nIiwic291cmNlTWFwcGluZyIsImJhc2U2NCIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlUm9vdCIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJtZWRpYVF1ZXJ5IiwiZGVkdXBlIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImZvciIsInEiLCJ1IiwidiIsInciLCJ4IiwieSIsInoiLCJBIiwiQiIsIml0ZXJhdG9yIiwiQyIsImEiLCJiIiwiRCIsImlzTW91bnRlZCIsImVucXVldWVGb3JjZVVwZGF0ZSIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlU2V0U3RhdGUiLCJFIiwiRiIsImNvbnRleHQiLCJyZWZzIiwiRyIsIkgiLCJpc1JlYWN0Q29tcG9uZW50IiwiZm9yY2VVcGRhdGUiLCJJIiwiaXNQdXJlUmVhY3RDb21wb25lbnQiLCJKIiwiY3VycmVudCIsIksiLCJMIiwicmVmIiwiX19zZWxmIiwiX19zb3VyY2UiLCJNIiwiZyIsImsiLCJmIiwiY2hpbGRyZW4iLCJoIiwiJCR0eXBlb2YiLCJfb3duZXIiLCJPIiwiUCIsIlEiLCJSIiwicG9wIiwia2V5UHJlZml4IiwiUyIsIlYiLCJUIiwiVSIsImlzQXJyYXkiLCJkb25lIiwiZXNjYXBlIiwiVyIsImFhIiwiWCIsIk4iLCJZIiwiWiIsImJhIiwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlciIsIlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnIiwic3VzcGVuc2UiLCJSZWFjdEN1cnJlbnRPd25lciIsIklzU29tZVJlbmRlcmVyQWN0aW5nIiwiQ2hpbGRyZW4iLCJ0b0FycmF5Iiwib25seSIsIkZyYWdtZW50IiwiUHJvZmlsZXIiLCJQdXJlQ29tcG9uZW50IiwiU3RyaWN0TW9kZSIsIlN1c3BlbnNlIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJjbG9uZUVsZW1lbnQiLCJjcmVhdGVDb250ZXh0IiwiX2NhbGN1bGF0ZUNoYW5nZWRCaXRzIiwiX2N1cnJlbnRWYWx1ZSIsIl9jdXJyZW50VmFsdWUyIiwiX3RocmVhZENvdW50IiwiUHJvdmlkZXIiLCJDb25zdW1lciIsIl9jb250ZXh0IiwiY3JlYXRlRmFjdG9yeSIsImNyZWF0ZVJlZiIsImZvcndhcmRSZWYiLCJpc1ZhbGlkRWxlbWVudCIsImxhenkiLCJfY3RvciIsIl9zdGF0dXMiLCJfcmVzdWx0IiwidXNlQ2FsbGJhY2siLCJ1c2VDb250ZXh0IiwidXNlRGVidWdWYWx1ZSIsInVzZUVmZmVjdCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VNZW1vIiwidXNlUmVkdWNlciIsInVzZVJlZiIsInVzZVN0YXRlIiwidmVyc2lvbiIsImFwcGx5Iiwib25FcnJvciIsImRhIiwiZWEiLCJmYSIsImhhIiwiaWEiLCJqYSIsImxhIiwibWEiLCJuYSIsIm9hIiwiY3VycmVudFRhcmdldCIsImthIiwicGEiLCJxYSIsInJhIiwic2EiLCJ0YSIsInVhIiwidmEiLCJ3YSIsInhhIiwieWEiLCJ6YSIsIkFhIiwiQmEiLCJDYSIsIkRhIiwiRWEiLCJGYSIsIkdhIiwiSWEiLCJKYSIsInRhZyIsIl9kZWJ1Z093bmVyIiwiX2RlYnVnU291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwicmV0dXJuIiwiS2EiLCJMYSIsIk1hIiwiaW5kZXhPZiIsIk5hIiwiZXh0cmFjdEV2ZW50cyIsImV2ZW50VHlwZXMiLCJPYSIsInBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzIiwiUGEiLCJyZWdpc3RyYXRpb25OYW1lIiwiUWEiLCJSYSIsImRlcGVuZGVuY2llcyIsIlNhIiwiVGEiLCJVYSIsIlZhIiwiV2EiLCJYYSIsInN0YXRlTm9kZSIsIllhIiwiWmEiLCIkYSIsImFiIiwiYmIiLCJjYiIsImRiIiwiZWIiLCJmYiIsImdiIiwiaGIiLCJpYiIsImpiIiwia2IiLCJhY2NlcHRzQm9vbGVhbnMiLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwic2FuaXRpemVVUkwiLCJ0b0xvd2VyQ2FzZSIsIm9iIiwicGIiLCJxYiIsIm1iIiwiaXNOYU4iLCJuYiIsImxiIiwic2V0QXR0cmlidXRlTlMiLCJyYiIsInNiIiwibm9kZU5hbWUiLCJ4YiIsIl92YWx1ZVRyYWNrZXIiLCJzZXQiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwidGIiLCJ5YiIsInpiIiwiZGVmYXVsdENoZWNrZWQiLCJkZWZhdWx0VmFsdWUiLCJfd3JhcHBlclN0YXRlIiwiaW5pdGlhbENoZWNrZWQiLCJBYiIsImluaXRpYWxWYWx1ZSIsImNvbnRyb2xsZWQiLCJCYiIsIkNiIiwiRGIiLCJFYiIsIm93bmVyRG9jdW1lbnQiLCJhY3RpdmVFbGVtZW50IiwiR2IiLCJGYiIsIkhiIiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJkaXNhYmxlZCIsIkliIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJKYiIsIktiIiwiTGIiLCJ0ZXh0Q29udGVudCIsInhsaW5rSHJlZiIsIk1iIiwiTmIiLCJPYiIsIlBiIiwiUWIiLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwibmFtZXNwYWNlVVJJIiwiaW5uZXJIVE1MIiwidmFsdWVPZiIsIlJiIiwibGFzdENoaWxkIiwibm9kZVR5cGUiLCJub2RlVmFsdWUiLCJTYiIsIlRiIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiVWIiLCJWYiIsIldiIiwiYW5pbWF0aW9uIiwidHJhbnNpdGlvbiIsIlhiIiwiWWIiLCJaYiIsIiRiIiwiYWMiLCJiYyIsIldlYWtNYXAiLCJNYXAiLCJjYyIsImRjIiwiYWx0ZXJuYXRlIiwiZWZmZWN0VGFnIiwiZWMiLCJtZW1vaXplZFN0YXRlIiwiZGVoeWRyYXRlZCIsImZjIiwiaGMiLCJjaGlsZCIsInNpYmxpbmciLCJnYyIsImljIiwiamMiLCJrYyIsImxjIiwiX2Rpc3BhdGNoTGlzdGVuZXJzIiwiX2Rpc3BhdGNoSW5zdGFuY2VzIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJpc1BlcnNpc3RlbnQiLCJyZWxlYXNlIiwibWMiLCJuYyIsInNyY0VsZW1lbnQiLCJjb3JyZXNwb25kaW5nVXNlRWxlbWVudCIsIm9jIiwicGMiLCJxYyIsInRvcExldmVsVHlwZSIsIm5hdGl2ZUV2ZW50IiwidGFyZ2V0SW5zdCIsImFuY2VzdG9ycyIsInJjIiwiZXZlbnRTeXN0ZW1GbGFncyIsInNjIiwiY29udGFpbmVySW5mbyIsInRjIiwidWMiLCJoYXMiLCJ2YyIsIndjIiwieGMiLCJ5YyIsInpjIiwiQWMiLCJCYyIsIkNjIiwiRGMiLCJFYyIsIkZjIiwiR2MiLCJIYyIsIkljIiwiS2MiLCJibG9ja2VkT24iLCJjb250YWluZXIiLCJMYyIsImRlbGV0ZSIsInBvaW50ZXJJZCIsIk1jIiwiTmMiLCJQYyIsInVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSIsInByaW9yaXR5IiwiaHlkcmF0ZSIsIlFjIiwiUmMiLCJTYyIsIlRjIiwic2hpZnQiLCJVYyIsInVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2siLCJ1bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSIsIlZjIiwiV2MiLCJZYyIsIlpjIiwiJGMiLCJhZCIsImJ1YmJsZWQiLCJjYXB0dXJlZCIsImV2ZW50UHJpb3JpdHkiLCJiZCIsImNkIiwiZGQiLCJ1bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSIsImVkIiwiZmQiLCJnZCIsImhkIiwiYWRkRXZlbnRMaXN0ZW5lciIsIk9jIiwiamQiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRBcmVhIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsImtkIiwibGQiLCJ0cmltIiwibWQiLCJzZXRQcm9wZXJ0eSIsImNoYXJBdCIsInN1YnN0cmluZyIsIm5kIiwibWVudWl0ZW0iLCJhcmVhIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwiaW5wdXQiLCJrZXlnZW4iLCJsaW5rIiwibWV0YSIsInBhcmFtIiwidHJhY2siLCJ3YnIiLCJvZCIsInBkIiwiaXMiLCJxZCIsInJkIiwic2QiLCJ0ZCIsImJvZHkiLCJ1ZCIsInZkIiwibm9kZSIsIm5leHRTaWJsaW5nIiwieGQiLCJjb250ZW50V2luZG93IiwibG9jYXRpb24iLCJocmVmIiwieWQiLCJjb250ZW50RWRpdGFibGUiLCJEZCIsIkVkIiwiRmQiLCJhdXRvRm9jdXMiLCJHZCIsIl9faHRtbCIsIkhkIiwic2V0VGltZW91dCIsIklkIiwiY2xlYXJUaW1lb3V0IiwiSmQiLCJLZCIsInByZXZpb3VzU2libGluZyIsIkxkIiwicmFuZG9tIiwiTWQiLCJOZCIsIk9kIiwiUGQiLCJRZCIsIlJkIiwiU2QiLCJUZCIsImRpc3BhdGNoQ29uZmlnIiwiVWQiLCJfdGFyZ2V0SW5zdCIsIlZkIiwiV2QiLCJYZCIsIllkIiwiWmQiLCIkZCIsImFlIiwiYmUiLCJjZSIsIkludGVyZmFjZSIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsImVlIiwiZXZlbnRQb29sIiwiZmUiLCJkZXN0cnVjdG9yIiwiZGUiLCJnZXRQb29sZWQiLCJwcmV2ZW50RGVmYXVsdCIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJEYXRlIiwibm93IiwiaXNUcnVzdGVkIiwiZXh0ZW5kIiwiZ2UiLCJoZSIsImllIiwiamUiLCJrZSIsImRvY3VtZW50TW9kZSIsImxlIiwibWUiLCJuZSIsIm9lIiwiYmVmb3JlSW5wdXQiLCJjb21wb3NpdGlvbkVuZCIsImNvbXBvc2l0aW9uU3RhcnQiLCJjb21wb3NpdGlvblVwZGF0ZSIsInBlIiwicWUiLCJrZXlDb2RlIiwiZGV0YWlsIiwic2UiLCJ2ZSIsImxvY2FsZSIsIndoaWNoIiwidGUiLCJjdHJsS2V5IiwiYWx0S2V5IiwibWV0YUtleSIsImNoYXIiLCJ1ZSIsIndlIiwiZGF0ZSIsImRhdGV0aW1lIiwiZW1haWwiLCJtb250aCIsInBhc3N3b3JkIiwicmFuZ2UiLCJzZWFyY2giLCJ0ZWwiLCJ0ZXh0IiwidGltZSIsInVybCIsIndlZWsiLCJ4ZSIsInllIiwiY2hhbmdlIiwiemUiLCJBZSIsIkJlIiwiQ2UiLCJEZSIsIkVlIiwiRmUiLCJHZSIsImRldGFjaEV2ZW50IiwiSGUiLCJJZSIsImF0dGFjaEV2ZW50IiwiSmUiLCJLZSIsIkxlIiwiTWUiLCJfaXNJbnB1dEV2ZW50U3VwcG9ydGVkIiwiTmUiLCJ2aWV3IiwiT2UiLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0IiwiUGUiLCJnZXRNb2RpZmllclN0YXRlIiwiUWUiLCJSZSIsIlNlIiwiVGUiLCJVZSIsIlZlIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJzaGlmdEtleSIsImJ1dHRvbiIsImJ1dHRvbnMiLCJyZWxhdGVkVGFyZ2V0IiwiZnJvbUVsZW1lbnQiLCJ0b0VsZW1lbnQiLCJtb3ZlbWVudFgiLCJtb3ZlbWVudFkiLCJXZSIsIndpZHRoIiwiaGVpZ2h0IiwicHJlc3N1cmUiLCJ0YW5nZW50aWFsUHJlc3N1cmUiLCJ0aWx0WCIsInRpbHRZIiwidHdpc3QiLCJwb2ludGVyVHlwZSIsImlzUHJpbWFyeSIsIlhlIiwibW91c2VFbnRlciIsIm1vdXNlTGVhdmUiLCJwb2ludGVyRW50ZXIiLCJwb2ludGVyTGVhdmUiLCJZZSIsImRlZmF1bHRWaWV3IiwicGFyZW50V2luZG93IiwiJGUiLCJhZiIsImJmIiwiY2YiLCJkZiIsInNlbGVjdCIsImVmIiwiZmYiLCJnZiIsImhmIiwiamYiLCJzdGFydCIsInNlbGVjdGlvblN0YXJ0Iiwic2VsZWN0aW9uRW5kIiwiYW5jaG9yTm9kZSIsImdldFNlbGVjdGlvbiIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0Iiwia2YiLCJvblNlbGVjdCIsImxmIiwiYW5pbWF0aW9uTmFtZSIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsIm1mIiwiY2xpcGJvYXJkRGF0YSIsIm5mIiwib2YiLCJjaGFyQ29kZSIsInBmIiwiRXNjIiwiU3BhY2ViYXIiLCJMZWZ0IiwiVXAiLCJSaWdodCIsIkRvd24iLCJEZWwiLCJXaW4iLCJNZW51IiwiQXBwcyIsIlNjcm9sbCIsIk1velByaW50YWJsZUtleSIsInFmIiwiOCIsIjkiLCIxMiIsIjEzIiwiMTYiLCIxNyIsIjE4IiwiMTkiLCIyMCIsIjI3IiwiMzIiLCIzMyIsIjM0IiwiMzUiLCIzNiIsIjM3IiwiMzgiLCIzOSIsIjQwIiwiNDUiLCI0NiIsIjExMiIsIjExMyIsIjExNCIsIjExNSIsIjExNiIsIjExNyIsIjExOCIsIjExOSIsIjEyMCIsIjEyMSIsIjEyMiIsIjEyMyIsIjE0NCIsIjE0NSIsIjIyNCIsInJmIiwic2YiLCJkYXRhVHJhbnNmZXIiLCJ0ZiIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJ1ZiIsInZmIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCJ3ZiIsIlNpbXBsZUV2ZW50UGx1Z2luIiwiRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIiwiQ2hhbmdlRXZlbnRQbHVnaW4iLCJTZWxlY3RFdmVudFBsdWdpbiIsIkJlZm9yZUlucHV0RXZlbnRQbHVnaW4iLCJ5ZiIsInpmIiwiQWYiLCJCZiIsIkNmIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0IiwiRGYiLCJFZiIsIkZmIiwiZ2V0Q2hpbGRDb250ZXh0IiwiR2YiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dCIsIkhmIiwiSWYiLCJKZiIsIktmIiwidW5zdGFibGVfY2FuY2VsQ2FsbGJhY2siLCJMZiIsInVuc3RhYmxlX3JlcXVlc3RQYWludCIsIk1mIiwidW5zdGFibGVfbm93IiwiTmYiLCJ1bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCIsIk9mIiwidW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHkiLCJQZiIsIlFmIiwiUmYiLCJ1bnN0YWJsZV9Mb3dQcmlvcml0eSIsIlNmIiwidW5zdGFibGVfSWRsZVByaW9yaXR5IiwiVGYiLCJVZiIsInVuc3RhYmxlX3Nob3VsZFlpZWxkIiwiVmYiLCJXZiIsIlhmIiwiWWYiLCJaZiIsIiRmIiwiYWciLCJiZyIsImNnIiwiZGciLCJlZyIsImZnIiwiZ2ciLCJoZyIsImlnIiwiamciLCJrZyIsImxnIiwibWciLCJuZyIsIm9nIiwicGciLCJjaGlsZEV4cGlyYXRpb25UaW1lIiwicWciLCJmaXJzdENvbnRleHQiLCJleHBpcmF0aW9uVGltZSIsInJnIiwic2ciLCJvYnNlcnZlZEJpdHMiLCJyZXNwb25kZXJzIiwidGciLCJ1ZyIsInVwZGF0ZVF1ZXVlIiwiYmFzZVN0YXRlIiwiYmFzZVF1ZXVlIiwic2hhcmVkIiwicGVuZGluZyIsImVmZmVjdHMiLCJ2ZyIsIndnIiwic3VzcGVuc2VDb25maWciLCJwYXlsb2FkIiwiY2FsbGJhY2siLCJ4ZyIsInlnIiwiemciLCJjYSIsIkFnIiwiQmciLCJDZyIsIkRnIiwiRWciLCJGZyIsIkpnIiwiX3JlYWN0SW50ZXJuYWxGaWJlciIsIkdnIiwiSGciLCJJZyIsIktnIiwic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwiTGciLCJNZyIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIk5nIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJPZyIsIlBnIiwiX3N0cmluZ1JlZiIsIlFnIiwiUmciLCJsYXN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImZpcnN0RWZmZWN0IiwiU2ciLCJUZyIsImVsZW1lbnRUeXBlIiwiVWciLCJpbXBsZW1lbnRhdGlvbiIsIlZnIiwiV2ciLCJYZyIsIllnIiwiWmciLCIkZyIsImFoIiwiYmgiLCJjaCIsImRoIiwiZG9jdW1lbnRFbGVtZW50IiwidGFnTmFtZSIsImVoIiwiZmgiLCJnaCIsImhoIiwibWVtb2l6ZWRQcm9wcyIsInJldmVhbE9yZGVyIiwiaWgiLCJyZXNwb25kZXIiLCJqaCIsImtoIiwibGgiLCJtaCIsIm5oIiwib2giLCJwaCIsInFoIiwicmgiLCJzaCIsInRoIiwicXVldWUiLCJ1aCIsInZoIiwid2giLCJsYXN0UmVuZGVyZWRSZWR1Y2VyIiwiYWN0aW9uIiwiZWFnZXJSZWR1Y2VyIiwiZWFnZXJTdGF0ZSIsImxhc3RSZW5kZXJlZFN0YXRlIiwiZGlzcGF0Y2giLCJ4aCIsInloIiwiemgiLCJBaCIsImRlc3Ryb3kiLCJkZXBzIiwiQmgiLCJDaCIsIkRoIiwiRWgiLCJGaCIsIkdoIiwiSGgiLCJJaCIsIkpoIiwiS2giLCJMaCIsIk1oIiwiTmgiLCJyZWFkQ29udGV4dCIsInVzZVJlc3BvbmRlciIsInVzZURlZmVycmVkVmFsdWUiLCJ1c2VUcmFuc2l0aW9uIiwiT2giLCJQaCIsIlFoIiwiUmgiLCJTaCIsIlRoIiwicGVuZGluZ1Byb3BzIiwiVWgiLCJWaCIsIldoIiwiWGgiLCJZaCIsIlpoIiwiJGgiLCJhaSIsImJpIiwiY2kiLCJkaSIsImVpIiwiZmkiLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJnaSIsImhpIiwicGVuZGluZ0NvbnRleHQiLCJuaSIsInBpIiwicWkiLCJpaSIsInJldHJ5VGltZSIsImppIiwiZmFsbGJhY2siLCJ1bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjayIsImtpIiwibGkiLCJpc0JhY2t3YXJkcyIsInJlbmRlcmluZyIsInJlbmRlcmluZ1N0YXJ0VGltZSIsImxhc3QiLCJ0YWlsIiwidGFpbEV4cGlyYXRpb24iLCJ0YWlsTW9kZSIsIm1pIiwicmkiLCJzaSIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJvbmNsaWNrIiwic2l6ZSIsImNyZWF0ZUVsZW1lbnROUyIsInRpIiwidWkiLCJ2aSIsIndpIiwieGkiLCJ5aSIsInppIiwiQWkiLCJzdGFjayIsIkJpIiwiV2Vha1NldCIsIlNldCIsIkNpIiwiRmkiLCJFaSIsIkdpIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJIaSIsIklpIiwiSmkiLCJmb2N1cyIsIktpIiwiTGkiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsIkRpIiwiTWkiLCJOaSIsIk9pIiwiUGkiLCJRaSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJSaSIsIlNpIiwiVGkiLCJVaSIsIlZpIiwiYWRkIiwidGhlbiIsIldpIiwiWGkiLCJlbGVtZW50IiwiWWkiLCJaaSIsIiRpIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJhaiIsImNvbXBvbmVudFN0YWNrIiwiUmoiLCJiaiIsImNqIiwiZGoiLCJraiIsImxqIiwibWoiLCJuaiIsIm9qIiwicWoiLCJyaiIsInNqIiwidGoiLCJ1aiIsInZqIiwid2oiLCJ0aW1lb3V0TXMiLCJ4aiIsInlqIiwiemoiLCJsYXN0RXhwaXJlZFRpbWUiLCJBaiIsImZpcnN0UGVuZGluZ1RpbWUiLCJsYXN0UGluZ2VkVGltZSIsIm5leHRLbm93blBlbmRpbmdMZXZlbCIsImNhbGxiYWNrRXhwaXJhdGlvblRpbWUiLCJjYWxsYmFja1ByaW9yaXR5IiwiY2FsbGJhY2tOb2RlIiwiQmoiLCJ0aW1lb3V0IiwiQ2oiLCJEaiIsIkVqIiwiRmoiLCJHaiIsIkhqIiwiZmluaXNoZWRXb3JrIiwiZmluaXNoZWRFeHBpcmF0aW9uVGltZSIsImxhc3RTdXNwZW5kZWRUaW1lIiwiSWoiLCJ0aW1lb3V0SGFuZGxlIiwiSmoiLCJidXN5TWluRHVyYXRpb25NcyIsImJ1c3lEZWxheU1zIiwiS2oiLCJNaiIsIk5qIiwicGluZ0NhY2hlIiwiT2oiLCJ1YiIsIlBqIiwiWGMiLCJRaiIsIlNqIiwiZmlyc3RTdXNwZW5kZWRUaW1lIiwicmFuZ2VDb3VudCIsIndiIiwiYWN0aXZlRWxlbWVudERldGFjaGVkIiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsIlRqIiwid2QiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwibWluIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJ2YiIsIlVqIiwiVmoiLCJXaiIsImhpZGRlbiIsIkhhIiwiWGoiLCJ1bnN0YWJsZV9vYnNlcnZlZEJpdHMiLCJaaiIsInBlbmRpbmdDaGlsZHJlbiIsImFrIiwiYmsiLCJjayIsImRrIiwiZWsiLCJmayIsIkpjIiwiX2ludGVybmFsUm9vdCIsImdrIiwiaWsiLCJoYXNBdHRyaWJ1dGUiLCJoayIsImprIiwia2siLCJ1bm1vdW50IiwicXVlcnlTZWxlY3RvckFsbCIsImZvcm0iLCJMaiIsImxrIiwiRXZlbnRzIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJidW5kbGVUeXBlIiwicmVuZGVyZXJQYWNrYWdlTmFtZSIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0Iiwib25Db21taXRGaWJlclJvb3QiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsIllqIiwib3ZlcnJpZGVIb29rU3RhdGUiLCJvdmVycmlkZVByb3BzIiwic2V0U3VzcGVuc2VIYW5kbGVyIiwic2NoZWR1bGVVcGRhdGUiLCJjdXJyZW50RGlzcGF0Y2hlclJlZiIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoIiwic2NoZWR1bGVSZWZyZXNoIiwic2NoZWR1bGVSb290Iiwic2V0UmVmcmVzaEhhbmRsZXIiLCJnZXRDdXJyZW50RmliZXIiLCJjcmVhdGVQb3J0YWwiLCJmaW5kRE9NTm9kZSIsImZsdXNoU3luYyIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsInVuc3RhYmxlX2NyZWF0ZVBvcnRhbCIsInVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiTWVzc2FnZUNoYW5uZWwiLCJ1bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZSIsInBlcmZvcm1hbmNlIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJmbG9vciIsInBvcnQyIiwicG9ydDEiLCJvbm1lc3NhZ2UiLCJwb3N0TWVzc2FnZSIsInNvcnRJbmRleCIsInN0YXJ0VGltZSIsInByaW9yaXR5TGV2ZWwiLCJ1bnN0YWJsZV9Qcm9maWxpbmciLCJ1bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlIiwidW5zdGFibGVfbmV4dCIsInVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uIiwiZGVsYXkiLCJ1bnN0YWJsZV93cmFwQ2FsbGJhY2siLCJSZWFjdFByb3BUeXBlc1NlY3JldCIsImVtcHR5RnVuY3Rpb24iLCJzaGltIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwicHJvcEZ1bGxOYW1lIiwic2VjcmV0IiwiZ2V0U2hpbSIsIlJlYWN0UHJvcFR5cGVzIiwiYXJyYXkiLCJzeW1ib2wiLCJhbnkiLCJhcnJheU9mIiwiaW5zdGFuY2VPZiIsIm9iamVjdE9mIiwib25lT2YiLCJvbmVPZlR5cGUiLCJzaGFwZSIsImV4YWN0IiwiY2hlY2tQcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJGdW5jdGlvbiIsImFyciIsIkFzeW5jTW9kZSIsIkNvbmN1cnJlbnRNb2RlIiwiQ29udGV4dENvbnN1bWVyIiwiQ29udGV4dFByb3ZpZGVyIiwiRWxlbWVudCIsIkxhenkiLCJQb3J0YWwiLCJpc0FzeW5jTW9kZSIsImlzQ29uY3VycmVudE1vZGUiLCJpc0NvbnRleHRDb25zdW1lciIsImlzQ29udGV4dFByb3ZpZGVyIiwiaXNFbGVtZW50IiwiaXNGb3J3YXJkUmVmIiwiaXNGcmFnbWVudCIsImlzTGF6eSIsImlzUG9ydGFsIiwiaXNQcm9maWxlciIsImlzU3RyaWN0TW9kZSIsImlzU3VzcGVuc2UiLCJpc1ZhbGlkRWxlbWVudFR5cGUiLCJ0eXBlT2YiLCJoYXNPd24iLCJjbGFzc05hbWVzIiwiYXJnIiwiYXJnVHlwZSIsImlubmVyIiwiX2luaGVyaXRzTG9vc2UiLCJfZXh0ZW5kcyIsImlzQWJzb2x1dGUiLCJwYXRobmFtZSIsInNwbGljZU9uZSIsInVuZGVmaW5lZCIsImhhc1RyYWlsaW5nU2xhc2giLCJ0b1BhcnRzIiwiZnJvbVBhcnRzIiwiaXNUb0FicyIsImlzRnJvbUFicyIsIm11c3RFbmRBYnMiLCJ1cCIsInBhcnQiLCJ1bnNoaWZ0IiwiY29uZGl0aW9uIiwibWVzc2FnZSIsImFkZExlYWRpbmdTbGFzaCIsInN0cmlwTGVhZGluZ1NsYXNoIiwic3RyaXBCYXNlbmFtZSIsImhhc0Jhc2VuYW1lIiwic3RyaXBUcmFpbGluZ1NsYXNoIiwiY3JlYXRlUGF0aCIsImhhc2giLCJjcmVhdGVMb2NhdGlvbiIsImN1cnJlbnRMb2NhdGlvbiIsImhhc2hJbmRleCIsInNlYXJjaEluZGV4IiwicGFyc2VQYXRoIiwiZGVjb2RlVVJJIiwiVVJJRXJyb3IiLCJjcmVhdGVUcmFuc2l0aW9uTWFuYWdlciIsInByb21wdCIsImxpc3RlbmVycyIsInNldFByb21wdCIsIm5leHRQcm9tcHQiLCJjb25maXJtVHJhbnNpdGlvblRvIiwiZ2V0VXNlckNvbmZpcm1hdGlvbiIsImFwcGVuZExpc3RlbmVyIiwiZm4iLCJpc0FjdGl2ZSIsImxpc3RlbmVyIiwibm90aWZ5TGlzdGVuZXJzIiwiX2xlbiIsImFyZ3MiLCJfa2V5IiwiY2FuVXNlRE9NIiwiZ2V0Q29uZmlybWF0aW9uIiwiY29uZmlybSIsImdldEhpc3RvcnlTdGF0ZSIsImhpc3RvcnkiLCJjcmVhdGVCcm93c2VySGlzdG9yeSIsImdsb2JhbEhpc3RvcnkiLCJjYW5Vc2VIaXN0b3J5IiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwibmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIiLCJfcHJvcHMkZm9yY2VSZWZyZXNoIiwiZm9yY2VSZWZyZXNoIiwiX3Byb3BzJGdldFVzZXJDb25maXJtIiwiX3Byb3BzJGtleUxlbmd0aCIsImtleUxlbmd0aCIsImJhc2VuYW1lIiwiZ2V0RE9NTG9jYXRpb24iLCJoaXN0b3J5U3RhdGUiLCJfcmVmIiwiX3dpbmRvdyRsb2NhdGlvbiIsImNyZWF0ZUtleSIsInRyYW5zaXRpb25NYW5hZ2VyIiwibmV4dFN0YXRlIiwiaGFuZGxlUG9wU3RhdGUiLCJldmVudCIsImlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQiLCJoYW5kbGVQb3AiLCJoYW5kbGVIYXNoQ2hhbmdlIiwiZm9yY2VOZXh0UG9wIiwib2siLCJmcm9tTG9jYXRpb24iLCJ0b0xvY2F0aW9uIiwidG9JbmRleCIsImFsbEtleXMiLCJmcm9tSW5kZXgiLCJkZWx0YSIsImdvIiwicmV2ZXJ0UG9wIiwiaW5pdGlhbExvY2F0aW9uIiwiY3JlYXRlSHJlZiIsImxpc3RlbmVyQ291bnQiLCJjaGVja0RPTUxpc3RlbmVycyIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJpc0Jsb2NrZWQiLCJwdXNoU3RhdGUiLCJwcmV2SW5kZXgiLCJuZXh0S2V5cyIsInJlcGxhY2VTdGF0ZSIsImdvQmFjayIsImdvRm9yd2FyZCIsImJsb2NrIiwidW5ibG9jayIsImxpc3RlbiIsInVubGlzdGVuIiwiSGFzaFBhdGhDb2RlcnMiLCJoYXNoYmFuZyIsImVuY29kZVBhdGgiLCJkZWNvZGVQYXRoIiwibm9zbGFzaCIsInNsYXNoIiwic3RyaXBIYXNoIiwiZ2V0SGFzaFBhdGgiLCJyZXBsYWNlSGFzaFBhdGgiLCJjcmVhdGVIYXNoSGlzdG9yeSIsIl9wcm9wcyRoYXNoVHlwZSIsImhhc2hUeXBlIiwiX0hhc2hQYXRoQ29kZXJzJGhhc2hUIiwiaWdub3JlUGF0aCIsImVuY29kZWRQYXRoIiwicHJldkxvY2F0aW9uIiwiYWxsUGF0aHMiLCJsYXN0SW5kZXhPZiIsImJhc2VUYWciLCJnZXRBdHRyaWJ1dGUiLCJwdXNoSGFzaFBhdGgiLCJuZXh0UGF0aHMiLCJjbGFtcCIsImxvd2VyQm91bmQiLCJ1cHBlckJvdW5kIiwibWF4IiwiY3JlYXRlTWVtb3J5SGlzdG9yeSIsIl9wcm9wcyRpbml0aWFsRW50cmllcyIsImluaXRpYWxFbnRyaWVzIiwiX3Byb3BzJGluaXRpYWxJbmRleCIsImluaXRpYWxJbmRleCIsImVudHJpZXMiLCJlbnRyeSIsIm5leHRJbmRleCIsIm5leHRFbnRyaWVzIiwiY2FuR28iLCJjcmVhdGVFdmVudEVtaXR0ZXIiLCJoYW5kbGVycyIsIm9uIiwiaGFuZGxlciIsIm9mZiIsIm5ld1ZhbHVlIiwiY2hhbmdlZEJpdHMiLCJjYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9Qcm92aWRlciRjaGlsZENvbnRleCIsIl9Db25zdW1lciRjb250ZXh0VHlwZSIsImNvbnRleHRQcm9wIiwiZW1pdHRlciIsIl9wcm90byIsIm9sZFZhbHVlIiwiX0NvbXBvbmVudDIiLCJvblVwZGF0ZSIsIl9wcm90bzIiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSIsImV4Y2x1ZGVkIiwic291cmNlS2V5cyIsIl9SZWFjdCRDb21wb25lbnQiLCJSb3V0ZXIiLCJfaXNNb3VudGVkIiwiX3BlbmRpbmdMb2NhdGlvbiIsInN0YXRpY0NvbnRleHQiLCJjb21wdXRlUm9vdE1hdGNoIiwicGFyYW1zIiwiaXNFeGFjdCIsImNhY2hlJDEiLCJjYWNoZUNvdW50JDEiLCJtYXRjaFBhdGgiLCJfb3B0aW9ucyIsIl9vcHRpb25zJGV4YWN0IiwiX29wdGlvbnMkc3RyaWN0IiwiX29wdGlvbnMkc2Vuc2l0aXZlIiwicmVkdWNlIiwibWF0Y2hlZCIsIl9jb21waWxlUGF0aCIsImNhY2hlS2V5IiwicGF0aENhY2hlIiwicmVnZXhwIiwiY29tcGlsZVBhdGgkMSIsInZhbHVlcyIsIlJvdXRlIiwiY29udGV4dCQxIiwiY29tcHV0ZWRNYXRjaCIsIl90aGlzJHByb3BzIiwiY3JlYXRlVVJMIiwic3RhdGljSGFuZGxlciIsIm1ldGhvZE5hbWUiLCJub29wIiwiSGFzaFJvdXRlciIsInJlc29sdmVUb0xvY2F0aW9uIiwiZm9yd2FyZFJlZlNoaW0iLCJMaW5rQW5jaG9yIiwiZm9yd2FyZGVkUmVmIiwiaW5uZXJSZWYiLCJuYXZpZ2F0ZSIsIl9vbkNsaWNrIiwicmVzdCIsImV4IiwiaXNNb2RpZmllZEV2ZW50IiwiTGluayIsIl9yZWYyIiwiX3JlZjIkY29tcG9uZW50IiwiZm9yd2FyZFJlZlNoaW0kMSIsImZvcndhcmRSZWYkMSIsIl9yZWYkYXJpYUN1cnJlbnQiLCJhcmlhQ3VycmVudCIsIl9yZWYkYWN0aXZlQ2xhc3NOYW1lIiwiYWN0aXZlQ2xhc3NOYW1lIiwiYWN0aXZlU3R5bGUiLCJjbGFzc05hbWVQcm9wIiwiaXNBY3RpdmVQcm9wIiwibG9jYXRpb25Qcm9wIiwic3R5bGVQcm9wIiwiZXNjYXBlZFBhdGgiLCJjbGFzc25hbWVzIiwiam9pbkNsYXNzbmFtZXMiLCJIZWFkbGluZUNvbXBvbmVudCIsImdldFJhbmRvbVZhbHVlcyIsImNyeXB0byIsIm1zQ3J5cHRvIiwicm5kczgiLCJVaW50OEFycmF5Iiwicm5nIiwiYnl0ZVRvSGV4IiwiYnVmIiwiYnRoIiwicm5kcyIsInN0b3JhZ2UiLCJyZXN0b3JlZFVzZXJJZCIsInJlYWQiLCJ1c2VySWQiLCJfZ2VuZXJhdGVVc2VySWQiLCJ2NCIsImxvY2FsU3RvcmFnZSIsInNldEl0ZW0iLCJnZXRJdGVtIiwicmVtb3ZlSXRlbSIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsImpzb24iLCJTRVJWRVJfVVNFUlNfVVJMIiwiYW5zd2VycyIsIkh0dHBTZXJ2aWNlIiwibG9nIiwiSHR0cFVzZXJzU3RvcmFnZVNlcnZpY2UiLCJJbnRyb0NvbXBvbmVudCIsInN1cGVyIiwidXNlck5hbWUiLCJpc1VzZXJDcmVhdGVkIiwidXBkYXRlVXNlclN0YXRlIiwiVXNlcklkSGVscGVyIiwiaXNVc2VySWRDcmVhdGVkIiwiZ2V0VXNlcklkIiwiY3JlYXRlVXNlcklkIiwiVXNlckhlbHBlciIsImNyZWF0ZVVzZXIiLCJjbGVhclN0b3JlZFVzZXJJZCIsInJlbW92ZVVzZXIiLCJyZWRpcmVjdFRvRm9ybSIsIndpdGhSb3V0ZXIiLCJ3cmFwcGVkQ29tcG9uZW50UmVmIiwicmVtYWluaW5nUHJvcHMiLCJXcmFwcGVkQ29tcG9uZW50IiwiRU1QVFlfUkVTUE9OU0UiLCJ1c2VyIiwiRm9ybUNvbXBvbmVudCIsImphdmFzY3JpcHRMZXZlbCIsImhhc1Zpc2l0ZWRXb3Jrc2hvcHMiLCJqYXZhc2NyaXB0RHVyYXRpb25FeHBlcmllbmNlIiwidHlwZXNjcmlwdExldmVsIiwiaXNUeXBlU2NyaXB0TG92ZXIiLCJrbm93c0ludGVycG9sYXRpb25Qcm9jZXNzIiwia25vd3NEaWZmZXJlbmNlQmV0d2VlbkRPTUFuZEhUTUwiLCJpc1NDU1NMb3ZlciIsIiRmb3JtIiwiUmVhY3QiLCJvbkNoYW5nZUZpZWxkX2tub3dzSW50ZXJwb2xhdGlvblByb2Nlc3MiLCJ1c2VyQW5zd2VycyIsIkFuc3dlcnNIZWxwZXIiLCJnZXRCeVVzZXJJZCIsImV2dCIsIkZvcm1EYXRhIiwiZm9ybVN0YXRlIiwiZ3JvdXBFbmQiLCJ1cGRhdGVBbnN3ZXJzIiwiX3VwZGF0ZVN0YXRlRmllbGQiLCJmaWVsZCIsInN0YXR1cyIsIndhcm4iLCJvbkNoYW5nZUZpZWxkX2hhc1Zpc2l0ZWRXb3Jrc2hvcHMiLCJvbkNoYW5nZUZpZWxkX2phdmFzY3JpcHRMZXZlbCIsIm9uQ2hhbmdlRmllbGRfamF2YXNjcmlwdER1cmF0aW9uRXhwZXJpZW5jZSIsIm9uQ2hhbmdlRmllbGRfdHlwZXNjcmlwdExldmVsIiwib25DaGFuZ2VGaWVsZF9pc1R5cGVTY3JpcHRMb3ZlciIsIm9uQ2hhbmdlRmllbGRfa25vd3NEaWZmZXJlbmNlQmV0d2VlbkRPTUFuZEhUTUwiLCJvbkNoYW5nZUZpZWxkX2lzU0NTU0xvdmVyIiwib25TdWJtaXQiLCJOdW1iZXIiLCJzdGVwIiwiSW50cm8iLCJGb3JtIiwiUmVhY3REb20iXSwibWFwcGluZ3MiOiJhQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNBQVNDLEVBQW9CQyxHQUc1QixHQUFHRixFQUFpQkUsR0FDbkIsT0FBT0YsRUFBaUJFLEdBQVVDLFFBR25DLElBQUlDLEVBQVNKLEVBQWlCRSxHQUFZLENBQ3pDRyxFQUFHSCxFQUNISSxHQUFHLEVBQ0hILFFBQVMsSUFVVixPQU5BSSxFQUFRTCxHQUFVTSxLQUFLSixFQUFPRCxRQUFTQyxFQUFRQSxFQUFPRCxRQUFTRixHQUcvREcsRUFBT0UsR0FBSSxFQUdKRixFQUFPRCxRQUtmRixFQUFvQlEsRUFBSUYsRUFHeEJOLEVBQW9CUyxFQUFJVixFQUd4QkMsRUFBb0JVLEVBQUksU0FBU1IsRUFBU1MsRUFBTUMsR0FDM0NaLEVBQW9CYSxFQUFFWCxFQUFTUyxJQUNsQ0csT0FBT0MsZUFBZWIsRUFBU1MsRUFBTSxDQUFFSyxZQUFZLEVBQU1DLElBQUtMLEtBS2hFWixFQUFvQmtCLEVBQUksU0FBU2hCLEdBQ1gsb0JBQVhpQixRQUEwQkEsT0FBT0MsYUFDMUNOLE9BQU9DLGVBQWViLEVBQVNpQixPQUFPQyxZQUFhLENBQUVDLE1BQU8sV0FFN0RQLE9BQU9DLGVBQWViLEVBQVMsYUFBYyxDQUFFbUIsT0FBTyxLQVF2RHJCLEVBQW9Cc0IsRUFBSSxTQUFTRCxFQUFPRSxHQUV2QyxHQURVLEVBQVBBLElBQVVGLEVBQVFyQixFQUFvQnFCLElBQy9CLEVBQVBFLEVBQVUsT0FBT0YsRUFDcEIsR0FBVyxFQUFQRSxHQUE4QixpQkFBVkYsR0FBc0JBLEdBQVNBLEVBQU1HLFdBQVksT0FBT0gsRUFDaEYsSUFBSUksRUFBS1gsT0FBT1ksT0FBTyxNQUd2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ciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAyNSk7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJFQUNUX0VMRU1FTlRfVFlQRSA9ICh0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmXG4gICAgU3ltYm9sLmZvciAmJlxuICAgIFN5bWJvbC5mb3IoJ3JlYWN0LmVsZW1lbnQnKSkgfHxcbiAgICAweGVhYzc7XG5cbiAgdmFyIGlzVmFsaWRFbGVtZW50ID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvYmplY3QgPT09ICdvYmplY3QnICYmXG4gICAgICBvYmplY3QgIT09IG51bGwgJiZcbiAgICAgIG9iamVjdC4kJHR5cGVvZiA9PT0gUkVBQ1RfRUxFTUVOVF9UWVBFO1xuICB9O1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoaXNWYWxpZEVsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiIsImZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcy5wcm90b3R5cGUpO1xuICBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzcztcbiAgc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzcztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfaW5oZXJpdHNMb29zZTsiLCJ2YXIgaXNhcnJheSA9IHJlcXVpcmUoJ2lzYXJyYXknKVxuXG4vKipcbiAqIEV4cG9zZSBgcGF0aFRvUmVnZXhwYC5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBwYXRoVG9SZWdleHBcbm1vZHVsZS5leHBvcnRzLnBhcnNlID0gcGFyc2Vcbm1vZHVsZS5leHBvcnRzLmNvbXBpbGUgPSBjb21waWxlXG5tb2R1bGUuZXhwb3J0cy50b2tlbnNUb0Z1bmN0aW9uID0gdG9rZW5zVG9GdW5jdGlvblxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9SZWdFeHAgPSB0b2tlbnNUb1JlZ0V4cFxuXG4vKipcbiAqIFRoZSBtYWluIHBhdGggbWF0Y2hpbmcgcmVnZXhwIHV0aWxpdHkuXG4gKlxuICogQHR5cGUge1JlZ0V4cH1cbiAqL1xudmFyIFBBVEhfUkVHRVhQID0gbmV3IFJlZ0V4cChbXG4gIC8vIE1hdGNoIGVzY2FwZWQgY2hhcmFjdGVycyB0aGF0IHdvdWxkIG90aGVyd2lzZSBhcHBlYXIgaW4gZnV0dXJlIG1hdGNoZXMuXG4gIC8vIFRoaXMgYWxsb3dzIHRoZSB1c2VyIHRvIGVzY2FwZSBzcGVjaWFsIGNoYXJhY3RlcnMgdGhhdCB3b24ndCB0cmFuc2Zvcm0uXG4gICcoXFxcXFxcXFwuKScsXG4gIC8vIE1hdGNoIEV4cHJlc3Mtc3R5bGUgcGFyYW1ldGVycyBhbmQgdW4tbmFtZWQgcGFyYW1ldGVycyB3aXRoIGEgcHJlZml4XG4gIC8vIGFuZCBvcHRpb25hbCBzdWZmaXhlcy4gTWF0Y2hlcyBhcHBlYXIgYXM6XG4gIC8vXG4gIC8vIFwiLzp0ZXN0KFxcXFxkKyk/XCIgPT4gW1wiL1wiLCBcInRlc3RcIiwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgXCI/XCIsIHVuZGVmaW5lZF1cbiAgLy8gXCIvcm91dGUoXFxcXGQrKVwiICA9PiBbdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkXVxuICAvLyBcIi8qXCIgICAgICAgICAgICA9PiBbXCIvXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCIqXCJdXG4gICcoW1xcXFwvLl0pPyg/Oig/OlxcXFw6KFxcXFx3KykoPzpcXFxcKCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpXSkrKVxcXFwpKT98XFxcXCgoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKV0pKylcXFxcKSkoWysqP10pP3woXFxcXCopKSdcbl0uam9pbignfCcpLCAnZycpXG5cbi8qKlxuICogUGFyc2UgYSBzdHJpbmcgZm9yIHRoZSByYXcgdG9rZW5zLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHN0clxuICogQHBhcmFtICB7T2JqZWN0PX0gb3B0aW9uc1xuICogQHJldHVybiB7IUFycmF5fVxuICovXG5mdW5jdGlvbiBwYXJzZSAoc3RyLCBvcHRpb25zKSB7XG4gIHZhciB0b2tlbnMgPSBbXVxuICB2YXIga2V5ID0gMFxuICB2YXIgaW5kZXggPSAwXG4gIHZhciBwYXRoID0gJydcbiAgdmFyIGRlZmF1bHREZWxpbWl0ZXIgPSBvcHRpb25zICYmIG9wdGlvbnMuZGVsaW1pdGVyIHx8ICcvJ1xuICB2YXIgcmVzXG5cbiAgd2hpbGUgKChyZXMgPSBQQVRIX1JFR0VYUC5leGVjKHN0cikpICE9IG51bGwpIHtcbiAgICB2YXIgbSA9IHJlc1swXVxuICAgIHZhciBlc2NhcGVkID0gcmVzWzFdXG4gICAgdmFyIG9mZnNldCA9IHJlcy5pbmRleFxuICAgIHBhdGggKz0gc3RyLnNsaWNlKGluZGV4LCBvZmZzZXQpXG4gICAgaW5kZXggPSBvZmZzZXQgKyBtLmxlbmd0aFxuXG4gICAgLy8gSWdub3JlIGFscmVhZHkgZXNjYXBlZCBzZXF1ZW5jZXMuXG4gICAgaWYgKGVzY2FwZWQpIHtcbiAgICAgIHBhdGggKz0gZXNjYXBlZFsxXVxuICAgICAgY29udGludWVcbiAgICB9XG5cbiAgICB2YXIgbmV4dCA9IHN0cltpbmRleF1cbiAgICB2YXIgcHJlZml4ID0gcmVzWzJdXG4gICAgdmFyIG5hbWUgPSByZXNbM11cbiAgICB2YXIgY2FwdHVyZSA9IHJlc1s0XVxuICAgIHZhciBncm91cCA9IHJlc1s1XVxuICAgIHZhciBtb2RpZmllciA9IHJlc1s2XVxuICAgIHZhciBhc3RlcmlzayA9IHJlc1s3XVxuXG4gICAgLy8gUHVzaCB0aGUgY3VycmVudCBwYXRoIG9udG8gdGhlIHRva2Vucy5cbiAgICBpZiAocGF0aCkge1xuICAgICAgdG9rZW5zLnB1c2gocGF0aClcbiAgICAgIHBhdGggPSAnJ1xuICAgIH1cblxuICAgIHZhciBwYXJ0aWFsID0gcHJlZml4ICE9IG51bGwgJiYgbmV4dCAhPSBudWxsICYmIG5leHQgIT09IHByZWZpeFxuICAgIHZhciByZXBlYXQgPSBtb2RpZmllciA9PT0gJysnIHx8IG1vZGlmaWVyID09PSAnKidcbiAgICB2YXIgb3B0aW9uYWwgPSBtb2RpZmllciA9PT0gJz8nIHx8IG1vZGlmaWVyID09PSAnKidcbiAgICB2YXIgZGVsaW1pdGVyID0gcmVzWzJdIHx8IGRlZmF1bHREZWxpbWl0ZXJcbiAgICB2YXIgcGF0dGVybiA9IGNhcHR1cmUgfHwgZ3JvdXBcblxuICAgIHRva2Vucy5wdXNoKHtcbiAgICAgIG5hbWU6IG5hbWUgfHwga2V5KyssXG4gICAgICBwcmVmaXg6IHByZWZpeCB8fCAnJyxcbiAgICAgIGRlbGltaXRlcjogZGVsaW1pdGVyLFxuICAgICAgb3B0aW9uYWw6IG9wdGlvbmFsLFxuICAgICAgcmVwZWF0OiByZXBlYXQsXG4gICAgICBwYXJ0aWFsOiBwYXJ0aWFsLFxuICAgICAgYXN0ZXJpc2s6ICEhYXN0ZXJpc2ssXG4gICAgICBwYXR0ZXJuOiBwYXR0ZXJuID8gZXNjYXBlR3JvdXAocGF0dGVybikgOiAoYXN0ZXJpc2sgPyAnLionIDogJ1teJyArIGVzY2FwZVN0cmluZyhkZWxpbWl0ZXIpICsgJ10rPycpXG4gICAgfSlcbiAgfVxuXG4gIC8vIE1hdGNoIGFueSBjaGFyYWN0ZXJzIHN0aWxsIHJlbWFpbmluZy5cbiAgaWYgKGluZGV4IDwgc3RyLmxlbmd0aCkge1xuICAgIHBhdGggKz0gc3RyLnN1YnN0cihpbmRleClcbiAgfVxuXG4gIC8vIElmIHRoZSBwYXRoIGV4aXN0cywgcHVzaCBpdCBvbnRvIHRoZSBlbmQuXG4gIGlmIChwYXRoKSB7XG4gICAgdG9rZW5zLnB1c2gocGF0aClcbiAgfVxuXG4gIHJldHVybiB0b2tlbnNcbn1cblxuLyoqXG4gKiBDb21waWxlIGEgc3RyaW5nIHRvIGEgdGVtcGxhdGUgZnVuY3Rpb24gZm9yIHRoZSBwYXRoLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gICAgICAgICAgICAgc3RyXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFmdW5jdGlvbihPYmplY3Q9LCBPYmplY3Q9KX1cbiAqL1xuZnVuY3Rpb24gY29tcGlsZSAoc3RyLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b2tlbnNUb0Z1bmN0aW9uKHBhcnNlKHN0ciwgb3B0aW9ucyksIG9wdGlvbnMpXG59XG5cbi8qKlxuICogUHJldHRpZXIgZW5jb2Rpbmcgb2YgVVJJIHBhdGggc2VnbWVudHMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgKHN0cikge1xuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvW1xcLz8jXS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcbiAgfSlcbn1cblxuLyoqXG4gKiBFbmNvZGUgdGhlIGFzdGVyaXNrIHBhcmFtZXRlci4gU2ltaWxhciB0byBgcHJldHR5YCwgYnV0IGFsbG93cyBzbGFzaGVzLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ31cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZW5jb2RlQXN0ZXJpc2sgKHN0cikge1xuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvWz8jXS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcbiAgfSlcbn1cblxuLyoqXG4gKiBFeHBvc2UgYSBtZXRob2QgZm9yIHRyYW5zZm9ybWluZyB0b2tlbnMgaW50byB0aGUgcGF0aCBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gdG9rZW5zVG9GdW5jdGlvbiAodG9rZW5zLCBvcHRpb25zKSB7XG4gIC8vIENvbXBpbGUgYWxsIHRoZSB0b2tlbnMgaW50byByZWdleHBzLlxuICB2YXIgbWF0Y2hlcyA9IG5ldyBBcnJheSh0b2tlbnMubGVuZ3RoKVxuXG4gIC8vIENvbXBpbGUgYWxsIHRoZSBwYXR0ZXJucyBiZWZvcmUgY29tcGlsYXRpb24uXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHR5cGVvZiB0b2tlbnNbaV0gPT09ICdvYmplY3QnKSB7XG4gICAgICBtYXRjaGVzW2ldID0gbmV3IFJlZ0V4cCgnXig/OicgKyB0b2tlbnNbaV0ucGF0dGVybiArICcpJCcsIGZsYWdzKG9wdGlvbnMpKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAob2JqLCBvcHRzKSB7XG4gICAgdmFyIHBhdGggPSAnJ1xuICAgIHZhciBkYXRhID0gb2JqIHx8IHt9XG4gICAgdmFyIG9wdGlvbnMgPSBvcHRzIHx8IHt9XG4gICAgdmFyIGVuY29kZSA9IG9wdGlvbnMucHJldHR5ID8gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IDogZW5jb2RlVVJJQ29tcG9uZW50XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXG5cbiAgICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHBhdGggKz0gdG9rZW5cblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICB2YXIgdmFsdWUgPSBkYXRhW3Rva2VuLm5hbWVdXG4gICAgICB2YXIgc2VnbWVudFxuXG4gICAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgICAvLyBQcmVwZW5kIHBhcnRpYWwgc2VnbWVudCBwcmVmaXhlcy5cbiAgICAgICAgICBpZiAodG9rZW4ucGFydGlhbCkge1xuICAgICAgICAgICAgcGF0aCArPSB0b2tlbi5wcmVmaXhcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gYmUgZGVmaW5lZCcpXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGlzYXJyYXkodmFsdWUpKSB7XG4gICAgICAgIGlmICghdG9rZW4ucmVwZWF0KSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBub3QgcmVwZWF0LCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeSh2YWx1ZSkgKyAnYCcpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAodmFsdWUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCBiZSBlbXB0eScpXG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB2YWx1ZS5sZW5ndGg7IGorKykge1xuICAgICAgICAgIHNlZ21lbnQgPSBlbmNvZGUodmFsdWVbal0pXG5cbiAgICAgICAgICBpZiAoIW1hdGNoZXNbaV0udGVzdChzZWdtZW50KSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgYWxsIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIGAnICsgSlNPTi5zdHJpbmdpZnkoc2VnbWVudCkgKyAnYCcpXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcGF0aCArPSAoaiA9PT0gMCA/IHRva2VuLnByZWZpeCA6IHRva2VuLmRlbGltaXRlcikgKyBzZWdtZW50XG4gICAgICAgIH1cblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICBzZWdtZW50ID0gdG9rZW4uYXN0ZXJpc2sgPyBlbmNvZGVBc3Rlcmlzayh2YWx1ZSkgOiBlbmNvZGUodmFsdWUpXG5cbiAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIFwiJyArIHNlZ21lbnQgKyAnXCInKVxuICAgICAgfVxuXG4gICAgICBwYXRoICs9IHRva2VuLnByZWZpeCArIHNlZ21lbnRcbiAgICB9XG5cbiAgICByZXR1cm4gcGF0aFxuICB9XG59XG5cbi8qKlxuICogRXNjYXBlIGEgcmVndWxhciBleHByZXNzaW9uIHN0cmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IHN0clxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlc2NhcGVTdHJpbmcgKHN0cikge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoLyhbLisqPz1eIToke30oKVtcXF18XFwvXFxcXF0pL2csICdcXFxcJDEnKVxufVxuXG4vKipcbiAqIEVzY2FwZSB0aGUgY2FwdHVyaW5nIGdyb3VwIGJ5IGVzY2FwaW5nIHNwZWNpYWwgY2hhcmFjdGVycyBhbmQgbWVhbmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IGdyb3VwXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVzY2FwZUdyb3VwIChncm91cCkge1xuICByZXR1cm4gZ3JvdXAucmVwbGFjZSgvKFs9ITokXFwvKCldKS9nLCAnXFxcXCQxJylcbn1cblxuLyoqXG4gKiBBdHRhY2ggdGhlIGtleXMgYXMgYSBwcm9wZXJ0eSBvZiB0aGUgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHJlXG4gKiBAcGFyYW0gIHtBcnJheX0gICBrZXlzXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBhdHRhY2hLZXlzIChyZSwga2V5cykge1xuICByZS5rZXlzID0ga2V5c1xuICByZXR1cm4gcmVcbn1cblxuLyoqXG4gKiBHZXQgdGhlIGZsYWdzIGZvciBhIHJlZ2V4cCBmcm9tIHRoZSBvcHRpb25zLlxuICpcbiAqIEBwYXJhbSAge09iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBmbGFncyAob3B0aW9ucykge1xuICByZXR1cm4gb3B0aW9ucyAmJiBvcHRpb25zLnNlbnNpdGl2ZSA/ICcnIDogJ2knXG59XG5cbi8qKlxuICogUHVsbCBvdXQga2V5cyBmcm9tIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHJlZ2V4cFRvUmVnZXhwIChwYXRoLCBrZXlzKSB7XG4gIC8vIFVzZSBhIG5lZ2F0aXZlIGxvb2thaGVhZCB0byBtYXRjaCBvbmx5IGNhcHR1cmluZyBncm91cHMuXG4gIHZhciBncm91cHMgPSBwYXRoLnNvdXJjZS5tYXRjaCgvXFwoKD8hXFw/KS9nKVxuXG4gIGlmIChncm91cHMpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGdyb3Vwcy5sZW5ndGg7IGkrKykge1xuICAgICAga2V5cy5wdXNoKHtcbiAgICAgICAgbmFtZTogaSxcbiAgICAgICAgcHJlZml4OiBudWxsLFxuICAgICAgICBkZWxpbWl0ZXI6IG51bGwsXG4gICAgICAgIG9wdGlvbmFsOiBmYWxzZSxcbiAgICAgICAgcmVwZWF0OiBmYWxzZSxcbiAgICAgICAgcGFydGlhbDogZmFsc2UsXG4gICAgICAgIGFzdGVyaXNrOiBmYWxzZSxcbiAgICAgICAgcGF0dGVybjogbnVsbFxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYXR0YWNoS2V5cyhwYXRoLCBrZXlzKVxufVxuXG4vKipcbiAqIFRyYW5zZm9ybSBhbiBhcnJheSBpbnRvIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFBcnJheX0gIHBhdGhcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGFycmF5VG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgdmFyIHBhcnRzID0gW11cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHBhdGgubGVuZ3RoOyBpKyspIHtcbiAgICBwYXJ0cy5wdXNoKHBhdGhUb1JlZ2V4cChwYXRoW2ldLCBrZXlzLCBvcHRpb25zKS5zb3VyY2UpXG4gIH1cblxuICB2YXIgcmVnZXhwID0gbmV3IFJlZ0V4cCgnKD86JyArIHBhcnRzLmpvaW4oJ3wnKSArICcpJywgZmxhZ3Mob3B0aW9ucykpXG5cbiAgcmV0dXJuIGF0dGFjaEtleXMocmVnZXhwLCBrZXlzKVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIHBhdGggcmVnZXhwIGZyb20gc3RyaW5nIGlucHV0LlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHN0cmluZ1RvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b2tlbnNUb1JlZ0V4cChwYXJzZShwYXRoLCBvcHRpb25zKSwga2V5cywgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBFeHBvc2UgYSBmdW5jdGlvbiBmb3IgdGFraW5nIHRva2VucyBhbmQgcmV0dXJuaW5nIGEgUmVnRXhwLlxuICpcbiAqIEBwYXJhbSAgeyFBcnJheX0gICAgICAgICAgdG9rZW5zXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19IGtleXNcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gdG9rZW5zVG9SZWdFeHAgKHRva2Vucywga2V5cywgb3B0aW9ucykge1xuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKVxuICAgIGtleXMgPSBbXVxuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge31cblxuICB2YXIgc3RyaWN0ID0gb3B0aW9ucy5zdHJpY3RcbiAgdmFyIGVuZCA9IG9wdGlvbnMuZW5kICE9PSBmYWxzZVxuICB2YXIgcm91dGUgPSAnJ1xuXG4gIC8vIEl0ZXJhdGUgb3ZlciB0aGUgdG9rZW5zIGFuZCBjcmVhdGUgb3VyIHJlZ2V4cCBzdHJpbmcuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXG5cbiAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgcm91dGUgKz0gZXNjYXBlU3RyaW5nKHRva2VuKVxuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgcHJlZml4ID0gZXNjYXBlU3RyaW5nKHRva2VuLnByZWZpeClcbiAgICAgIHZhciBjYXB0dXJlID0gJyg/OicgKyB0b2tlbi5wYXR0ZXJuICsgJyknXG5cbiAgICAgIGtleXMucHVzaCh0b2tlbilcblxuICAgICAgaWYgKHRva2VuLnJlcGVhdCkge1xuICAgICAgICBjYXB0dXJlICs9ICcoPzonICsgcHJlZml4ICsgY2FwdHVyZSArICcpKidcbiAgICAgIH1cblxuICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgIGlmICghdG9rZW4ucGFydGlhbCkge1xuICAgICAgICAgIGNhcHR1cmUgPSAnKD86JyArIHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKSk/J1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyk/J1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjYXB0dXJlID0gcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpJ1xuICAgICAgfVxuXG4gICAgICByb3V0ZSArPSBjYXB0dXJlXG4gICAgfVxuICB9XG5cbiAgdmFyIGRlbGltaXRlciA9IGVzY2FwZVN0cmluZyhvcHRpb25zLmRlbGltaXRlciB8fCAnLycpXG4gIHZhciBlbmRzV2l0aERlbGltaXRlciA9IHJvdXRlLnNsaWNlKC1kZWxpbWl0ZXIubGVuZ3RoKSA9PT0gZGVsaW1pdGVyXG5cbiAgLy8gSW4gbm9uLXN0cmljdCBtb2RlIHdlIGFsbG93IGEgc2xhc2ggYXQgdGhlIGVuZCBvZiBtYXRjaC4gSWYgdGhlIHBhdGggdG9cbiAgLy8gbWF0Y2ggYWxyZWFkeSBlbmRzIHdpdGggYSBzbGFzaCwgd2UgcmVtb3ZlIGl0IGZvciBjb25zaXN0ZW5jeS4gVGhlIHNsYXNoXG4gIC8vIGlzIHZhbGlkIGF0IHRoZSBlbmQgb2YgYSBwYXRoIG1hdGNoLCBub3QgaW4gdGhlIG1pZGRsZS4gVGhpcyBpcyBpbXBvcnRhbnRcbiAgLy8gaW4gbm9uLWVuZGluZyBtb2RlLCB3aGVyZSBcIi90ZXN0L1wiIHNob3VsZG4ndCBtYXRjaCBcIi90ZXN0Ly9yb3V0ZVwiLlxuICBpZiAoIXN0cmljdCkge1xuICAgIHJvdXRlID0gKGVuZHNXaXRoRGVsaW1pdGVyID8gcm91dGUuc2xpY2UoMCwgLWRlbGltaXRlci5sZW5ndGgpIDogcm91dGUpICsgJyg/OicgKyBkZWxpbWl0ZXIgKyAnKD89JCkpPydcbiAgfVxuXG4gIGlmIChlbmQpIHtcbiAgICByb3V0ZSArPSAnJCdcbiAgfSBlbHNlIHtcbiAgICAvLyBJbiBub24tZW5kaW5nIG1vZGUsIHdlIG5lZWQgdGhlIGNhcHR1cmluZyBncm91cHMgdG8gbWF0Y2ggYXMgbXVjaCBhc1xuICAgIC8vIHBvc3NpYmxlIGJ5IHVzaW5nIGEgcG9zaXRpdmUgbG9va2FoZWFkIHRvIHRoZSBlbmQgb3IgbmV4dCBwYXRoIHNlZ21lbnQuXG4gICAgcm91dGUgKz0gc3RyaWN0ICYmIGVuZHNXaXRoRGVsaW1pdGVyID8gJycgOiAnKD89JyArIGRlbGltaXRlciArICd8JCknXG4gIH1cblxuICByZXR1cm4gYXR0YWNoS2V5cyhuZXcgUmVnRXhwKCdeJyArIHJvdXRlLCBmbGFncyhvcHRpb25zKSksIGtleXMpXG59XG5cbi8qKlxuICogTm9ybWFsaXplIHRoZSBnaXZlbiBwYXRoIHN0cmluZywgcmV0dXJuaW5nIGEgcmVndWxhciBleHByZXNzaW9uLlxuICpcbiAqIEFuIGVtcHR5IGFycmF5IGNhbiBiZSBwYXNzZWQgaW4gZm9yIHRoZSBrZXlzLCB3aGljaCB3aWxsIGhvbGQgdGhlXG4gKiBwbGFjZWhvbGRlciBrZXkgZGVzY3JpcHRpb25zLiBGb3IgZXhhbXBsZSwgdXNpbmcgYC91c2VyLzppZGAsIGBrZXlzYCB3aWxsXG4gKiBjb250YWluIGBbeyBuYW1lOiAnaWQnLCBkZWxpbWl0ZXI6ICcvJywgb3B0aW9uYWw6IGZhbHNlLCByZXBlYXQ6IGZhbHNlIH1dYC5cbiAqXG4gKiBAcGFyYW0gIHsoc3RyaW5nfFJlZ0V4cHxBcnJheSl9IHBhdGhcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0gICAgICAga2V5c1xuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBwYXRoVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgaWYgKCFpc2FycmF5KGtleXMpKSB7XG4gICAgb3B0aW9ucyA9IC8qKiBAdHlwZSB7IU9iamVjdH0gKi8gKGtleXMgfHwgb3B0aW9ucylcbiAgICBrZXlzID0gW11cbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgaWYgKHBhdGggaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICByZXR1cm4gcmVnZXhwVG9SZWdleHAocGF0aCwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSlcbiAgfVxuXG4gIGlmIChpc2FycmF5KHBhdGgpKSB7XG4gICAgcmV0dXJuIGFycmF5VG9SZWdleHAoLyoqIEB0eXBlIHshQXJyYXl9ICovIChwYXRoKSwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSwgb3B0aW9ucylcbiAgfVxuXG4gIHJldHVybiBzdHJpbmdUb1JlZ2V4cCgvKiogQHR5cGUge3N0cmluZ30gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX3JlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcblxudmFyIF9yZWFjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZWFjdCk7XG5cbnZhciBfcHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xuXG52YXIgX3Byb3BUeXBlczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9wVHlwZXMpO1xuXG52YXIgX2NsYXNzbmFtZXMgPSByZXF1aXJlKCdjbGFzc25hbWVzJyk7XG5cbnZhciBfY2xhc3NuYW1lczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jbGFzc25hbWVzKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgU3RhclJhdGluZ0NvbXBvbmVudCA9IGZ1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhTdGFyUmF0aW5nQ29tcG9uZW50LCBfQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTdGFyUmF0aW5nQ29tcG9uZW50KHByb3BzKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFN0YXJSYXRpbmdDb21wb25lbnQpO1xuXG4gICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKFN0YXJSYXRpbmdDb21wb25lbnQuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihTdGFyUmF0aW5nQ29tcG9uZW50KSkuY2FsbCh0aGlzKSk7XG5cbiAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIHZhbHVlOiBwcm9wcy52YWx1ZVxuICAgIH07XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKFN0YXJSYXRpbmdDb21wb25lbnQsIFt7XG4gICAga2V5OiAnY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICB2YXIgdmFsdWUgPSBuZXh0UHJvcHMudmFsdWU7XG5cblxuICAgICAgaWYgKHZhbHVlICE9IG51bGwgJiYgdmFsdWUgIT09IHRoaXMuc3RhdGUudmFsdWUpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IHZhbHVlOiB2YWx1ZSB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdvbkNoYW5nZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9uQ2hhbmdlKGlucHV0VmFsdWUpIHtcbiAgICAgIHZhciBfcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICAgIGVkaXRpbmcgPSBfcHJvcHMuZWRpdGluZyxcbiAgICAgICAgICB2YWx1ZSA9IF9wcm9wcy52YWx1ZTtcblxuXG4gICAgICBpZiAoIWVkaXRpbmcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyBkbyBub3QgdXBkYXRlIGludGVybmFsIHN0YXRlIGJhc2VkIG9uIGlucHV0IHZhbHVlIGlmIHByb3AgcGFzc2VkXG4gICAgICBpZiAodmFsdWUgIT0gbnVsbCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHRoaXMuc2V0U3RhdGUoeyB2YWx1ZTogaW5wdXRWYWx1ZSB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdvblN0YXJDbGljaycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9uU3RhckNsaWNrKGluZGV4LCB2YWx1ZSwgbmFtZSwgZSkge1xuICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcblxuICAgICAgdmFyIF9wcm9wczIgPSB0aGlzLnByb3BzLFxuICAgICAgICAgIG9uU3RhckNsaWNrID0gX3Byb3BzMi5vblN0YXJDbGljayxcbiAgICAgICAgICBlZGl0aW5nID0gX3Byb3BzMi5lZGl0aW5nO1xuXG5cbiAgICAgIGlmICghZWRpdGluZykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIG9uU3RhckNsaWNrICYmIG9uU3RhckNsaWNrKGluZGV4LCB2YWx1ZSwgbmFtZSwgZSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnb25TdGFySG92ZXInLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBvblN0YXJIb3ZlcihpbmRleCwgdmFsdWUsIG5hbWUsIGUpIHtcbiAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cbiAgICAgIHZhciBfcHJvcHMzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICBvblN0YXJIb3ZlciA9IF9wcm9wczMub25TdGFySG92ZXIsXG4gICAgICAgICAgZWRpdGluZyA9IF9wcm9wczMuZWRpdGluZztcblxuXG4gICAgICBpZiAoIWVkaXRpbmcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBvblN0YXJIb3ZlciAmJiBvblN0YXJIb3ZlcihpbmRleCwgdmFsdWUsIG5hbWUsIGUpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ29uU3RhckhvdmVyT3V0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gb25TdGFySG92ZXJPdXQoaW5kZXgsIHZhbHVlLCBuYW1lLCBlKSB7XG4gICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuXG4gICAgICB2YXIgX3Byb3BzNCA9IHRoaXMucHJvcHMsXG4gICAgICAgICAgb25TdGFySG92ZXJPdXQgPSBfcHJvcHM0Lm9uU3RhckhvdmVyT3V0LFxuICAgICAgICAgIGVkaXRpbmcgPSBfcHJvcHM0LmVkaXRpbmc7XG5cblxuICAgICAgaWYgKCFlZGl0aW5nKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgb25TdGFySG92ZXJPdXQgJiYgb25TdGFySG92ZXJPdXQoaW5kZXgsIHZhbHVlLCBuYW1lLCBlKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdyZW5kZXJTdGFycycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlclN0YXJzKCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHZhciBfcHJvcHM1ID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICBuYW1lID0gX3Byb3BzNS5uYW1lLFxuICAgICAgICAgIHN0YXJDb3VudCA9IF9wcm9wczUuc3RhckNvdW50LFxuICAgICAgICAgIHN0YXJDb2xvciA9IF9wcm9wczUuc3RhckNvbG9yLFxuICAgICAgICAgIGVtcHR5U3RhckNvbG9yID0gX3Byb3BzNS5lbXB0eVN0YXJDb2xvcixcbiAgICAgICAgICBlZGl0aW5nID0gX3Byb3BzNS5lZGl0aW5nO1xuICAgICAgdmFyIHZhbHVlID0gdGhpcy5zdGF0ZS52YWx1ZTtcblxuXG4gICAgICB2YXIgc3RhclN0eWxlcyA9IGZ1bmN0aW9uIHN0YXJTdHlsZXMoaSwgdmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBmbG9hdDogJ3JpZ2h0JyxcbiAgICAgICAgICBjdXJzb3I6IGVkaXRpbmcgPyAncG9pbnRlcicgOiAnZGVmYXVsdCcsXG4gICAgICAgICAgY29sb3I6IHZhbHVlID49IGkgPyBzdGFyQ29sb3IgOiBlbXB0eVN0YXJDb2xvclxuICAgICAgICB9O1xuICAgICAgfTtcbiAgICAgIHZhciByYWRpb1N0eWxlcyA9IHtcbiAgICAgICAgZGlzcGxheTogJ25vbmUnLFxuICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgICAgbWFyZ2luTGVmdDogLTk5OTlcbiAgICAgIH07XG5cbiAgICAgIC8vIHBvcHVsYXRlIHN0YXJzXG4gICAgICB2YXIgc3Rhck5vZGVzID0gW107XG5cbiAgICAgIHZhciBfbG9vcCA9IGZ1bmN0aW9uIF9sb29wKGkpIHtcbiAgICAgICAgdmFyIGlkID0gbmFtZSArICdfJyArIGk7XG4gICAgICAgIHZhciBzdGFyTm9kZUlucHV0ID0gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jywge1xuICAgICAgICAgIGtleTogJ2lucHV0XycgKyBpZCxcbiAgICAgICAgICBzdHlsZTogcmFkaW9TdHlsZXMsXG4gICAgICAgICAgY2xhc3NOYW1lOiAnZHYtc3Rhci1yYXRpbmctaW5wdXQnLFxuICAgICAgICAgIHR5cGU6ICdyYWRpbycsXG4gICAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgICBpZDogaWQsXG4gICAgICAgICAgdmFsdWU6IGksXG4gICAgICAgICAgY2hlY2tlZDogdmFsdWUgPT09IGksXG4gICAgICAgICAgb25DaGFuZ2U6IF90aGlzMi5vbkNoYW5nZS5iaW5kKF90aGlzMiwgaSwgbmFtZSlcbiAgICAgICAgfSk7XG4gICAgICAgIHZhciBzdGFyTm9kZUxhYmVsID0gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgJ2xhYmVsJyxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBrZXk6ICdsYWJlbF8nICsgaWQsXG4gICAgICAgICAgICBzdHlsZTogc3RhclN0eWxlcyhpLCB2YWx1ZSksXG4gICAgICAgICAgICBjbGFzc05hbWU6ICdkdi1zdGFyLXJhdGluZy1zdGFyICcgKyAodmFsdWUgPj0gaSA/ICdkdi1zdGFyLXJhdGluZy1mdWxsLXN0YXInIDogJ2R2LXN0YXItcmF0aW5nLWVtcHR5LXN0YXInKSxcbiAgICAgICAgICAgIGh0bWxGb3I6IGlkLFxuICAgICAgICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljayhlKSB7XG4gICAgICAgICAgICAgIHJldHVybiBfdGhpczIub25TdGFyQ2xpY2soaSwgdmFsdWUsIG5hbWUsIGUpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG9uTW91c2VPdmVyOiBmdW5jdGlvbiBvbk1vdXNlT3ZlcihlKSB7XG4gICAgICAgICAgICAgIHJldHVybiBfdGhpczIub25TdGFySG92ZXIoaSwgdmFsdWUsIG5hbWUsIGUpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG9uTW91c2VMZWF2ZTogZnVuY3Rpb24gb25Nb3VzZUxlYXZlKGUpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi5vblN0YXJIb3Zlck91dChpLCB2YWx1ZSwgbmFtZSwgZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBfdGhpczIucmVuZGVySWNvbihpLCB2YWx1ZSwgbmFtZSwgaWQpXG4gICAgICAgICk7XG5cbiAgICAgICAgc3Rhck5vZGVzLnB1c2goc3Rhck5vZGVJbnB1dCk7XG4gICAgICAgIHN0YXJOb2Rlcy5wdXNoKHN0YXJOb2RlTGFiZWwpO1xuICAgICAgfTtcblxuICAgICAgZm9yICh2YXIgaSA9IHN0YXJDb3VudDsgaSA+IDA7IGktLSkge1xuICAgICAgICBfbG9vcChpKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHN0YXJOb2Rlcy5sZW5ndGggPyBzdGFyTm9kZXMgOiBudWxsO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3JlbmRlckljb24nLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJJY29uKGluZGV4LCB2YWx1ZSwgbmFtZSwgaWQpIHtcbiAgICAgIHZhciBfcHJvcHM2ID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICByZW5kZXJTdGFySWNvbiA9IF9wcm9wczYucmVuZGVyU3Rhckljb24sXG4gICAgICAgICAgcmVuZGVyU3Rhckljb25IYWxmID0gX3Byb3BzNi5yZW5kZXJTdGFySWNvbkhhbGY7XG5cblxuICAgICAgaWYgKHR5cGVvZiByZW5kZXJTdGFySWNvbkhhbGYgPT09ICdmdW5jdGlvbicgJiYgTWF0aC5jZWlsKHZhbHVlKSA9PT0gaW5kZXggJiYgdmFsdWUgJSAxICE9PSAwKSB7XG4gICAgICAgIHJldHVybiByZW5kZXJTdGFySWNvbkhhbGYoaW5kZXgsIHZhbHVlLCBuYW1lLCBpZCk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgcmVuZGVyU3Rhckljb24gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIHJlbmRlclN0YXJJY29uKGluZGV4LCB2YWx1ZSwgbmFtZSwgaWQpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICdpJyxcbiAgICAgICAgeyBrZXk6ICdpY29uXycgKyBpZCwgc3R5bGU6IHsgZm9udFN0eWxlOiAnbm9ybWFsJyB9IH0sXG4gICAgICAgICdcXHUyNjA1J1xuICAgICAgKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdyZW5kZXInLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICB2YXIgX3Byb3BzNyA9IHRoaXMucHJvcHMsXG4gICAgICAgICAgZWRpdGluZyA9IF9wcm9wczcuZWRpdGluZyxcbiAgICAgICAgICBjbGFzc05hbWUgPSBfcHJvcHM3LmNsYXNzTmFtZTtcblxuICAgICAgdmFyIGNsYXNzZXMgPSAoMCwgX2NsYXNzbmFtZXMyLmRlZmF1bHQpKCdkdi1zdGFyLXJhdGluZycsIHtcbiAgICAgICAgJ2R2LXN0YXItcmF0aW5nLW5vbi1lZGl0YWJsZSc6ICFlZGl0aW5nXG4gICAgICB9LCBjbGFzc05hbWUpO1xuXG4gICAgICByZXR1cm4gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICdkaXYnLFxuICAgICAgICB7IHN0eWxlOiB7IGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLCBwb3NpdGlvbjogJ3JlbGF0aXZlJyB9LCBjbGFzc05hbWU6IGNsYXNzZXMgfSxcbiAgICAgICAgdGhpcy5yZW5kZXJTdGFycygpXG4gICAgICApO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBTdGFyUmF0aW5nQ29tcG9uZW50O1xufShfcmVhY3QuQ29tcG9uZW50KTtcblxuU3RhclJhdGluZ0NvbXBvbmVudC5wcm9wVHlwZXMgPSB7XG4gIG5hbWU6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHZhbHVlOiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm51bWJlcixcbiAgZWRpdGluZzogX3Byb3BUeXBlczIuZGVmYXVsdC5ib29sLFxuICBzdGFyQ291bnQ6IF9wcm9wVHlwZXMyLmRlZmF1bHQubnVtYmVyLFxuICBzdGFyQ29sb3I6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLFxuICBvblN0YXJDbGljazogX3Byb3BUeXBlczIuZGVmYXVsdC5mdW5jLFxuICBvblN0YXJIb3ZlcjogX3Byb3BUeXBlczIuZGVmYXVsdC5mdW5jLFxuICBvblN0YXJIb3Zlck91dDogX3Byb3BUeXBlczIuZGVmYXVsdC5mdW5jLFxuICByZW5kZXJTdGFySWNvbjogX3Byb3BUeXBlczIuZGVmYXVsdC5mdW5jLFxuICByZW5kZXJTdGFySWNvbkhhbGY6IF9wcm9wVHlwZXMyLmRlZmF1bHQuZnVuY1xufTtcblN0YXJSYXRpbmdDb21wb25lbnQuZGVmYXVsdFByb3BzID0ge1xuICBzdGFyQ291bnQ6IDUsXG4gIGVkaXRpbmc6IHRydWUsXG4gIHN0YXJDb2xvcjogJyNmZmI0MDAnLFxuICBlbXB0eVN0YXJDb2xvcjogJyMzMzMnXG59O1xuZXhwb3J0cy5kZWZhdWx0ID0gU3RhclJhdGluZ0NvbXBvbmVudDtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuIiwiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBjaGVja0RDRSgpIHtcbiAgLyogZ2xvYmFsIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAqL1xuICBpZiAoXG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyA9PT0gJ3VuZGVmaW5lZCcgfHxcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFICE9PSAnZnVuY3Rpb24nXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIFRoaXMgYnJhbmNoIGlzIHVucmVhY2hhYmxlIGJlY2F1c2UgdGhpcyBmdW5jdGlvbiBpcyBvbmx5IGNhbGxlZFxuICAgIC8vIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgY29uZGl0aW9uIGlzIHRydWUgb25seSBpbiBkZXZlbG9wbWVudC5cbiAgICAvLyBUaGVyZWZvcmUgaWYgdGhlIGJyYW5jaCBpcyBzdGlsbCBoZXJlLCBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2Fzbid0XG4gICAgLy8gcHJvcGVybHkgYXBwbGllZC5cbiAgICAvLyBEb24ndCBjaGFuZ2UgdGhlIG1lc3NhZ2UuIFJlYWN0IERldlRvb2xzIHJlbGllcyBvbiBpdC4gQWxzbyBtYWtlIHN1cmVcbiAgICAvLyB0aGlzIG1lc3NhZ2UgZG9lc24ndCBvY2N1ciBlbHNld2hlcmUgaW4gdGhpcyBmdW5jdGlvbiwgb3IgaXQgd2lsbCBjYXVzZVxuICAgIC8vIGEgZmFsc2UgcG9zaXRpdmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKCdeX14nKTtcbiAgfVxuICB0cnkge1xuICAgIC8vIFZlcmlmeSB0aGF0IHRoZSBjb2RlIGFib3ZlIGhhcyBiZWVuIGRlYWQgY29kZSBlbGltaW5hdGVkIChEQ0UnZCkuXG4gICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFKGNoZWNrRENFKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gRGV2VG9vbHMgc2hvdWxkbid0IGNyYXNoIFJlYWN0LCBubyBtYXR0ZXIgd2hhdC5cbiAgICAvLyBXZSBzaG91bGQgc3RpbGwgcmVwb3J0IGluIGNhc2Ugd2UgYnJlYWsgdGhpcyBjb2RlLlxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgfVxufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAvLyBEQ0UgY2hlY2sgc2hvdWxkIGhhcHBlbiBiZWZvcmUgUmVhY3RET00gYnVuZGxlIGV4ZWN1dGVzIHNvIHRoYXRcbiAgLy8gRGV2VG9vbHMgY2FuIHJlcG9ydCBiYWQgbWluaWZpY2F0aW9uIGR1cmluZyBpbmplY3Rpb24uXG4gIGNoZWNrRENFKCk7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLy8gQGZsb3dcbid1c2Ugc3RyaWN0JztcblxudmFyIGtleSA9ICdfX2dsb2JhbF91bmlxdWVfaWRfXyc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBnbG9iYWxba2V5XSA9IChnbG9iYWxba2V5XSB8fCAwKSArIDE7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbi8qKlxuICogQ29weXJpZ2h0IDIwMTUsIFlhaG9vISBJbmMuXG4gKiBDb3B5cmlnaHRzIGxpY2Vuc2VkIHVuZGVyIHRoZSBOZXcgQlNEIExpY2Vuc2UuIFNlZSB0aGUgYWNjb21wYW55aW5nIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMuXG4gKi9cbnZhciBSRUFDVF9TVEFUSUNTID0ge1xuICBjaGlsZENvbnRleHRUeXBlczogdHJ1ZSxcbiAgY29udGV4dFR5cGU6IHRydWUsXG4gIGNvbnRleHRUeXBlczogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgZ2V0RGVmYXVsdFByb3BzOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgbWl4aW5zOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgS05PV05fU1RBVElDUyA9IHtcbiAgbmFtZTogdHJ1ZSxcbiAgbGVuZ3RoOiB0cnVlLFxuICBwcm90b3R5cGU6IHRydWUsXG4gIGNhbGxlcjogdHJ1ZSxcbiAgY2FsbGVlOiB0cnVlLFxuICBhcmd1bWVudHM6IHRydWUsXG4gIGFyaXR5OiB0cnVlXG59O1xudmFyIEZPUldBUkRfUkVGX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIHJlbmRlcjogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlXG59O1xudmFyIE1FTU9fU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgY29tcGFyZTogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIFRZUEVfU1RBVElDUyA9IHt9O1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuRm9yd2FyZFJlZl0gPSBGT1JXQVJEX1JFRl9TVEFUSUNTO1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuTWVtb10gPSBNRU1PX1NUQVRJQ1M7XG5cbmZ1bmN0aW9uIGdldFN0YXRpY3MoY29tcG9uZW50KSB7XG4gIC8vIFJlYWN0IHYxNi4xMSBhbmQgYmVsb3dcbiAgaWYgKHJlYWN0SXMuaXNNZW1vKGNvbXBvbmVudCkpIHtcbiAgICByZXR1cm4gTUVNT19TVEFUSUNTO1xuICB9IC8vIFJlYWN0IHYxNi4xMiBhbmQgYWJvdmVcblxuXG4gIHJldHVybiBUWVBFX1NUQVRJQ1NbY29tcG9uZW50WyckJHR5cGVvZiddXSB8fCBSRUFDVF9TVEFUSUNTO1xufVxuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBvYmplY3RQcm90b3R5cGUgPSBPYmplY3QucHJvdG90eXBlO1xuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcbiAgICAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuICAgIGlmIChvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICB9XG5cbiAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IGdldFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50KTtcbiAgICB2YXIgc291cmNlU3RhdGljcyA9IGdldFN0YXRpY3Moc291cmNlQ29tcG9uZW50KTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmICghS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJiAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaG9pc3ROb25SZWFjdFN0YXRpY3M7XG4iLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL21haW4uc2Nzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxudmFyIGV4cG9ydGVkID0gY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHt9O1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRlZDsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIGlzT2xkSUUgPSBmdW5jdGlvbiBpc09sZElFKCkge1xuICB2YXIgbWVtbztcbiAgcmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKCkge1xuICAgIGlmICh0eXBlb2YgbWVtbyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG4gICAgICAvLyBAc2VlIGh0dHA6Ly9icm93c2VyaGFja3MuY29tLyNoYWNrLWU3MWQ4NjkyZjY1MzM0MTczZmVlNzE1YzIyMmNiODA1XG4gICAgICAvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG4gICAgICAvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcbiAgICAgIC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIvaXNzdWVzLzE3N1xuICAgICAgbWVtbyA9IEJvb2xlYW4od2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2IpO1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vO1xuICB9O1xufSgpO1xuXG52YXIgZ2V0VGFyZ2V0ID0gZnVuY3Rpb24gZ2V0VGFyZ2V0KCkge1xuICB2YXIgbWVtbyA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUodGFyZ2V0KSB7XG4gICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vW3RhcmdldF07XG4gIH07XG59KCk7XG5cbnZhciBzdHlsZXNJbkRvbSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRG9tLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRG9tW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM11cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlc0luRG9tLnB1c2goe1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiBhZGRTdHlsZShvYmosIG9wdGlvbnMpLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICB2YXIgYXR0cmlidXRlcyA9IG9wdGlvbnMuYXR0cmlidXRlcyB8fCB7fTtcblxuICBpZiAodHlwZW9mIGF0dHJpYnV0ZXMubm9uY2UgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSAndW5kZWZpbmVkJyA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICAgIGlmIChub25jZSkge1xuICAgICAgYXR0cmlidXRlcy5ub25jZSA9IG5vbmNlO1xuICAgIH1cbiAgfVxuXG4gIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHN0eWxlLnNldEF0dHJpYnV0ZShrZXksIGF0dHJpYnV0ZXNba2V5XSk7XG4gIH0pO1xuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICBvcHRpb25zLmluc2VydChzdHlsZSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHRhcmdldCA9IGdldFRhcmdldChvcHRpb25zLmluc2VydCB8fCAnaGVhZCcpO1xuXG4gICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gICAgfVxuXG4gICAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgfVxuXG4gIHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxudmFyIHJlcGxhY2VUZXh0ID0gZnVuY3Rpb24gcmVwbGFjZVRleHQoKSB7XG4gIHZhciB0ZXh0U3RvcmUgPSBbXTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHJlcGxhY2UoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG4gICAgdGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuICAgIHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuICB9O1xufSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnKHN0eWxlLCBpbmRleCwgcmVtb3ZlLCBvYmopIHtcbiAgdmFyIGNzcyA9IHJlbW92ZSA/ICcnIDogb2JqLm1lZGlhID8gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKS5jb25jYXQob2JqLmNzcywgXCJ9XCIpIDogb2JqLmNzczsgLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuICB9IGVsc2Uge1xuICAgIHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcbiAgICB2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cbiAgICBpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICB9XG5cbiAgICBpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcbiAgICAgIHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnKHN0eWxlLCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IG9iai5jc3M7XG4gIHZhciBtZWRpYSA9IG9iai5tZWRpYTtcbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKG1lZGlhKSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKCdtZWRpYScsIG1lZGlhKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZS5yZW1vdmVBdHRyaWJ1dGUoJ21lZGlhJyk7XG4gIH1cblxuICBpZiAoc291cmNlTWFwICYmIGJ0b2EpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgaWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlLmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKHN0eWxlLmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbnZhciBzaW5nbGV0b24gPSBudWxsO1xudmFyIHNpbmdsZXRvbkNvdW50ZXIgPSAwO1xuXG5mdW5jdGlvbiBhZGRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlO1xuICB2YXIgdXBkYXRlO1xuICB2YXIgcmVtb3ZlO1xuXG4gIGlmIChvcHRpb25zLnNpbmdsZXRvbikge1xuICAgIHZhciBzdHlsZUluZGV4ID0gc2luZ2xldG9uQ291bnRlcisrO1xuICAgIHN0eWxlID0gc2luZ2xldG9uIHx8IChzaW5nbGV0b24gPSBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykpO1xuICAgIHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgZmFsc2UpO1xuICAgIHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgdHJ1ZSk7XG4gIH0gZWxzZSB7XG4gICAgc3R5bGUgPSBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gICAgdXBkYXRlID0gYXBwbHlUb1RhZy5iaW5kKG51bGwsIHN0eWxlLCBvcHRpb25zKTtcblxuICAgIHJlbW92ZSA9IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG4gICAgfTtcbiAgfVxuXG4gIHVwZGF0ZShvYmopO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlU3R5bGUobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICByZW1vdmUoKTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307IC8vIEZvcmNlIHNpbmdsZS10YWcgc29sdXRpb24gb24gSUU2LTksIHdoaWNoIGhhcyBhIGhhcmQgbGltaXQgb24gdGhlICMgb2YgPHN0eWxlPlxuICAvLyB0YWdzIGl0IHdpbGwgYWxsb3cgb24gYSBwYWdlXG5cbiAgaWYgKCFvcHRpb25zLnNpbmdsZXRvbiAmJiB0eXBlb2Ygb3B0aW9ucy5zaW5nbGV0b24gIT09ICdib29sZWFuJykge1xuICAgIG9wdGlvbnMuc2luZ2xldG9uID0gaXNPbGRJRSgpO1xuICB9XG5cbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChuZXdMaXN0KSAhPT0gJ1tvYmplY3QgQXJyYXldJykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRvbVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5Eb21bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5Eb20uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCIvLyBJbXBvcnRzXG52YXIgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIik7XG5leHBvcnRzID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnN0YXJze2ZvbnQtc2l6ZTo1MHB4fVxcblwiLCBcIlwiXSk7XG4vLyBFeHBvcnRzXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHM7XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXNlU291cmNlTWFwKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgcmV0dXJuIFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChjb250ZW50LCBcIn1cIik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oJycpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gKG1vZHVsZXMsIG1lZGlhUXVlcnksIGRlZHVwZSkge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgJyddXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19pXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udGludWVcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYVF1ZXJ5KSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMl0gPSBcIlwiLmNvbmNhdChtZWRpYVF1ZXJ5LCBcIiBhbmQgXCIpLmNvbmNhdChpdGVtWzJdKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcblxuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodXNlU291cmNlTWFwICYmIHR5cGVvZiBidG9hID09PSAnZnVuY3Rpb24nKSB7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCAnJykuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufSAvLyBBZGFwdGVkIGZyb20gY29udmVydC1zb3VyY2UtbWFwIChNSVQpXG5cblxuZnVuY3Rpb24gdG9Db21tZW50KHNvdXJjZU1hcCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSk7XG4gIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgcmV0dXJuIFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbn0iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjEzLjBcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBsPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixwPW4/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMscT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYscj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyx0PW4/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LHU9bj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsdj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSx3PW4/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAseD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMix5PW4/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLHo9bj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSxBPW4/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6XG42MDExNixCPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBDKGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifVxudmFyIEQ9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEU9e307ZnVuY3Rpb24gRihhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1FO3RoaXMudXBkYXRlcj1jfHxEfUYucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9e307Ri5wcm90b3R5cGUuc2V0U3RhdGU9ZnVuY3Rpb24oYSxiKXtpZihcIm9iamVjdFwiIT09dHlwZW9mIGEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZudWxsIT1hKXRocm93IEVycm9yKEMoODUpKTt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0YucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O1xuZnVuY3Rpb24gRygpe31HLnByb3RvdHlwZT1GLnByb3RvdHlwZTtmdW5jdGlvbiBIKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUU7dGhpcy51cGRhdGVyPWN8fER9dmFyIEk9SC5wcm90b3R5cGU9bmV3IEc7SS5jb25zdHJ1Y3Rvcj1IO2woSSxGLnByb3RvdHlwZSk7SS5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgSj17Y3VycmVudDpudWxsfSxLPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksTD17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gTShhLGIsYyl7dmFyIGUsZD17fSxnPW51bGwsaz1udWxsO2lmKG51bGwhPWIpZm9yKGUgaW4gdm9pZCAwIT09Yi5yZWYmJihrPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSksYilLLmNhbGwoYixlKSYmIUwuaGFzT3duUHJvcGVydHkoZSkmJihkW2VdPWJbZV0pO3ZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZilkLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGYpe2Zvcih2YXIgaD1BcnJheShmKSxtPTA7bTxmO20rKyloW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49aH1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoZSBpbiBmPWEuZGVmYXVsdFByb3BzLGYpdm9pZCAwPT09ZFtlXSYmKGRbZV09ZltlXSk7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLGtleTpnLHJlZjprLHByb3BzOmQsX293bmVyOkouY3VycmVudH19XG5mdW5jdGlvbiBOKGEsYil7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfX1mdW5jdGlvbiBPKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1wfWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrKFwiXCIrYSkucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIFA9L1xcLysvZyxRPVtdO2Z1bmN0aW9uIFIoYSxiLGMsZSl7aWYoUS5sZW5ndGgpe3ZhciBkPVEucG9wKCk7ZC5yZXN1bHQ9YTtkLmtleVByZWZpeD1iO2QuZnVuYz1jO2QuY29udGV4dD1lO2QuY291bnQ9MDtyZXR1cm4gZH1yZXR1cm57cmVzdWx0OmEsa2V5UHJlZml4OmIsZnVuYzpjLGNvbnRleHQ6ZSxjb3VudDowfX1cbmZ1bmN0aW9uIFMoYSl7YS5yZXN1bHQ9bnVsbDthLmtleVByZWZpeD1udWxsO2EuZnVuYz1udWxsO2EuY29udGV4dD1udWxsO2EuY291bnQ9MDsxMD5RLmxlbmd0aCYmUS5wdXNoKGEpfVxuZnVuY3Rpb24gVChhLGIsYyxlKXt2YXIgZD10eXBlb2YgYTtpZihcInVuZGVmaW5lZFwiPT09ZHx8XCJib29sZWFuXCI9PT1kKWE9bnVsbDt2YXIgZz0hMTtpZihudWxsPT09YSlnPSEwO2Vsc2Ugc3dpdGNoKGQpe2Nhc2UgXCJzdHJpbmdcIjpjYXNlIFwibnVtYmVyXCI6Zz0hMDticmVhaztjYXNlIFwib2JqZWN0XCI6c3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgcDpjYXNlIHE6Zz0hMH19aWYoZylyZXR1cm4gYyhlLGEsXCJcIj09PWI/XCIuXCIrVShhLDApOmIpLDE7Zz0wO2I9XCJcIj09PWI/XCIuXCI6YitcIjpcIjtpZihBcnJheS5pc0FycmF5KGEpKWZvcih2YXIgaz0wO2s8YS5sZW5ndGg7aysrKXtkPWFba107dmFyIGY9YitVKGQsayk7Zys9VChkLGYsYyxlKX1lbHNlIGlmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGE/Zj1udWxsOihmPUImJmFbQl18fGFbXCJAQGl0ZXJhdG9yXCJdLGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGY/ZjpudWxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZilmb3IoYT1mLmNhbGwoYSksaz1cbjA7IShkPWEubmV4dCgpKS5kb25lOylkPWQudmFsdWUsZj1iK1UoZCxrKyspLGcrPVQoZCxmLGMsZSk7ZWxzZSBpZihcIm9iamVjdFwiPT09ZCl0aHJvdyBjPVwiXCIrYSxFcnJvcihDKDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1jP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmMsXCJcIikpO3JldHVybiBnfWZ1bmN0aW9uIFYoYSxiLGMpe3JldHVybiBudWxsPT1hPzA6VChhLFwiXCIsYixjKX1mdW5jdGlvbiBVKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKGEua2V5KTpiLnRvU3RyaW5nKDM2KX1mdW5jdGlvbiBXKGEsYil7YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKX1cbmZ1bmN0aW9uIGFhKGEsYixjKXt2YXIgZT1hLnJlc3VsdCxkPWEua2V5UHJlZml4O2E9YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKTtBcnJheS5pc0FycmF5KGEpP1goYSxlLGMsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTpudWxsIT1hJiYoTyhhKSYmKGE9TihhLGQrKCFhLmtleXx8YiYmYi5rZXk9PT1hLmtleT9cIlwiOihcIlwiK2Eua2V5KS5yZXBsYWNlKFAsXCIkJi9cIikrXCIvXCIpK2MpKSxlLnB1c2goYSkpfWZ1bmN0aW9uIFgoYSxiLGMsZSxkKXt2YXIgZz1cIlwiO251bGwhPWMmJihnPShcIlwiK2MpLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIik7Yj1SKGIsZyxlLGQpO1YoYSxhYSxiKTtTKGIpfXZhciBZPXtjdXJyZW50Om51bGx9O2Z1bmN0aW9uIFooKXt2YXIgYT1ZLmN1cnJlbnQ7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IoQygzMjEpKTtyZXR1cm4gYX1cbnZhciBiYT17UmVhY3RDdXJyZW50RGlzcGF0Y2hlcjpZLFJlYWN0Q3VycmVudEJhdGNoQ29uZmlnOntzdXNwZW5zZTpudWxsfSxSZWFjdEN1cnJlbnRPd25lcjpKLElzU29tZVJlbmRlcmVyQWN0aW5nOntjdXJyZW50OiExfSxhc3NpZ246bH07ZXhwb3J0cy5DaGlsZHJlbj17bWFwOmZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBlPVtdO1goYSxlLG51bGwsYixjKTtyZXR1cm4gZX0sZm9yRWFjaDpmdW5jdGlvbihhLGIsYyl7aWYobnVsbD09YSlyZXR1cm4gYTtiPVIobnVsbCxudWxsLGIsYyk7VihhLFcsYik7UyhiKX0sY291bnQ6ZnVuY3Rpb24oYSl7cmV0dXJuIFYoYSxmdW5jdGlvbigpe3JldHVybiBudWxsfSxudWxsKX0sdG9BcnJheTpmdW5jdGlvbihhKXt2YXIgYj1bXTtYKGEsYixudWxsLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk7cmV0dXJuIGJ9LG9ubHk6ZnVuY3Rpb24oYSl7aWYoIU8oYSkpdGhyb3cgRXJyb3IoQygxNDMpKTtyZXR1cm4gYX19O1xuZXhwb3J0cy5Db21wb25lbnQ9RjtleHBvcnRzLkZyYWdtZW50PXI7ZXhwb3J0cy5Qcm9maWxlcj11O2V4cG9ydHMuUHVyZUNvbXBvbmVudD1IO2V4cG9ydHMuU3RyaWN0TW9kZT10O2V4cG9ydHMuU3VzcGVuc2U9eTtleHBvcnRzLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEPWJhO1xuZXhwb3J0cy5jbG9uZUVsZW1lbnQ9ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PT1hfHx2b2lkIDA9PT1hKXRocm93IEVycm9yKEMoMjY3LGEpKTt2YXIgZT1sKHt9LGEucHJvcHMpLGQ9YS5rZXksZz1hLnJlZixrPWEuX293bmVyO2lmKG51bGwhPWIpe3ZvaWQgMCE9PWIucmVmJiYoZz1iLnJlZixrPUouY3VycmVudCk7dm9pZCAwIT09Yi5rZXkmJihkPVwiXCIrYi5rZXkpO2lmKGEudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyl2YXIgZj1hLnR5cGUuZGVmYXVsdFByb3BzO2ZvcihoIGluIGIpSy5jYWxsKGIsaCkmJiFMLmhhc093blByb3BlcnR5KGgpJiYoZVtoXT12b2lkIDA9PT1iW2hdJiZ2b2lkIDAhPT1mP2ZbaF06YltoXSl9dmFyIGg9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1oKWUuY2hpbGRyZW49YztlbHNlIGlmKDE8aCl7Zj1BcnJheShoKTtmb3IodmFyIG09MDttPGg7bSsrKWZbbV09YXJndW1lbnRzW20rMl07ZS5jaGlsZHJlbj1mfXJldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLFxua2V5OmQscmVmOmcscHJvcHM6ZSxfb3duZXI6a319O2V4cG9ydHMuY3JlYXRlQ29udGV4dD1mdW5jdGlvbihhLGIpe3ZvaWQgMD09PWImJihiPW51bGwpO2E9eyQkdHlwZW9mOncsX2NhbGN1bGF0ZUNoYW5nZWRCaXRzOmIsX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX3RocmVhZENvdW50OjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjp2LF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9O2V4cG9ydHMuY3JlYXRlRWxlbWVudD1NO2V4cG9ydHMuY3JlYXRlRmFjdG9yeT1mdW5jdGlvbihhKXt2YXIgYj1NLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn07ZXhwb3J0cy5jcmVhdGVSZWY9ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX07ZXhwb3J0cy5mb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp4LHJlbmRlcjphfX07ZXhwb3J0cy5pc1ZhbGlkRWxlbWVudD1PO1xuZXhwb3J0cy5sYXp5PWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjpBLF9jdG9yOmEsX3N0YXR1czotMSxfcmVzdWx0Om51bGx9fTtleHBvcnRzLm1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm57JCR0eXBlb2Y6eix0eXBlOmEsY29tcGFyZTp2b2lkIDA9PT1iP251bGw6Yn19O2V4cG9ydHMudXNlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUNhbGxiYWNrKGEsYil9O2V4cG9ydHMudXNlQ29udGV4dD1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlQ29udGV4dChhLGIpfTtleHBvcnRzLnVzZURlYnVnVmFsdWU9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudXNlRWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VJbXBlcmF0aXZlSGFuZGxlPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gWigpLnVzZUltcGVyYXRpdmVIYW5kbGUoYSxiLGMpfTtcbmV4cG9ydHMudXNlTGF5b3V0RWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VMYXlvdXRFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VNZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VNZW1vKGEsYil9O2V4cG9ydHMudXNlUmVkdWNlcj1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIFooKS51c2VSZWR1Y2VyKGEsYixjKX07ZXhwb3J0cy51c2VSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIFooKS51c2VSZWYoYSl9O2V4cG9ydHMudXNlU3RhdGU9ZnVuY3Rpb24oYSl7cmV0dXJuIFooKS51c2VTdGF0ZShhKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTYuMTMuMFwiO1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4xMy4wXG4gKiByZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vKlxuIE1vZGVybml6ciAzLjAuMHByZSAoQ3VzdG9tIEJ1aWxkKSB8IE1JVFxuKi9cbid1c2Ugc3RyaWN0Jzt2YXIgYWE9cmVxdWlyZShcInJlYWN0XCIpLG49cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIikscj1yZXF1aXJlKFwic2NoZWR1bGVyXCIpO2Z1bmN0aW9uIHUoYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9aWYoIWFhKXRocm93IEVycm9yKHUoMjI3KSk7XG5mdW5jdGlvbiBiYShhLGIsYyxkLGUsZixnLGgsayl7dmFyIGw9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMsbCl9Y2F0Y2gobSl7dGhpcy5vbkVycm9yKG0pfX12YXIgZGE9ITEsZWE9bnVsbCxmYT0hMSxoYT1udWxsLGlhPXtvbkVycm9yOmZ1bmN0aW9uKGEpe2RhPSEwO2VhPWF9fTtmdW5jdGlvbiBqYShhLGIsYyxkLGUsZixnLGgsayl7ZGE9ITE7ZWE9bnVsbDtiYS5hcHBseShpYSxhcmd1bWVudHMpfWZ1bmN0aW9uIGthKGEsYixjLGQsZSxmLGcsaCxrKXtqYS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoZGEpe2lmKGRhKXt2YXIgbD1lYTtkYT0hMTtlYT1udWxsfWVsc2UgdGhyb3cgRXJyb3IodSgxOTgpKTtmYXx8KGZhPSEwLGhhPWwpfX12YXIgbGE9bnVsbCxtYT1udWxsLG5hPW51bGw7XG5mdW5jdGlvbiBvYShhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9bmEoYyk7a2EoZCxiLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH12YXIgcGE9YWEuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ7cGEuaGFzT3duUHJvcGVydHkoXCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyXCIpfHwocGEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcj17Y3VycmVudDpudWxsfSk7cGEuaGFzT3duUHJvcGVydHkoXCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZ1wiKXx8KHBhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnPXtzdXNwZW5zZTpudWxsfSk7XG52YXIgcWE9L14oLiopW1xcXFxcXC9dLyx2PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IscmE9dj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxzYT12P1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsdGE9dj9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsdWE9dj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsdmE9dj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsd2E9dj9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDkseGE9dj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCx5YT12P1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsemE9dj9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIsQWE9dj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsQmE9dj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTpcbjYwMTIwLENhPXY/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsRGE9dj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNixFYT12P1N5bWJvbC5mb3IoXCJyZWFjdC5ibG9ja1wiKTo2MDEyMSxGYT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gR2EoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPUZhJiZhW0ZhXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfWZ1bmN0aW9uIEhhKGEpe2lmKC0xPT09YS5fc3RhdHVzKXthLl9zdGF0dXM9MDt2YXIgYj1hLl9jdG9yO2I9YigpO2EuX3Jlc3VsdD1iO2IudGhlbihmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYj1iLmRlZmF1bHQsYS5fc3RhdHVzPTEsYS5fcmVzdWx0PWIpfSxmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYS5fc3RhdHVzPTIsYS5fcmVzdWx0PWIpfSl9fVxuZnVuY3Rpb24gSWEoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtzd2l0Y2goYSl7Y2FzZSB0YTpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSBzYTpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgdmE6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2UgdWE6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBBYTpyZXR1cm5cIlN1c3BlbnNlXCI7Y2FzZSBCYTpyZXR1cm5cIlN1c3BlbnNlTGlzdFwifWlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSB4YTpyZXR1cm5cIkNvbnRleHQuQ29uc3VtZXJcIjtjYXNlIHdhOnJldHVyblwiQ29udGV4dC5Qcm92aWRlclwiO2Nhc2UgemE6dmFyIGI9YS5yZW5kZXI7Yj1iLmRpc3BsYXlOYW1lfHxiLm5hbWV8fFwiXCI7cmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcIilcIjpcblwiRm9yd2FyZFJlZlwiKTtjYXNlIENhOnJldHVybiBJYShhLnR5cGUpO2Nhc2UgRWE6cmV0dXJuIElhKGEucmVuZGVyKTtjYXNlIERhOmlmKGE9MT09PWEuX3N0YXR1cz9hLl9yZXN1bHQ6bnVsbClyZXR1cm4gSWEoYSl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gSmEoYSl7dmFyIGI9XCJcIjtkb3thOnN3aXRjaChhLnRhZyl7Y2FzZSAzOmNhc2UgNDpjYXNlIDY6Y2FzZSA3OmNhc2UgMTA6Y2FzZSA5OnZhciBjPVwiXCI7YnJlYWsgYTtkZWZhdWx0OnZhciBkPWEuX2RlYnVnT3duZXIsZT1hLl9kZWJ1Z1NvdXJjZSxmPUlhKGEudHlwZSk7Yz1udWxsO2QmJihjPUlhKGQudHlwZSkpO2Q9ZjtmPVwiXCI7ZT9mPVwiIChhdCBcIitlLmZpbGVOYW1lLnJlcGxhY2UocWEsXCJcIikrXCI6XCIrZS5saW5lTnVtYmVyK1wiKVwiOmMmJihmPVwiIChjcmVhdGVkIGJ5IFwiK2MrXCIpXCIpO2M9XCJcXG4gICAgaW4gXCIrKGR8fFwiVW5rbm93blwiKStmfWIrPWM7YT1hLnJldHVybn13aGlsZShhKTtyZXR1cm4gYn12YXIgS2E9bnVsbCxMYT17fTtcbmZ1bmN0aW9uIE1hKCl7aWYoS2EpZm9yKHZhciBhIGluIExhKXt2YXIgYj1MYVthXSxjPUthLmluZGV4T2YoYSk7aWYoISgtMTxjKSl0aHJvdyBFcnJvcih1KDk2LGEpKTtpZighTmFbY10pe2lmKCFiLmV4dHJhY3RFdmVudHMpdGhyb3cgRXJyb3IodSg5NyxhKSk7TmFbY109YjtjPWIuZXZlbnRUeXBlcztmb3IodmFyIGQgaW4gYyl7dmFyIGU9dm9pZCAwO3ZhciBmPWNbZF0sZz1iLGg9ZDtpZihPYS5oYXNPd25Qcm9wZXJ0eShoKSl0aHJvdyBFcnJvcih1KDk5LGgpKTtPYVtoXT1mO3ZhciBrPWYucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM7aWYoayl7Zm9yKGUgaW4gaylrLmhhc093blByb3BlcnR5KGUpJiZQYShrW2VdLGcsaCk7ZT0hMH1lbHNlIGYucmVnaXN0cmF0aW9uTmFtZT8oUGEoZi5yZWdpc3RyYXRpb25OYW1lLGcsaCksZT0hMCk6ZT0hMTtpZighZSl0aHJvdyBFcnJvcih1KDk4LGQsYSkpO319fX1cbmZ1bmN0aW9uIFBhKGEsYixjKXtpZihRYVthXSl0aHJvdyBFcnJvcih1KDEwMCxhKSk7UWFbYV09YjtSYVthXT1iLmV2ZW50VHlwZXNbY10uZGVwZW5kZW5jaWVzfXZhciBOYT1bXSxPYT17fSxRYT17fSxSYT17fTtmdW5jdGlvbiBTYShhKXt2YXIgYj0hMSxjO2ZvcihjIGluIGEpaWYoYS5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9YVtjXTtpZighTGEuaGFzT3duUHJvcGVydHkoYyl8fExhW2NdIT09ZCl7aWYoTGFbY10pdGhyb3cgRXJyb3IodSgxMDIsYykpO0xhW2NdPWQ7Yj0hMH19YiYmTWEoKX12YXIgVGE9IShcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnR8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpLFVhPW51bGwsVmE9bnVsbCxXYT1udWxsO1xuZnVuY3Rpb24gWGEoYSl7aWYoYT1tYShhKSl7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIFVhKXRocm93IEVycm9yKHUoMjgwKSk7dmFyIGI9YS5zdGF0ZU5vZGU7YiYmKGI9bGEoYiksVWEoYS5zdGF0ZU5vZGUsYS50eXBlLGIpKX19ZnVuY3Rpb24gWWEoYSl7VmE/V2E/V2EucHVzaChhKTpXYT1bYV06VmE9YX1mdW5jdGlvbiBaYSgpe2lmKFZhKXt2YXIgYT1WYSxiPVdhO1dhPVZhPW51bGw7WGEoYSk7aWYoYilmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKVhhKGJbYV0pfX1mdW5jdGlvbiAkYShhLGIpe3JldHVybiBhKGIpfWZ1bmN0aW9uIGFiKGEsYixjLGQsZSl7cmV0dXJuIGEoYixjLGQsZSl9ZnVuY3Rpb24gYmIoKXt9dmFyIGNiPSRhLGRiPSExLGViPSExO2Z1bmN0aW9uIGZiKCl7aWYobnVsbCE9PVZhfHxudWxsIT09V2EpYmIoKSxaYSgpfVxuZnVuY3Rpb24gZ2IoYSxiLGMpe2lmKGViKXJldHVybiBhKGIsYyk7ZWI9ITA7dHJ5e3JldHVybiBjYihhLGIsYyl9ZmluYWxseXtlYj0hMSxmYigpfX12YXIgaGI9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLGliPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksamI9e30sa2I9e307XG5mdW5jdGlvbiBsYihhKXtpZihpYi5jYWxsKGtiLGEpKXJldHVybiEwO2lmKGliLmNhbGwoamIsYSkpcmV0dXJuITE7aWYoaGIudGVzdChhKSlyZXR1cm4ga2JbYV09ITA7amJbYV09ITA7cmV0dXJuITF9ZnVuY3Rpb24gbWIoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBuYihhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxtYihhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIEMoYSxiLGMsZCxlLGYpe3RoaXMuYWNjZXB0c0Jvb2xlYW5zPTI9PT1ifHwzPT09Ynx8ND09PWI7dGhpcy5hdHRyaWJ1dGVOYW1lPWQ7dGhpcy5hdHRyaWJ1dGVOYW1lc3BhY2U9ZTt0aGlzLm11c3RVc2VQcm9wZXJ0eT1jO3RoaXMucHJvcGVydHlOYW1lPWE7dGhpcy50eXBlPWI7dGhpcy5zYW5pdGl6ZVVSTD1mfXZhciBFPXt9O1xuXCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtFW2FdPW5ldyBDKGEsMCwhMSxhLG51bGwsITEpfSk7W1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO0VbYl09bmV3IEMoYiwxLCExLGFbMV0sbnVsbCwhMSl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtFW2FdPW5ldyBDKGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTtcbltcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJmb2N1c2FibGVcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtFW2FdPW5ldyBDKGEsMiwhMSxhLG51bGwsITEpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZGlzYWJsZVBpY3R1cmVJblBpY3R1cmUgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtFW2FdPW5ldyBDKGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTtcbltcImNoZWNrZWRcIixcIm11bHRpcGxlXCIsXCJtdXRlZFwiLFwic2VsZWN0ZWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtFW2FdPW5ldyBDKGEsMywhMCxhLG51bGwsITEpfSk7W1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtFW2FdPW5ldyBDKGEsNCwhMSxhLG51bGwsITEpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0VbYV09bmV3IEMoYSw2LCExLGEsbnVsbCwhMSl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0VbYV09bmV3IEMoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExKX0pO3ZhciBvYj0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIHBiKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKG9iLFxucGIpO0VbYl09bmV3IEMoYiwxLCExLGEsbnVsbCwhMSl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShvYixwYik7RVtiXT1uZXcgQyhiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMSl9KTtbXCJ4bWw6YmFzZVwiLFwieG1sOmxhbmdcIixcInhtbDpzcGFjZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShvYixwYik7RVtiXT1uZXcgQyhiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiLCExKX0pO1tcInRhYkluZGV4XCIsXCJjcm9zc09yaWdpblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0VbYV09bmV3IEMoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExKX0pO1xuRS54bGlua0hyZWY9bmV3IEMoXCJ4bGlua0hyZWZcIiwxLCExLFwieGxpbms6aHJlZlwiLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCEwKTtbXCJzcmNcIixcImhyZWZcIixcImFjdGlvblwiLFwiZm9ybUFjdGlvblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0VbYV09bmV3IEMoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCEwKX0pO1xuZnVuY3Rpb24gcWIoYSxiLGMsZCl7dmFyIGU9RS5oYXNPd25Qcm9wZXJ0eShiKT9FW2JdOm51bGw7dmFyIGY9bnVsbCE9PWU/MD09PWUudHlwZTpkPyExOiEoMjxiLmxlbmd0aCl8fFwib1wiIT09YlswXSYmXCJPXCIhPT1iWzBdfHxcIm5cIiE9PWJbMV0mJlwiTlwiIT09YlsxXT8hMTohMDtmfHwobmIoYixjLGUsZCkmJihjPW51bGwpLGR8fG51bGw9PT1lP2xiKGIpJiYobnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKTplLm11c3RVc2VQcm9wZXJ0eT9hW2UucHJvcGVydHlOYW1lXT1udWxsPT09Yz8zPT09ZS50eXBlPyExOlwiXCI6YzooYj1lLmF0dHJpYnV0ZU5hbWUsZD1lLmF0dHJpYnV0ZU5hbWVzcGFjZSxudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTooZT1lLnR5cGUsYz0zPT09ZXx8ND09PWUmJiEwPT09Yz9cIlwiOlwiXCIrYyxkP2Euc2V0QXR0cmlidXRlTlMoZCxiLGMpOmEuc2V0QXR0cmlidXRlKGIsYykpKSl9XG5mdW5jdGlvbiByYihhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcInVuZGVmaW5lZFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19ZnVuY3Rpb24gc2IoYSl7dmFyIGI9YS50eXBlO3JldHVybihhPWEubm9kZU5hbWUpJiZcImlucHV0XCI9PT1hLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1ifHxcInJhZGlvXCI9PT1iKX1cbmZ1bmN0aW9uIHRiKGEpe3ZhciBiPXNiKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpe3ZhciBlPWMuZ2V0LGY9Yy5zZXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtmLmNhbGwodGhpcyxhKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pO3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPVxubnVsbDtkZWxldGUgYVtiXX19fX1mdW5jdGlvbiB4YihhKXthLl92YWx1ZVRyYWNrZXJ8fChhLl92YWx1ZVRyYWNrZXI9dGIoYSkpfWZ1bmN0aW9uIHliKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPWEuX3ZhbHVlVHJhY2tlcjtpZighYilyZXR1cm4hMDt2YXIgYz1iLmdldFZhbHVlKCk7dmFyIGQ9XCJcIjthJiYoZD1zYihhKT9hLmNoZWNrZWQ/XCJ0cnVlXCI6XCJmYWxzZVwiOmEudmFsdWUpO2E9ZDtyZXR1cm4gYSE9PWM/KGIuc2V0VmFsdWUoYSksITApOiExfWZ1bmN0aW9uIHpiKGEsYil7dmFyIGM9Yi5jaGVja2VkO3JldHVybiBuKHt9LGIse2RlZmF1bHRDaGVja2VkOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLHZhbHVlOnZvaWQgMCxjaGVja2VkOm51bGwhPWM/YzphLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWR9KX1cbmZ1bmN0aW9uIEFiKGEsYil7dmFyIGM9bnVsbD09Yi5kZWZhdWx0VmFsdWU/XCJcIjpiLmRlZmF1bHRWYWx1ZSxkPW51bGwhPWIuY2hlY2tlZD9iLmNoZWNrZWQ6Yi5kZWZhdWx0Q2hlY2tlZDtjPXJiKG51bGwhPWIudmFsdWU/Yi52YWx1ZTpjKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxDaGVja2VkOmQsaW5pdGlhbFZhbHVlOmMsY29udHJvbGxlZDpcImNoZWNrYm94XCI9PT1iLnR5cGV8fFwicmFkaW9cIj09PWIudHlwZT9udWxsIT1iLmNoZWNrZWQ6bnVsbCE9Yi52YWx1ZX19ZnVuY3Rpb24gQmIoYSxiKXtiPWIuY2hlY2tlZDtudWxsIT1iJiZxYihhLFwiY2hlY2tlZFwiLGIsITEpfVxuZnVuY3Rpb24gQ2IoYSxiKXtCYihhLGIpO3ZhciBjPXJiKGIudmFsdWUpLGQ9Yi50eXBlO2lmKG51bGwhPWMpaWYoXCJudW1iZXJcIj09PWQpe2lmKDA9PT1jJiZcIlwiPT09YS52YWx1ZXx8YS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7ZWxzZSBpZihcInN1Ym1pdFwiPT09ZHx8XCJyZXNldFwiPT09ZCl7YS5yZW1vdmVBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtyZXR1cm59Yi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpP0RiKGEsYi50eXBlLGMpOmIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikmJkRiKGEsYi50eXBlLHJiKGIuZGVmYXVsdFZhbHVlKSk7bnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gRWIoYSxiLGMpe2lmKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSl7dmFyIGQ9Yi50eXBlO2lmKCEoXCJzdWJtaXRcIiE9PWQmJlwicmVzZXRcIiE9PWR8fHZvaWQgMCE9PWIudmFsdWUmJm51bGwhPT1iLnZhbHVlKSlyZXR1cm47Yj1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU7Y3x8Yj09PWEudmFsdWV8fChhLnZhbHVlPWIpO2EuZGVmYXVsdFZhbHVlPWJ9Yz1hLm5hbWU7XCJcIiE9PWMmJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIERiKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8YS5vd25lckRvY3VtZW50LmFjdGl2ZUVsZW1lbnQhPT1hKW51bGw9PWM/YS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlOmEuZGVmYXVsdFZhbHVlIT09XCJcIitjJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitjKX1mdW5jdGlvbiBGYihhKXt2YXIgYj1cIlwiO2FhLkNoaWxkcmVuLmZvckVhY2goYSxmdW5jdGlvbihhKXtudWxsIT1hJiYoYis9YSl9KTtyZXR1cm4gYn1mdW5jdGlvbiBHYihhLGIpe2E9bih7Y2hpbGRyZW46dm9pZCAwfSxiKTtpZihiPUZiKGIuY2hpbGRyZW4pKWEuY2hpbGRyZW49YjtyZXR1cm4gYX1cbmZ1bmN0aW9uIEhiKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIityYihjKTtiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxuZnVuY3Rpb24gSWIoYSxiKXtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXRocm93IEVycm9yKHUoOTEpKTtyZXR1cm4gbih7fSxiLHt2YWx1ZTp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCxjaGlsZHJlbjpcIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWV9KX1mdW5jdGlvbiBKYihhLGIpe3ZhciBjPWIudmFsdWU7aWYobnVsbD09Yyl7Yz1iLmNoaWxkcmVuO2I9Yi5kZWZhdWx0VmFsdWU7aWYobnVsbCE9Yyl7aWYobnVsbCE9Yil0aHJvdyBFcnJvcih1KDkyKSk7aWYoQXJyYXkuaXNBcnJheShjKSl7aWYoISgxPj1jLmxlbmd0aCkpdGhyb3cgRXJyb3IodSg5MykpO2M9Y1swXX1iPWN9bnVsbD09YiYmKGI9XCJcIik7Yz1ifWEuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOnJiKGMpfX1cbmZ1bmN0aW9uIEtiKGEsYil7dmFyIGM9cmIoYi52YWx1ZSksZD1yYihiLmRlZmF1bHRWYWx1ZSk7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmYS5kZWZhdWx0VmFsdWUhPT1jJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWQmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2QpfWZ1bmN0aW9uIExiKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJlwiXCIhPT1iJiZudWxsIT09YiYmKGEudmFsdWU9Yil9dmFyIE1iPXtodG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiLG1hdGhtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIixzdmc6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wifTtcbmZ1bmN0aW9uIE5iKGEpe3N3aXRjaChhKXtjYXNlIFwic3ZnXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO2Nhc2UgXCJtYXRoXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCI7ZGVmYXVsdDpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIn19ZnVuY3Rpb24gT2IoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP05iKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIFBiLFFiPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihhLm5hbWVzcGFjZVVSSSE9PU1iLnN2Z3x8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNle1BiPVBifHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1BiLmlubmVySFRNTD1cIjxzdmc+XCIrYi52YWx1ZU9mKCkudG9TdHJpbmcoKStcIjwvc3ZnPlwiO2ZvcihiPVBiLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcbmZ1bmN0aW9uIFJiKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmMz09PWMubm9kZVR5cGUpe2Mubm9kZVZhbHVlPWI7cmV0dXJufX1hLnRleHRDb250ZW50PWJ9ZnVuY3Rpb24gU2IoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtyZXR1cm4gY312YXIgVGI9e2FuaW1hdGlvbmVuZDpTYihcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uRW5kXCIpLGFuaW1hdGlvbml0ZXJhdGlvbjpTYihcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uSXRlcmF0aW9uXCIpLGFuaW1hdGlvbnN0YXJ0OlNiKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25TdGFydFwiKSx0cmFuc2l0aW9uZW5kOlNiKFwiVHJhbnNpdGlvblwiLFwiVHJhbnNpdGlvbkVuZFwiKX0sVWI9e30sVmI9e307XG5UYSYmKFZiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUsXCJBbmltYXRpb25FdmVudFwiaW4gd2luZG93fHwoZGVsZXRlIFRiLmFuaW1hdGlvbmVuZC5hbmltYXRpb24sZGVsZXRlIFRiLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sZGVsZXRlIFRiLmFuaW1hdGlvbnN0YXJ0LmFuaW1hdGlvbiksXCJUcmFuc2l0aW9uRXZlbnRcImluIHdpbmRvd3x8ZGVsZXRlIFRiLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7ZnVuY3Rpb24gV2IoYSl7aWYoVWJbYV0pcmV0dXJuIFViW2FdO2lmKCFUYlthXSlyZXR1cm4gYTt2YXIgYj1UYlthXSxjO2ZvcihjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSYmYyBpbiBWYilyZXR1cm4gVWJbYV09YltjXTtyZXR1cm4gYX1cbnZhciBYYj1XYihcImFuaW1hdGlvbmVuZFwiKSxZYj1XYihcImFuaW1hdGlvbml0ZXJhdGlvblwiKSxaYj1XYihcImFuaW1hdGlvbnN0YXJ0XCIpLCRiPVdiKFwidHJhbnNpdGlvbmVuZFwiKSxhYz1cImFib3J0IGNhbnBsYXkgY2FucGxheXRocm91Z2ggZHVyYXRpb25jaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZGVkZGF0YSBsb2FkZWRtZXRhZGF0YSBsb2Fkc3RhcnQgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVjaGFuZ2Ugc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWV1cGRhdGUgdm9sdW1lY2hhbmdlIHdhaXRpbmdcIi5zcGxpdChcIiBcIiksYmM9bmV3IChcImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcCk7ZnVuY3Rpb24gY2MoYSl7dmFyIGI9YmMuZ2V0KGEpO3ZvaWQgMD09PWImJihiPW5ldyBNYXAsYmMuc2V0KGEsYikpO3JldHVybiBifVxuZnVuY3Rpb24gZGMoYSl7dmFyIGI9YSxjPWE7aWYoYS5hbHRlcm5hdGUpZm9yKDtiLnJldHVybjspYj1iLnJldHVybjtlbHNle2E9YjtkbyBiPWEsMCE9PShiLmVmZmVjdFRhZyYxMDI2KSYmKGM9Yi5yZXR1cm4pLGE9Yi5yZXR1cm47d2hpbGUoYSl9cmV0dXJuIDM9PT1iLnRhZz9jOm51bGx9ZnVuY3Rpb24gZWMoYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9YS5tZW1vaXplZFN0YXRlO251bGw9PT1iJiYoYT1hLmFsdGVybmF0ZSxudWxsIT09YSYmKGI9YS5tZW1vaXplZFN0YXRlKSk7aWYobnVsbCE9PWIpcmV0dXJuIGIuZGVoeWRyYXRlZH1yZXR1cm4gbnVsbH1mdW5jdGlvbiBmYyhhKXtpZihkYyhhKSE9PWEpdGhyb3cgRXJyb3IodSgxODgpKTt9XG5mdW5jdGlvbiBnYyhhKXt2YXIgYj1hLmFsdGVybmF0ZTtpZighYil7Yj1kYyhhKTtpZihudWxsPT09Yil0aHJvdyBFcnJvcih1KDE4OCkpO3JldHVybiBiIT09YT9udWxsOmF9Zm9yKHZhciBjPWEsZD1iOzspe3ZhciBlPWMucmV0dXJuO2lmKG51bGw9PT1lKWJyZWFrO3ZhciBmPWUuYWx0ZXJuYXRlO2lmKG51bGw9PT1mKXtkPWUucmV0dXJuO2lmKG51bGwhPT1kKXtjPWQ7Y29udGludWV9YnJlYWt9aWYoZS5jaGlsZD09PWYuY2hpbGQpe2ZvcihmPWUuY2hpbGQ7Zjspe2lmKGY9PT1jKXJldHVybiBmYyhlKSxhO2lmKGY9PT1kKXJldHVybiBmYyhlKSxiO2Y9Zi5zaWJsaW5nfXRocm93IEVycm9yKHUoMTg4KSk7fWlmKGMucmV0dXJuIT09ZC5yZXR1cm4pYz1lLGQ9ZjtlbHNle2Zvcih2YXIgZz0hMSxoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PVxuYyl7Zz0hMDtjPWY7ZD1lO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZjtjPWU7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpdGhyb3cgRXJyb3IodSgxODkpKTt9fWlmKGMuYWx0ZXJuYXRlIT09ZCl0aHJvdyBFcnJvcih1KDE5MCkpO31pZigzIT09Yy50YWcpdGhyb3cgRXJyb3IodSgxODgpKTtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIGhjKGEpe2E9Z2MoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkLnJldHVybj1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBpYyhhLGIpe2lmKG51bGw9PWIpdGhyb3cgRXJyb3IodSgzMCkpO2lmKG51bGw9PWEpcmV0dXJuIGI7aWYoQXJyYXkuaXNBcnJheShhKSl7aWYoQXJyYXkuaXNBcnJheShiKSlyZXR1cm4gYS5wdXNoLmFwcGx5KGEsYiksYTthLnB1c2goYik7cmV0dXJuIGF9cmV0dXJuIEFycmF5LmlzQXJyYXkoYik/W2FdLmNvbmNhdChiKTpbYSxiXX1mdW5jdGlvbiBqYyhhLGIsYyl7QXJyYXkuaXNBcnJheShhKT9hLmZvckVhY2goYixjKTphJiZiLmNhbGwoYyxhKX12YXIga2M9bnVsbDtcbmZ1bmN0aW9uIGxjKGEpe2lmKGEpe3ZhciBiPWEuX2Rpc3BhdGNoTGlzdGVuZXJzLGM9YS5fZGlzcGF0Y2hJbnN0YW5jZXM7aWYoQXJyYXkuaXNBcnJheShiKSlmb3IodmFyIGQ9MDtkPGIubGVuZ3RoJiYhYS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpO2QrKylvYShhLGJbZF0sY1tkXSk7ZWxzZSBiJiZvYShhLGIsYyk7YS5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbDthLl9kaXNwYXRjaEluc3RhbmNlcz1udWxsO2EuaXNQZXJzaXN0ZW50KCl8fGEuY29uc3RydWN0b3IucmVsZWFzZShhKX19ZnVuY3Rpb24gbWMoYSl7bnVsbCE9PWEmJihrYz1pYyhrYyxhKSk7YT1rYztrYz1udWxsO2lmKGEpe2pjKGEsbGMpO2lmKGtjKXRocm93IEVycm9yKHUoOTUpKTtpZihmYSl0aHJvdyBhPWhhLGZhPSExLGhhPW51bGwsYTt9fVxuZnVuY3Rpb24gbmMoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfWZ1bmN0aW9uIG9jKGEpe2lmKCFUYSlyZXR1cm4hMTthPVwib25cIithO3ZhciBiPWEgaW4gZG9jdW1lbnQ7Ynx8KGI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxiLnNldEF0dHJpYnV0ZShhLFwicmV0dXJuO1wiKSxiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBiW2FdKTtyZXR1cm4gYn12YXIgcGM9W107ZnVuY3Rpb24gcWMoYSl7YS50b3BMZXZlbFR5cGU9bnVsbDthLm5hdGl2ZUV2ZW50PW51bGw7YS50YXJnZXRJbnN0PW51bGw7YS5hbmNlc3RvcnMubGVuZ3RoPTA7MTA+cGMubGVuZ3RoJiZwYy5wdXNoKGEpfVxuZnVuY3Rpb24gcmMoYSxiLGMsZCl7aWYocGMubGVuZ3RoKXt2YXIgZT1wYy5wb3AoKTtlLnRvcExldmVsVHlwZT1hO2UuZXZlbnRTeXN0ZW1GbGFncz1kO2UubmF0aXZlRXZlbnQ9YjtlLnRhcmdldEluc3Q9YztyZXR1cm4gZX1yZXR1cm57dG9wTGV2ZWxUeXBlOmEsZXZlbnRTeXN0ZW1GbGFnczpkLG5hdGl2ZUV2ZW50OmIsdGFyZ2V0SW5zdDpjLGFuY2VzdG9yczpbXX19XG5mdW5jdGlvbiBzYyhhKXt2YXIgYj1hLnRhcmdldEluc3QsYz1iO2Rve2lmKCFjKXthLmFuY2VzdG9ycy5wdXNoKGMpO2JyZWFrfXZhciBkPWM7aWYoMz09PWQudGFnKWQ9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlbHNle2Zvcig7ZC5yZXR1cm47KWQ9ZC5yZXR1cm47ZD0zIT09ZC50YWc/bnVsbDpkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvfWlmKCFkKWJyZWFrO2I9Yy50YWc7NSE9PWImJjYhPT1ifHxhLmFuY2VzdG9ycy5wdXNoKGMpO2M9dGMoZCl9d2hpbGUoYyk7Zm9yKGM9MDtjPGEuYW5jZXN0b3JzLmxlbmd0aDtjKyspe2I9YS5hbmNlc3RvcnNbY107dmFyIGU9bmMoYS5uYXRpdmVFdmVudCk7ZD1hLnRvcExldmVsVHlwZTt2YXIgZj1hLm5hdGl2ZUV2ZW50LGc9YS5ldmVudFN5c3RlbUZsYWdzOzA9PT1jJiYoZ3w9NjQpO2Zvcih2YXIgaD1udWxsLGs9MDtrPE5hLmxlbmd0aDtrKyspe3ZhciBsPU5hW2tdO2wmJihsPWwuZXh0cmFjdEV2ZW50cyhkLGIsZixlLGcpKSYmKGg9XG5pYyhoLGwpKX1tYyhoKX19ZnVuY3Rpb24gdWMoYSxiLGMpe2lmKCFjLmhhcyhhKSl7c3dpdGNoKGEpe2Nhc2UgXCJzY3JvbGxcIjp2YyhiLFwic2Nyb2xsXCIsITApO2JyZWFrO2Nhc2UgXCJmb2N1c1wiOmNhc2UgXCJibHVyXCI6dmMoYixcImZvY3VzXCIsITApO3ZjKGIsXCJibHVyXCIsITApO2Muc2V0KFwiYmx1clwiLG51bGwpO2Muc2V0KFwiZm9jdXNcIixudWxsKTticmVhaztjYXNlIFwiY2FuY2VsXCI6Y2FzZSBcImNsb3NlXCI6b2MoYSkmJnZjKGIsYSwhMCk7YnJlYWs7Y2FzZSBcImludmFsaWRcIjpjYXNlIFwic3VibWl0XCI6Y2FzZSBcInJlc2V0XCI6YnJlYWs7ZGVmYXVsdDotMT09PWFjLmluZGV4T2YoYSkmJkYoYSxiKX1jLnNldChhLG51bGwpfX1cbnZhciB3Yyx4Yyx5Yyx6Yz0hMSxBYz1bXSxCYz1udWxsLENjPW51bGwsRGM9bnVsbCxFYz1uZXcgTWFwLEZjPW5ldyBNYXAsR2M9W10sSGM9XCJtb3VzZWRvd24gbW91c2V1cCB0b3VjaGNhbmNlbCB0b3VjaGVuZCB0b3VjaHN0YXJ0IGF1eGNsaWNrIGRibGNsaWNrIHBvaW50ZXJjYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlcnVwIGRyYWdlbmQgZHJhZ3N0YXJ0IGRyb3AgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIGlucHV0IHRleHRJbnB1dCBjbG9zZSBjYW5jZWwgY29weSBjdXQgcGFzdGUgY2xpY2sgY2hhbmdlIGNvbnRleHRtZW51IHJlc2V0IHN1Ym1pdFwiLnNwbGl0KFwiIFwiKSxJYz1cImZvY3VzIGJsdXIgZHJhZ2VudGVyIGRyYWdsZWF2ZSBtb3VzZW92ZXIgbW91c2VvdXQgcG9pbnRlcm92ZXIgcG9pbnRlcm91dCBnb3Rwb2ludGVyY2FwdHVyZSBsb3N0cG9pbnRlcmNhcHR1cmVcIi5zcGxpdChcIiBcIik7XG5mdW5jdGlvbiBKYyhhLGIpe3ZhciBjPWNjKGIpO0hjLmZvckVhY2goZnVuY3Rpb24oYSl7dWMoYSxiLGMpfSk7SWMuZm9yRWFjaChmdW5jdGlvbihhKXt1YyhhLGIsYyl9KX1mdW5jdGlvbiBLYyhhLGIsYyxkLGUpe3JldHVybntibG9ja2VkT246YSx0b3BMZXZlbFR5cGU6YixldmVudFN5c3RlbUZsYWdzOmN8MzIsbmF0aXZlRXZlbnQ6ZSxjb250YWluZXI6ZH19XG5mdW5jdGlvbiBMYyhhLGIpe3N3aXRjaChhKXtjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOkJjPW51bGw7YnJlYWs7Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnbGVhdmVcIjpDYz1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwibW91c2VvdXRcIjpEYz1udWxsO2JyZWFrO2Nhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVyb3V0XCI6RWMuZGVsZXRlKGIucG9pbnRlcklkKTticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6RmMuZGVsZXRlKGIucG9pbnRlcklkKX19ZnVuY3Rpb24gTWMoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hfHxhLm5hdGl2ZUV2ZW50IT09ZilyZXR1cm4gYT1LYyhiLGMsZCxlLGYpLG51bGwhPT1iJiYoYj1OYyhiKSxudWxsIT09YiYmeGMoYikpLGE7YS5ldmVudFN5c3RlbUZsYWdzfD1kO3JldHVybiBhfVxuZnVuY3Rpb24gT2MoYSxiLGMsZCxlKXtzd2l0Y2goYil7Y2FzZSBcImZvY3VzXCI6cmV0dXJuIEJjPU1jKEJjLGEsYixjLGQsZSksITA7Y2FzZSBcImRyYWdlbnRlclwiOnJldHVybiBDYz1NYyhDYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJtb3VzZW92ZXJcIjpyZXR1cm4gRGM9TWMoRGMsYSxiLGMsZCxlKSwhMDtjYXNlIFwicG9pbnRlcm92ZXJcIjp2YXIgZj1lLnBvaW50ZXJJZDtFYy5zZXQoZixNYyhFYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSk7cmV0dXJuITA7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6cmV0dXJuIGY9ZS5wb2ludGVySWQsRmMuc2V0KGYsTWMoRmMuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpLCEwfXJldHVybiExfVxuZnVuY3Rpb24gUGMoYSl7dmFyIGI9dGMoYS50YXJnZXQpO2lmKG51bGwhPT1iKXt2YXIgYz1kYyhiKTtpZihudWxsIT09YylpZihiPWMudGFnLDEzPT09Yil7aWYoYj1lYyhjKSxudWxsIT09Yil7YS5ibG9ja2VkT249YjtyLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShhLnByaW9yaXR5LGZ1bmN0aW9uKCl7eWMoYyl9KTtyZXR1cm59fWVsc2UgaWYoMz09PWImJmMuc3RhdGVOb2RlLmh5ZHJhdGUpe2EuYmxvY2tlZE9uPTM9PT1jLnRhZz9jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7cmV0dXJufX1hLmJsb2NrZWRPbj1udWxsfWZ1bmN0aW9uIFFjKGEpe2lmKG51bGwhPT1hLmJsb2NrZWRPbilyZXR1cm4hMTt2YXIgYj1SYyhhLnRvcExldmVsVHlwZSxhLmV2ZW50U3lzdGVtRmxhZ3MsYS5jb250YWluZXIsYS5uYXRpdmVFdmVudCk7aWYobnVsbCE9PWIpe3ZhciBjPU5jKGIpO251bGwhPT1jJiZ4YyhjKTthLmJsb2NrZWRPbj1iO3JldHVybiExfXJldHVybiEwfVxuZnVuY3Rpb24gU2MoYSxiLGMpe1FjKGEpJiZjLmRlbGV0ZShiKX1mdW5jdGlvbiBUYygpe2Zvcih6Yz0hMTswPEFjLmxlbmd0aDspe3ZhciBhPUFjWzBdO2lmKG51bGwhPT1hLmJsb2NrZWRPbil7YT1OYyhhLmJsb2NrZWRPbik7bnVsbCE9PWEmJndjKGEpO2JyZWFrfXZhciBiPVJjKGEudG9wTGV2ZWxUeXBlLGEuZXZlbnRTeXN0ZW1GbGFncyxhLmNvbnRhaW5lcixhLm5hdGl2ZUV2ZW50KTtudWxsIT09Yj9hLmJsb2NrZWRPbj1iOkFjLnNoaWZ0KCl9bnVsbCE9PUJjJiZRYyhCYykmJihCYz1udWxsKTtudWxsIT09Q2MmJlFjKENjKSYmKENjPW51bGwpO251bGwhPT1EYyYmUWMoRGMpJiYoRGM9bnVsbCk7RWMuZm9yRWFjaChTYyk7RmMuZm9yRWFjaChTYyl9ZnVuY3Rpb24gVWMoYSxiKXthLmJsb2NrZWRPbj09PWImJihhLmJsb2NrZWRPbj1udWxsLHpjfHwoemM9ITAsci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrKHIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksVGMpKSl9XG5mdW5jdGlvbiBWYyhhKXtmdW5jdGlvbiBiKGIpe3JldHVybiBVYyhiLGEpfWlmKDA8QWMubGVuZ3RoKXtVYyhBY1swXSxhKTtmb3IodmFyIGM9MTtjPEFjLmxlbmd0aDtjKyspe3ZhciBkPUFjW2NdO2QuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpfX1udWxsIT09QmMmJlVjKEJjLGEpO251bGwhPT1DYyYmVWMoQ2MsYSk7bnVsbCE9PURjJiZVYyhEYyxhKTtFYy5mb3JFYWNoKGIpO0ZjLmZvckVhY2goYik7Zm9yKGM9MDtjPEdjLmxlbmd0aDtjKyspZD1HY1tjXSxkLmJsb2NrZWRPbj09PWEmJihkLmJsb2NrZWRPbj1udWxsKTtmb3IoOzA8R2MubGVuZ3RoJiYoYz1HY1swXSxudWxsPT09Yy5ibG9ja2VkT24pOylQYyhjKSxudWxsPT09Yy5ibG9ja2VkT24mJkdjLnNoaWZ0KCl9XG52YXIgV2M9e30sWWM9bmV3IE1hcCxaYz1uZXcgTWFwLCRjPVtcImFib3J0XCIsXCJhYm9ydFwiLFhiLFwiYW5pbWF0aW9uRW5kXCIsWWIsXCJhbmltYXRpb25JdGVyYXRpb25cIixaYixcImFuaW1hdGlvblN0YXJ0XCIsXCJjYW5wbGF5XCIsXCJjYW5QbGF5XCIsXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIixcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiLFwiZW1wdGllZFwiLFwiZW1wdGllZFwiLFwiZW5jcnlwdGVkXCIsXCJlbmNyeXB0ZWRcIixcImVuZGVkXCIsXCJlbmRlZFwiLFwiZXJyb3JcIixcImVycm9yXCIsXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIixcImxvYWRcIixcImxvYWRcIixcImxvYWRlZGRhdGFcIixcImxvYWRlZERhdGFcIixcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiLFwibG9hZHN0YXJ0XCIsXCJsb2FkU3RhcnRcIixcImxvc3Rwb2ludGVyY2FwdHVyZVwiLFwibG9zdFBvaW50ZXJDYXB0dXJlXCIsXCJwbGF5aW5nXCIsXCJwbGF5aW5nXCIsXCJwcm9ncmVzc1wiLFwicHJvZ3Jlc3NcIixcInNlZWtpbmdcIixcblwic2Vla2luZ1wiLFwic3RhbGxlZFwiLFwic3RhbGxlZFwiLFwic3VzcGVuZFwiLFwic3VzcGVuZFwiLFwidGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiLCRiLFwidHJhbnNpdGlvbkVuZFwiLFwid2FpdGluZ1wiLFwid2FpdGluZ1wiXTtmdW5jdGlvbiBhZChhLGIpe2Zvcih2YXIgYz0wO2M8YS5sZW5ndGg7Yys9Mil7dmFyIGQ9YVtjXSxlPWFbYysxXSxmPVwib25cIisoZVswXS50b1VwcGVyQ2FzZSgpK2Uuc2xpY2UoMSkpO2Y9e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOmYsY2FwdHVyZWQ6ZitcIkNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltkXSxldmVudFByaW9yaXR5OmJ9O1pjLnNldChkLGIpO1ljLnNldChkLGYpO1djW2VdPWZ9fVxuYWQoXCJibHVyIGJsdXIgY2FuY2VsIGNhbmNlbCBjbGljayBjbGljayBjbG9zZSBjbG9zZSBjb250ZXh0bWVudSBjb250ZXh0TWVudSBjb3B5IGNvcHkgY3V0IGN1dCBhdXhjbGljayBhdXhDbGljayBkYmxjbGljayBkb3VibGVDbGljayBkcmFnZW5kIGRyYWdFbmQgZHJhZ3N0YXJ0IGRyYWdTdGFydCBkcm9wIGRyb3AgZm9jdXMgZm9jdXMgaW5wdXQgaW5wdXQgaW52YWxpZCBpbnZhbGlkIGtleWRvd24ga2V5RG93biBrZXlwcmVzcyBrZXlQcmVzcyBrZXl1cCBrZXlVcCBtb3VzZWRvd24gbW91c2VEb3duIG1vdXNldXAgbW91c2VVcCBwYXN0ZSBwYXN0ZSBwYXVzZSBwYXVzZSBwbGF5IHBsYXkgcG9pbnRlcmNhbmNlbCBwb2ludGVyQ2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJEb3duIHBvaW50ZXJ1cCBwb2ludGVyVXAgcmF0ZWNoYW5nZSByYXRlQ2hhbmdlIHJlc2V0IHJlc2V0IHNlZWtlZCBzZWVrZWQgc3VibWl0IHN1Ym1pdCB0b3VjaGNhbmNlbCB0b3VjaENhbmNlbCB0b3VjaGVuZCB0b3VjaEVuZCB0b3VjaHN0YXJ0IHRvdWNoU3RhcnQgdm9sdW1lY2hhbmdlIHZvbHVtZUNoYW5nZVwiLnNwbGl0KFwiIFwiKSwwKTtcbmFkKFwiZHJhZyBkcmFnIGRyYWdlbnRlciBkcmFnRW50ZXIgZHJhZ2V4aXQgZHJhZ0V4aXQgZHJhZ2xlYXZlIGRyYWdMZWF2ZSBkcmFnb3ZlciBkcmFnT3ZlciBtb3VzZW1vdmUgbW91c2VNb3ZlIG1vdXNlb3V0IG1vdXNlT3V0IG1vdXNlb3ZlciBtb3VzZU92ZXIgcG9pbnRlcm1vdmUgcG9pbnRlck1vdmUgcG9pbnRlcm91dCBwb2ludGVyT3V0IHBvaW50ZXJvdmVyIHBvaW50ZXJPdmVyIHNjcm9sbCBzY3JvbGwgdG9nZ2xlIHRvZ2dsZSB0b3VjaG1vdmUgdG91Y2hNb3ZlIHdoZWVsIHdoZWVsXCIuc3BsaXQoXCIgXCIpLDEpO2FkKCRjLDIpO2Zvcih2YXIgYmQ9XCJjaGFuZ2Ugc2VsZWN0aW9uY2hhbmdlIHRleHRJbnB1dCBjb21wb3NpdGlvbnN0YXJ0IGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9udXBkYXRlXCIuc3BsaXQoXCIgXCIpLGNkPTA7Y2Q8YmQubGVuZ3RoO2NkKyspWmMuc2V0KGJkW2NkXSwwKTtcbnZhciBkZD1yLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LGVkPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5LGZkPSEwO2Z1bmN0aW9uIEYoYSxiKXt2YyhiLGEsITEpfWZ1bmN0aW9uIHZjKGEsYixjKXt2YXIgZD1aYy5nZXQoYik7c3dpdGNoKHZvaWQgMD09PWQ/MjpkKXtjYXNlIDA6ZD1nZC5iaW5kKG51bGwsYiwxLGEpO2JyZWFrO2Nhc2UgMTpkPWhkLmJpbmQobnVsbCxiLDEsYSk7YnJlYWs7ZGVmYXVsdDpkPWlkLmJpbmQobnVsbCxiLDEsYSl9Yz9hLmFkZEV2ZW50TGlzdGVuZXIoYixkLCEwKTphLmFkZEV2ZW50TGlzdGVuZXIoYixkLCExKX1mdW5jdGlvbiBnZChhLGIsYyxkKXtkYnx8YmIoKTt2YXIgZT1pZCxmPWRiO2RiPSEwO3RyeXthYihlLGEsYixjLGQpfWZpbmFsbHl7KGRiPWYpfHxmYigpfX1mdW5jdGlvbiBoZChhLGIsYyxkKXtlZChkZCxpZC5iaW5kKG51bGwsYSxiLGMsZCkpfVxuZnVuY3Rpb24gaWQoYSxiLGMsZCl7aWYoZmQpaWYoMDxBYy5sZW5ndGgmJi0xPEhjLmluZGV4T2YoYSkpYT1LYyhudWxsLGEsYixjLGQpLEFjLnB1c2goYSk7ZWxzZXt2YXIgZT1SYyhhLGIsYyxkKTtpZihudWxsPT09ZSlMYyhhLGQpO2Vsc2UgaWYoLTE8SGMuaW5kZXhPZihhKSlhPUtjKGUsYSxiLGMsZCksQWMucHVzaChhKTtlbHNlIGlmKCFPYyhlLGEsYixjLGQpKXtMYyhhLGQpO2E9cmMoYSxkLG51bGwsYik7dHJ5e2diKHNjLGEpfWZpbmFsbHl7cWMoYSl9fX19XG5mdW5jdGlvbiBSYyhhLGIsYyxkKXtjPW5jKGQpO2M9dGMoYyk7aWYobnVsbCE9PWMpe3ZhciBlPWRjKGMpO2lmKG51bGw9PT1lKWM9bnVsbDtlbHNle3ZhciBmPWUudGFnO2lmKDEzPT09Zil7Yz1lYyhlKTtpZihudWxsIT09YylyZXR1cm4gYztjPW51bGx9ZWxzZSBpZigzPT09Zil7aWYoZS5zdGF0ZU5vZGUuaHlkcmF0ZSlyZXR1cm4gMz09PWUudGFnP2Uuc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtjPW51bGx9ZWxzZSBlIT09YyYmKGM9bnVsbCl9fWE9cmMoYSxkLGMsYik7dHJ5e2diKHNjLGEpfWZpbmFsbHl7cWMoYSl9cmV0dXJuIG51bGx9XG52YXIgamQ9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZEFyZWE6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwLGZpbGxPcGFjaXR5OiEwLFxuZmxvb2RPcGFjaXR5OiEwLHN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0sa2Q9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKGpkKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe2tkLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7amRbYl09amRbYV19KX0pO2Z1bmN0aW9uIGxkKGEsYixjKXtyZXR1cm4gbnVsbD09Ynx8XCJib29sZWFuXCI9PT10eXBlb2YgYnx8XCJcIj09PWI/XCJcIjpjfHxcIm51bWJlclwiIT09dHlwZW9mIGJ8fDA9PT1ifHxqZC5oYXNPd25Qcm9wZXJ0eShhKSYmamRbYV0/KFwiXCIrYikudHJpbSgpOmIrXCJweFwifVxuZnVuY3Rpb24gbWQoYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpLGU9bGQoYyxiW2NdLGQpO1wiZmxvYXRcIj09PWMmJihjPVwiY3NzRmxvYXRcIik7ZD9hLnNldFByb3BlcnR5KGMsZSk6YVtjXT1lfX12YXIgbmQ9bih7bWVudWl0ZW06ITB9LHthcmVhOiEwLGJhc2U6ITAsYnI6ITAsY29sOiEwLGVtYmVkOiEwLGhyOiEwLGltZzohMCxpbnB1dDohMCxrZXlnZW46ITAsbGluazohMCxtZXRhOiEwLHBhcmFtOiEwLHNvdXJjZTohMCx0cmFjazohMCx3YnI6ITB9KTtcbmZ1bmN0aW9uIG9kKGEsYil7aWYoYil7aWYobmRbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcih1KDEzNyxhLFwiXCIpKTtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXtpZihudWxsIT1iLmNoaWxkcmVuKXRocm93IEVycm9yKHUoNjApKTtpZighKFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmXCJfX2h0bWxcImluIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpKXRocm93IEVycm9yKHUoNjEpKTt9aWYobnVsbCE9Yi5zdHlsZSYmXCJvYmplY3RcIiE9PXR5cGVvZiBiLnN0eWxlKXRocm93IEVycm9yKHUoNjIsXCJcIikpO319XG5mdW5jdGlvbiBwZChhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19dmFyIHFkPU1iLmh0bWw7ZnVuY3Rpb24gcmQoYSxiKXthPTk9PT1hLm5vZGVUeXBlfHwxMT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQ7dmFyIGM9Y2MoYSk7Yj1SYVtiXTtmb3IodmFyIGQ9MDtkPGIubGVuZ3RoO2QrKyl1YyhiW2RdLGEsYyl9ZnVuY3Rpb24gc2QoKXt9XG5mdW5jdGlvbiB0ZChhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19ZnVuY3Rpb24gdWQoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfWZ1bmN0aW9uIHZkKGEsYil7dmFyIGM9dWQoYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoMz09PWMubm9kZVR5cGUpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9dWQoYyl9fVxuZnVuY3Rpb24gd2QoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT93ZChhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9ZnVuY3Rpb24geGQoKXtmb3IodmFyIGE9d2luZG93LGI9dGQoKTtiIGluc3RhbmNlb2YgYS5IVE1MSUZyYW1lRWxlbWVudDspe3RyeXt2YXIgYz1cInN0cmluZ1wiPT09dHlwZW9mIGIuY29udGVudFdpbmRvdy5sb2NhdGlvbi5ocmVmfWNhdGNoKGQpe2M9ITF9aWYoYylhPWIuY29udGVudFdpbmRvdztlbHNlIGJyZWFrO2I9dGQoYS5kb2N1bWVudCl9cmV0dXJuIGJ9XG5mdW5jdGlvbiB5ZChhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfXZhciB6ZD1cIiRcIixBZD1cIi8kXCIsQmQ9XCIkP1wiLENkPVwiJCFcIixEZD1udWxsLEVkPW51bGw7ZnVuY3Rpb24gRmQoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjpyZXR1cm4hIWIuYXV0b0ZvY3VzfXJldHVybiExfVxuZnVuY3Rpb24gR2QoYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcIm9wdGlvblwiPT09YXx8XCJub3NjcmlwdFwiPT09YXx8XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm51bWJlclwiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9PWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sfXZhciBIZD1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCxJZD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDp2b2lkIDA7ZnVuY3Rpb24gSmQoYSl7Zm9yKDtudWxsIT1hO2E9YS5uZXh0U2libGluZyl7dmFyIGI9YS5ub2RlVHlwZTtpZigxPT09Ynx8Mz09PWIpYnJlYWt9cmV0dXJuIGF9XG5mdW5jdGlvbiBLZChhKXthPWEucHJldmlvdXNTaWJsaW5nO2Zvcih2YXIgYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKGM9PT16ZHx8Yz09PUNkfHxjPT09QmQpe2lmKDA9PT1iKXJldHVybiBhO2ItLX1lbHNlIGM9PT1BZCYmYisrfWE9YS5wcmV2aW91c1NpYmxpbmd9cmV0dXJuIG51bGx9dmFyIExkPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLE1kPVwiX19yZWFjdEludGVybmFsSW5zdGFuY2UkXCIrTGQsTmQ9XCJfX3JlYWN0RXZlbnRIYW5kbGVycyRcIitMZCxPZD1cIl9fcmVhY3RDb250YWluZXJlJFwiK0xkO1xuZnVuY3Rpb24gdGMoYSl7dmFyIGI9YVtNZF07aWYoYilyZXR1cm4gYjtmb3IodmFyIGM9YS5wYXJlbnROb2RlO2M7KXtpZihiPWNbT2RdfHxjW01kXSl7Yz1iLmFsdGVybmF0ZTtpZihudWxsIT09Yi5jaGlsZHx8bnVsbCE9PWMmJm51bGwhPT1jLmNoaWxkKWZvcihhPUtkKGEpO251bGwhPT1hOyl7aWYoYz1hW01kXSlyZXR1cm4gYzthPUtkKGEpfXJldHVybiBifWE9YztjPWEucGFyZW50Tm9kZX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBOYyhhKXthPWFbTWRdfHxhW09kXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWcmJjEzIT09YS50YWcmJjMhPT1hLnRhZz9udWxsOmF9ZnVuY3Rpb24gUGQoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGEuc3RhdGVOb2RlO3Rocm93IEVycm9yKHUoMzMpKTt9ZnVuY3Rpb24gUWQoYSl7cmV0dXJuIGFbTmRdfHxudWxsfVxuZnVuY3Rpb24gUmQoYSl7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1cbmZ1bmN0aW9uIFNkKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7aWYoIWMpcmV0dXJuIG51bGw7dmFyIGQ9bGEoYyk7aWYoIWQpcmV0dXJuIG51bGw7Yz1kW2JdO2E6c3dpdGNoKGIpe2Nhc2UgXCJvbkNsaWNrXCI6Y2FzZSBcIm9uQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tcIjpjYXNlIFwib25Eb3VibGVDbGlja0NhcHR1cmVcIjpjYXNlIFwib25Nb3VzZURvd25cIjpjYXNlIFwib25Nb3VzZURvd25DYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlVXBcIjpjYXNlIFwib25Nb3VzZVVwQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRW50ZXJcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2lmKGMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjKXRocm93IEVycm9yKHUoMjMxLFxuYix0eXBlb2YgYykpO3JldHVybiBjfWZ1bmN0aW9uIFRkKGEsYixjKXtpZihiPVNkKGEsYy5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lc1tiXSkpYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9aWMoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9aWMoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSl9ZnVuY3Rpb24gVWQoYSl7aWYoYSYmYS5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lcyl7Zm9yKHZhciBiPWEuX3RhcmdldEluc3QsYz1bXTtiOyljLnB1c2goYiksYj1SZChiKTtmb3IoYj1jLmxlbmd0aDswPGItLTspVGQoY1tiXSxcImNhcHR1cmVkXCIsYSk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKylUZChjW2JdLFwiYnViYmxlZFwiLGEpfX1cbmZ1bmN0aW9uIFZkKGEsYixjKXthJiZjJiZjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJihiPVNkKGEsYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lKSkmJihjLl9kaXNwYXRjaExpc3RlbmVycz1pYyhjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz1pYyhjLl9kaXNwYXRjaEluc3RhbmNlcyxhKSl9ZnVuY3Rpb24gV2QoYSl7YSYmYS5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiZWZChhLl90YXJnZXRJbnN0LG51bGwsYSl9ZnVuY3Rpb24gWGQoYSl7amMoYSxVZCl9dmFyIFlkPW51bGwsWmQ9bnVsbCwkZD1udWxsO1xuZnVuY3Rpb24gYWUoKXtpZigkZClyZXR1cm4gJGQ7dmFyIGEsYj1aZCxjPWIubGVuZ3RoLGQsZT1cInZhbHVlXCJpbiBZZD9ZZC52YWx1ZTpZZC50ZXh0Q29udGVudCxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO3JldHVybiAkZD1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApfWZ1bmN0aW9uIGJlKCl7cmV0dXJuITB9ZnVuY3Rpb24gY2UoKXtyZXR1cm4hMX1cbmZ1bmN0aW9uIEcoYSxiLGMsZCl7dGhpcy5kaXNwYXRjaENvbmZpZz1hO3RoaXMuX3RhcmdldEluc3Q9Yjt0aGlzLm5hdGl2ZUV2ZW50PWM7YT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZTtmb3IodmFyIGUgaW4gYSlhLmhhc093blByb3BlcnR5KGUpJiYoKGI9YVtlXSk/dGhpc1tlXT1iKGMpOlwidGFyZ2V0XCI9PT1lP3RoaXMudGFyZ2V0PWQ6dGhpc1tlXT1jW2VdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Yy5kZWZhdWx0UHJldmVudGVkP2MuZGVmYXVsdFByZXZlbnRlZDohMT09PWMucmV0dXJuVmFsdWUpP2JlOmNlO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9Y2U7cmV0dXJuIHRoaXN9XG5uKEcucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiYoYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9YmUpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9YmUpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7dGhpcy5pc1BlcnNpc3RlbnQ9YmV9LGlzUGVyc2lzdGVudDpjZSxkZXN0cnVjdG9yOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2UsXG5iO2ZvcihiIGluIGEpdGhpc1tiXT1udWxsO3RoaXMubmF0aXZlRXZlbnQ9dGhpcy5fdGFyZ2V0SW5zdD10aGlzLmRpc3BhdGNoQ29uZmlnPW51bGw7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD10aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1jZTt0aGlzLl9kaXNwYXRjaEluc3RhbmNlcz10aGlzLl9kaXNwYXRjaExpc3RlbmVycz1udWxsfX0pO0cuSW50ZXJmYWNlPXt0eXBlOm51bGwsdGFyZ2V0Om51bGwsY3VycmVudFRhcmdldDpmdW5jdGlvbigpe3JldHVybiBudWxsfSxldmVudFBoYXNlOm51bGwsYnViYmxlczpudWxsLGNhbmNlbGFibGU6bnVsbCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOm51bGwsaXNUcnVzdGVkOm51bGx9O1xuRy5leHRlbmQ9ZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYigpe31mdW5jdGlvbiBjKCl7cmV0dXJuIGQuYXBwbHkodGhpcyxhcmd1bWVudHMpfXZhciBkPXRoaXM7Yi5wcm90b3R5cGU9ZC5wcm90b3R5cGU7dmFyIGU9bmV3IGI7bihlLGMucHJvdG90eXBlKTtjLnByb3RvdHlwZT1lO2MucHJvdG90eXBlLmNvbnN0cnVjdG9yPWM7Yy5JbnRlcmZhY2U9bih7fSxkLkludGVyZmFjZSxhKTtjLmV4dGVuZD1kLmV4dGVuZDtkZShjKTtyZXR1cm4gY307ZGUoRyk7ZnVuY3Rpb24gZWUoYSxiLGMsZCl7aWYodGhpcy5ldmVudFBvb2wubGVuZ3RoKXt2YXIgZT10aGlzLmV2ZW50UG9vbC5wb3AoKTt0aGlzLmNhbGwoZSxhLGIsYyxkKTtyZXR1cm4gZX1yZXR1cm4gbmV3IHRoaXMoYSxiLGMsZCl9XG5mdW5jdGlvbiBmZShhKXtpZighKGEgaW5zdGFuY2VvZiB0aGlzKSl0aHJvdyBFcnJvcih1KDI3OSkpO2EuZGVzdHJ1Y3RvcigpOzEwPnRoaXMuZXZlbnRQb29sLmxlbmd0aCYmdGhpcy5ldmVudFBvb2wucHVzaChhKX1mdW5jdGlvbiBkZShhKXthLmV2ZW50UG9vbD1bXTthLmdldFBvb2xlZD1lZTthLnJlbGVhc2U9ZmV9dmFyIGdlPUcuZXh0ZW5kKHtkYXRhOm51bGx9KSxoZT1HLmV4dGVuZCh7ZGF0YTpudWxsfSksaWU9WzksMTMsMjcsMzJdLGplPVRhJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyxrZT1udWxsO1RhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJihrZT1kb2N1bWVudC5kb2N1bWVudE1vZGUpO1xudmFyIGxlPVRhJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYha2UsbWU9VGEmJighamV8fGtlJiY4PGtlJiYxMT49a2UpLG5lPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLG9lPXtiZWZvcmVJbnB1dDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkJlZm9yZUlucHV0XCIsY2FwdHVyZWQ6XCJvbkJlZm9yZUlucHV0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdfSxjb21wb3NpdGlvbkVuZDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uRW5kXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uRW5kQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uZW5kIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblN0YXJ0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25TdGFydFwiLFxuY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25VcGRhdGU6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblVwZGF0ZVwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvblVwZGF0ZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnVwZGF0ZSBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX19LHBlPSExO1xuZnVuY3Rpb24gcWUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT1pZS5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiYmx1clwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIHJlKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIHNlPSExO2Z1bmN0aW9uIHRlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiByZShiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7cGU9ITA7cmV0dXJuIG5lO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PW5lJiZwZT9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiB1ZShhLGIpe2lmKHNlKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFqZSYmcWUoYSxiKT8oYT1hZSgpLCRkPVpkPVlkPW51bGwsc2U9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIG1lJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciB2ZT17ZXZlbnRUeXBlczpvZSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlO2lmKGplKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOnZhciBmPW9lLmNvbXBvc2l0aW9uU3RhcnQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpmPW9lLmNvbXBvc2l0aW9uRW5kO2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9udXBkYXRlXCI6Zj1vZS5jb21wb3NpdGlvblVwZGF0ZTticmVhayBifWY9dm9pZCAwfWVsc2Ugc2U/cWUoYSxjKSYmKGY9b2UuY29tcG9zaXRpb25FbmQpOlwia2V5ZG93blwiPT09YSYmMjI5PT09Yy5rZXlDb2RlJiYoZj1vZS5jb21wb3NpdGlvblN0YXJ0KTtmPyhtZSYmXCJrb1wiIT09Yy5sb2NhbGUmJihzZXx8ZiE9PW9lLmNvbXBvc2l0aW9uU3RhcnQ/Zj09PW9lLmNvbXBvc2l0aW9uRW5kJiZzZSYmKGU9YWUoKSk6KFlkPWQsWmQ9XCJ2YWx1ZVwiaW4gWWQ/WWQudmFsdWU6WWQudGV4dENvbnRlbnQsc2U9ITApKSxmPWdlLmdldFBvb2xlZChmLFxuYixjLGQpLGU/Zi5kYXRhPWU6KGU9cmUoYyksbnVsbCE9PWUmJihmLmRhdGE9ZSkpLFhkKGYpLGU9Zik6ZT1udWxsOyhhPWxlP3RlKGEsYyk6dWUoYSxjKSk/KGI9aGUuZ2V0UG9vbGVkKG9lLmJlZm9yZUlucHV0LGIsYyxkKSxiLmRhdGE9YSxYZChiKSk6Yj1udWxsO3JldHVybiBudWxsPT09ZT9iOm51bGw9PT1iP2U6W2UsYl19fSx3ZT17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiB4ZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIXdlW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1cbnZhciB5ZT17Y2hhbmdlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ2hhbmdlXCIsY2FwdHVyZWQ6XCJvbkNoYW5nZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjaGFuZ2UgY2xpY2sgZm9jdXMgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fTtmdW5jdGlvbiB6ZShhLGIsYyl7YT1HLmdldFBvb2xlZCh5ZS5jaGFuZ2UsYSxiLGMpO2EudHlwZT1cImNoYW5nZVwiO1lhKGMpO1hkKGEpO3JldHVybiBhfXZhciBBZT1udWxsLEJlPW51bGw7ZnVuY3Rpb24gQ2UoYSl7bWMoYSl9ZnVuY3Rpb24gRGUoYSl7dmFyIGI9UGQoYSk7aWYoeWIoYikpcmV0dXJuIGF9ZnVuY3Rpb24gRWUoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgRmU9ITE7VGEmJihGZT1vYyhcImlucHV0XCIpJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpKTtcbmZ1bmN0aW9uIEdlKCl7QWUmJihBZS5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixIZSksQmU9QWU9bnVsbCl9ZnVuY3Rpb24gSGUoYSl7aWYoXCJ2YWx1ZVwiPT09YS5wcm9wZXJ0eU5hbWUmJkRlKEJlKSlpZihhPXplKEJlLGEsbmMoYSkpLGRiKW1jKGEpO2Vsc2V7ZGI9ITA7dHJ5eyRhKENlLGEpfWZpbmFsbHl7ZGI9ITEsZmIoKX19fWZ1bmN0aW9uIEllKGEsYixjKXtcImZvY3VzXCI9PT1hPyhHZSgpLEFlPWIsQmU9YyxBZS5hdHRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixIZSkpOlwiYmx1clwiPT09YSYmR2UoKX1mdW5jdGlvbiBKZShhKXtpZihcInNlbGVjdGlvbmNoYW5nZVwiPT09YXx8XCJrZXl1cFwiPT09YXx8XCJrZXlkb3duXCI9PT1hKXJldHVybiBEZShCZSl9ZnVuY3Rpb24gS2UoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiBEZShiKX1mdW5jdGlvbiBMZShhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiBEZShiKX1cbnZhciBNZT17ZXZlbnRUeXBlczp5ZSxfaXNJbnB1dEV2ZW50U3VwcG9ydGVkOkZlLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9Yj9QZChiKTp3aW5kb3csZj1lLm5vZGVOYW1lJiZlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7aWYoXCJzZWxlY3RcIj09PWZ8fFwiaW5wdXRcIj09PWYmJlwiZmlsZVwiPT09ZS50eXBlKXZhciBnPUVlO2Vsc2UgaWYoeGUoZSkpaWYoRmUpZz1MZTtlbHNle2c9SmU7dmFyIGg9SWV9ZWxzZShmPWUubm9kZU5hbWUpJiZcImlucHV0XCI9PT1mLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1lLnR5cGV8fFwicmFkaW9cIj09PWUudHlwZSkmJihnPUtlKTtpZihnJiYoZz1nKGEsYikpKXJldHVybiB6ZShnLGMsZCk7aCYmaChhLGUsYik7XCJibHVyXCI9PT1hJiYoYT1lLl93cmFwcGVyU3RhdGUpJiZhLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1lLnR5cGUmJkRiKGUsXCJudW1iZXJcIixlLnZhbHVlKX19LE5lPUcuZXh0ZW5kKHt2aWV3Om51bGwsZGV0YWlsOm51bGx9KSxcbk9lPXtBbHQ6XCJhbHRLZXlcIixDb250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBQZShhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPU9lW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gUWUoKXtyZXR1cm4gUGV9XG52YXIgUmU9MCxTZT0wLFRlPSExLFVlPSExLFZlPU5lLmV4dGVuZCh7c2NyZWVuWDpudWxsLHNjcmVlblk6bnVsbCxjbGllbnRYOm51bGwsY2xpZW50WTpudWxsLHBhZ2VYOm51bGwscGFnZVk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpRZSxidXR0b246bnVsbCxidXR0b25zOm51bGwscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gYS5yZWxhdGVkVGFyZ2V0fHwoYS5mcm9tRWxlbWVudD09PWEuc3JjRWxlbWVudD9hLnRvRWxlbWVudDphLmZyb21FbGVtZW50KX0sbW92ZW1lbnRYOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRYXCJpbiBhKXJldHVybiBhLm1vdmVtZW50WDt2YXIgYj1SZTtSZT1hLnNjcmVlblg7cmV0dXJuIFRlP1wibW91c2Vtb3ZlXCI9PT1hLnR5cGU/YS5zY3JlZW5YLWI6MDooVGU9ITAsMCl9LG1vdmVtZW50WTpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WVwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFk7XG52YXIgYj1TZTtTZT1hLnNjcmVlblk7cmV0dXJuIFVlP1wibW91c2Vtb3ZlXCI9PT1hLnR5cGU/YS5zY3JlZW5ZLWI6MDooVWU9ITAsMCl9fSksV2U9VmUuZXh0ZW5kKHtwb2ludGVySWQ6bnVsbCx3aWR0aDpudWxsLGhlaWdodDpudWxsLHByZXNzdXJlOm51bGwsdGFuZ2VudGlhbFByZXNzdXJlOm51bGwsdGlsdFg6bnVsbCx0aWx0WTpudWxsLHR3aXN0Om51bGwscG9pbnRlclR5cGU6bnVsbCxpc1ByaW1hcnk6bnVsbH0pLFhlPXttb3VzZUVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUVudGVyXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LG1vdXNlTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlTGVhdmVcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0scG9pbnRlckVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19LHBvaW50ZXJMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckxlYXZlXCIsXG5kZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19fSxZZT17ZXZlbnRUeXBlczpYZSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9XCJtb3VzZW92ZXJcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEsZz1cIm1vdXNlb3V0XCI9PT1hfHxcInBvaW50ZXJvdXRcIj09PWE7aWYoZiYmMD09PShlJjMyKSYmKGMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCl8fCFnJiYhZilyZXR1cm4gbnVsbDtmPWQud2luZG93PT09ZD9kOihmPWQub3duZXJEb2N1bWVudCk/Zi5kZWZhdWx0Vmlld3x8Zi5wYXJlbnRXaW5kb3c6d2luZG93O2lmKGcpe2lmKGc9YixiPShiPWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQpP3RjKGIpOm51bGwsbnVsbCE9PWIpe3ZhciBoPWRjKGIpO2lmKGIhPT1ofHw1IT09Yi50YWcmJjYhPT1iLnRhZyliPW51bGx9fWVsc2UgZz1udWxsO2lmKGc9PT1iKXJldHVybiBudWxsO2lmKFwibW91c2VvdXRcIj09PWF8fFwibW91c2VvdmVyXCI9PT1cbmEpe3ZhciBrPVZlO3ZhciBsPVhlLm1vdXNlTGVhdmU7dmFyIG09WGUubW91c2VFbnRlcjt2YXIgcD1cIm1vdXNlXCJ9ZWxzZSBpZihcInBvaW50ZXJvdXRcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEpaz1XZSxsPVhlLnBvaW50ZXJMZWF2ZSxtPVhlLnBvaW50ZXJFbnRlcixwPVwicG9pbnRlclwiO2E9bnVsbD09Zz9mOlBkKGcpO2Y9bnVsbD09Yj9mOlBkKGIpO2w9ay5nZXRQb29sZWQobCxnLGMsZCk7bC50eXBlPXArXCJsZWF2ZVwiO2wudGFyZ2V0PWE7bC5yZWxhdGVkVGFyZ2V0PWY7Yz1rLmdldFBvb2xlZChtLGIsYyxkKTtjLnR5cGU9cCtcImVudGVyXCI7Yy50YXJnZXQ9ZjtjLnJlbGF0ZWRUYXJnZXQ9YTtkPWc7cD1iO2lmKGQmJnApYTp7az1kO209cDtnPTA7Zm9yKGE9azthO2E9UmQoYSkpZysrO2E9MDtmb3IoYj1tO2I7Yj1SZChiKSlhKys7Zm9yKDswPGctYTspaz1SZChrKSxnLS07Zm9yKDswPGEtZzspbT1SZChtKSxhLS07Zm9yKDtnLS07KXtpZihrPT09bXx8az09PW0uYWx0ZXJuYXRlKWJyZWFrIGE7XG5rPVJkKGspO209UmQobSl9az1udWxsfWVsc2Ugaz1udWxsO209aztmb3Ioaz1bXTtkJiZkIT09bTspe2c9ZC5hbHRlcm5hdGU7aWYobnVsbCE9PWcmJmc9PT1tKWJyZWFrO2sucHVzaChkKTtkPVJkKGQpfWZvcihkPVtdO3AmJnAhPT1tOyl7Zz1wLmFsdGVybmF0ZTtpZihudWxsIT09ZyYmZz09PW0pYnJlYWs7ZC5wdXNoKHApO3A9UmQocCl9Zm9yKHA9MDtwPGsubGVuZ3RoO3ArKylWZChrW3BdLFwiYnViYmxlZFwiLGwpO2ZvcihwPWQubGVuZ3RoOzA8cC0tOylWZChkW3BdLFwiY2FwdHVyZWRcIixjKTtyZXR1cm4gMD09PShlJjY0KT9bbF06W2wsY119fTtmdW5jdGlvbiBaZShhLGIpe3JldHVybiBhPT09YiYmKDAhPT1hfHwxL2E9PT0xL2IpfHxhIT09YSYmYiE9PWJ9dmFyICRlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBPYmplY3QuaXM/T2JqZWN0LmlzOlplLGFmPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5mdW5jdGlvbiBiZihhLGIpe2lmKCRlKGEsYikpcmV0dXJuITA7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhfHxudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBifHxudWxsPT09YilyZXR1cm4hMTt2YXIgYz1PYmplY3Qua2V5cyhhKSxkPU9iamVjdC5rZXlzKGIpO2lmKGMubGVuZ3RoIT09ZC5sZW5ndGgpcmV0dXJuITE7Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrKylpZighYWYuY2FsbChiLGNbZF0pfHwhJGUoYVtjW2RdXSxiW2NbZF1dKSlyZXR1cm4hMTtyZXR1cm4hMH1cbnZhciBjZj1UYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLGRmPXtzZWxlY3Q6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25TZWxlY3RcIixjYXB0dXJlZDpcIm9uU2VsZWN0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXMga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fSxlZj1udWxsLGZmPW51bGwsZ2Y9bnVsbCxoZj0hMTtcbmZ1bmN0aW9uIGpmKGEsYil7dmFyIGM9Yi53aW5kb3c9PT1iP2IuZG9jdW1lbnQ6OT09PWIubm9kZVR5cGU/YjpiLm93bmVyRG9jdW1lbnQ7aWYoaGZ8fG51bGw9PWVmfHxlZiE9PXRkKGMpKXJldHVybiBudWxsO2M9ZWY7XCJzZWxlY3Rpb25TdGFydFwiaW4gYyYmeWQoYyk/Yz17c3RhcnQ6Yy5zZWxlY3Rpb25TdGFydCxlbmQ6Yy5zZWxlY3Rpb25FbmR9OihjPShjLm93bmVyRG9jdW1lbnQmJmMub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxjPXthbmNob3JOb2RlOmMuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6Yy5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmMuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmMuZm9jdXNPZmZzZXR9KTtyZXR1cm4gZ2YmJmJmKGdmLGMpP251bGw6KGdmPWMsYT1HLmdldFBvb2xlZChkZi5zZWxlY3QsZmYsYSxiKSxhLnR5cGU9XCJzZWxlY3RcIixhLnRhcmdldD1lZixYZChhKSxhKX1cbnZhciBrZj17ZXZlbnRUeXBlczpkZixleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQsZSxmKXtlPWZ8fChkLndpbmRvdz09PWQ/ZC5kb2N1bWVudDo5PT09ZC5ub2RlVHlwZT9kOmQub3duZXJEb2N1bWVudCk7aWYoIShmPSFlKSl7YTp7ZT1jYyhlKTtmPVJhLm9uU2VsZWN0O2Zvcih2YXIgZz0wO2c8Zi5sZW5ndGg7ZysrKWlmKCFlLmhhcyhmW2ddKSl7ZT0hMTticmVhayBhfWU9ITB9Zj0hZX1pZihmKXJldHVybiBudWxsO2U9Yj9QZChiKTp3aW5kb3c7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c1wiOmlmKHhlKGUpfHxcInRydWVcIj09PWUuY29udGVudEVkaXRhYmxlKWVmPWUsZmY9YixnZj1udWxsO2JyZWFrO2Nhc2UgXCJibHVyXCI6Z2Y9ZmY9ZWY9bnVsbDticmVhaztjYXNlIFwibW91c2Vkb3duXCI6aGY9ITA7YnJlYWs7Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwiZHJhZ2VuZFwiOnJldHVybiBoZj0hMSxqZihjLGQpO2Nhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjppZihjZilicmVhaztcbmNhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6cmV0dXJuIGpmKGMsZCl9cmV0dXJuIG51bGx9fSxsZj1HLmV4dGVuZCh7YW5pbWF0aW9uTmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSksbWY9Ry5leHRlbmQoe2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KSxuZj1OZS5leHRlbmQoe3JlbGF0ZWRUYXJnZXQ6bnVsbH0pO2Z1bmN0aW9uIG9mKGEpe3ZhciBiPWEua2V5Q29kZTtcImNoYXJDb2RlXCJpbiBhPyhhPWEuY2hhckNvZGUsMD09PWEmJjEzPT09YiYmKGE9MTMpKTphPWI7MTA9PT1hJiYoYT0xMyk7cmV0dXJuIDMyPD1hfHwxMz09PWE/YTowfVxudmFyIHBmPXtFc2M6XCJFc2NhcGVcIixTcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSxxZj17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIixcbjExNjpcIkY1XCIsMTE3OlwiRjZcIiwxMTg6XCJGN1wiLDExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn0scmY9TmUuZXh0ZW5kKHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPXBmW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPW9mKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9xZlthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGxvY2F0aW9uOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLHJlcGVhdDpudWxsLGxvY2FsZTpudWxsLGdldE1vZGlmaWVyU3RhdGU6UWUsY2hhckNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09XG5hLnR5cGU/b2YoYSk6MH0sa2V5Q29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfSx3aGljaDpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/b2YoYSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH19KSxzZj1WZS5leHRlbmQoe2RhdGFUcmFuc2ZlcjpudWxsfSksdGY9TmUuZXh0ZW5kKHt0b3VjaGVzOm51bGwsdGFyZ2V0VG91Y2hlczpudWxsLGNoYW5nZWRUb3VjaGVzOm51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6UWV9KSx1Zj1HLmV4dGVuZCh7cHJvcGVydHlOYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSx2Zj1WZS5leHRlbmQoe2RlbHRhWDpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWFwiaW4gYT9hLmRlbHRhWDpcIndoZWVsRGVsdGFYXCJpblxuYT8tYS53aGVlbERlbHRhWDowfSxkZWx0YVk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVlcImluIGE/YS5kZWx0YVk6XCJ3aGVlbERlbHRhWVwiaW4gYT8tYS53aGVlbERlbHRhWTpcIndoZWVsRGVsdGFcImluIGE/LWEud2hlZWxEZWx0YTowfSxkZWx0YVo6bnVsbCxkZWx0YU1vZGU6bnVsbH0pLHdmPXtldmVudFR5cGVzOldjLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9WWMuZ2V0KGEpO2lmKCFlKXJldHVybiBudWxsO3N3aXRjaChhKXtjYXNlIFwia2V5cHJlc3NcIjppZigwPT09b2YoYykpcmV0dXJuIG51bGw7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjphPXJmO2JyZWFrO2Nhc2UgXCJibHVyXCI6Y2FzZSBcImZvY3VzXCI6YT1uZjticmVhaztjYXNlIFwiY2xpY2tcIjppZigyPT09Yy5idXR0b24pcmV0dXJuIG51bGw7Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJtb3VzZW91dFwiOmNhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwiY29udGV4dG1lbnVcIjphPVxuVmU7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6YT1zZjticmVhaztjYXNlIFwidG91Y2hjYW5jZWxcIjpjYXNlIFwidG91Y2hlbmRcIjpjYXNlIFwidG91Y2htb3ZlXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjphPXRmO2JyZWFrO2Nhc2UgWGI6Y2FzZSBZYjpjYXNlIFpiOmE9bGY7YnJlYWs7Y2FzZSAkYjphPXVmO2JyZWFrO2Nhc2UgXCJzY3JvbGxcIjphPU5lO2JyZWFrO2Nhc2UgXCJ3aGVlbFwiOmE9dmY7YnJlYWs7Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcInBhc3RlXCI6YT1tZjticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcInBvaW50ZXJjYW5jZWxcIjpjYXNlIFwicG9pbnRlcmRvd25cIjpjYXNlIFwicG9pbnRlcm1vdmVcIjpjYXNlIFwicG9pbnRlcm91dFwiOmNhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVydXBcIjphPVxuV2U7YnJlYWs7ZGVmYXVsdDphPUd9Yj1hLmdldFBvb2xlZChlLGIsYyxkKTtYZChiKTtyZXR1cm4gYn19O2lmKEthKXRocm93IEVycm9yKHUoMTAxKSk7S2E9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoXCJSZXNwb25kZXJFdmVudFBsdWdpbiBTaW1wbGVFdmVudFBsdWdpbiBFbnRlckxlYXZlRXZlbnRQbHVnaW4gQ2hhbmdlRXZlbnRQbHVnaW4gU2VsZWN0RXZlbnRQbHVnaW4gQmVmb3JlSW5wdXRFdmVudFBsdWdpblwiLnNwbGl0KFwiIFwiKSk7TWEoKTt2YXIgeGY9TmM7bGE9UWQ7bWE9eGY7bmE9UGQ7U2Eoe1NpbXBsZUV2ZW50UGx1Z2luOndmLEVudGVyTGVhdmVFdmVudFBsdWdpbjpZZSxDaGFuZ2VFdmVudFBsdWdpbjpNZSxTZWxlY3RFdmVudFBsdWdpbjprZixCZWZvcmVJbnB1dEV2ZW50UGx1Z2luOnZlfSk7dmFyIHlmPVtdLHpmPS0xO2Z1bmN0aW9uIEgoYSl7MD56Znx8KGEuY3VycmVudD15Zlt6Zl0seWZbemZdPW51bGwsemYtLSl9XG5mdW5jdGlvbiBJKGEsYil7emYrKzt5Zlt6Zl09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBBZj17fSxKPXtjdXJyZW50OkFmfSxLPXtjdXJyZW50OiExfSxCZj1BZjtmdW5jdGlvbiBDZihhLGIpe3ZhciBjPWEudHlwZS5jb250ZXh0VHlwZXM7aWYoIWMpcmV0dXJuIEFmO3ZhciBkPWEuc3RhdGVOb2RlO2lmKGQmJmQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD09PWIpcmV0dXJuIGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ7dmFyIGU9e30sZjtmb3IoZiBpbiBjKWVbZl09YltmXTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9YixhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWUpO3JldHVybiBlfWZ1bmN0aW9uIEwoYSl7YT1hLmNoaWxkQ29udGV4dFR5cGVzO3JldHVybiBudWxsIT09YSYmdm9pZCAwIT09YX1cbmZ1bmN0aW9uIERmKCl7SChLKTtIKEopfWZ1bmN0aW9uIEVmKGEsYixjKXtpZihKLmN1cnJlbnQhPT1BZil0aHJvdyBFcnJvcih1KDE2OCkpO0koSixiKTtJKEssYyl9ZnVuY3Rpb24gRmYoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2E9Yi5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGM7ZD1kLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBkKWlmKCEoZSBpbiBhKSl0aHJvdyBFcnJvcih1KDEwOCxJYShiKXx8XCJVbmtub3duXCIsZSkpO3JldHVybiBuKHt9LGMse30sZCl9ZnVuY3Rpb24gR2YoYSl7YT0oYT1hLnN0YXRlTm9kZSkmJmEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fEFmO0JmPUouY3VycmVudDtJKEosYSk7SShLLEsuY3VycmVudCk7cmV0dXJuITB9XG5mdW5jdGlvbiBIZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoIWQpdGhyb3cgRXJyb3IodSgxNjkpKTtjPyhhPUZmKGEsYixCZiksZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1hLEgoSyksSChKKSxJKEosYSkpOkgoSyk7SShLLGMpfVxudmFyIElmPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5LEpmPXIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayxLZj1yLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrLExmPXIudW5zdGFibGVfcmVxdWVzdFBhaW50LE1mPXIudW5zdGFibGVfbm93LE5mPXIudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwsT2Y9ci51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSxQZj1yLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LFFmPXIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksUmY9ci51bnN0YWJsZV9Mb3dQcmlvcml0eSxTZj1yLnVuc3RhYmxlX0lkbGVQcmlvcml0eSxUZj17fSxVZj1yLnVuc3RhYmxlX3Nob3VsZFlpZWxkLFZmPXZvaWQgMCE9PUxmP0xmOmZ1bmN0aW9uKCl7fSxXZj1udWxsLFhmPW51bGwsWWY9ITEsWmY9TWYoKSwkZj0xRTQ+WmY/TWY6ZnVuY3Rpb24oKXtyZXR1cm4gTWYoKS1aZn07XG5mdW5jdGlvbiBhZygpe3N3aXRjaChOZigpKXtjYXNlIE9mOnJldHVybiA5OTtjYXNlIFBmOnJldHVybiA5ODtjYXNlIFFmOnJldHVybiA5NztjYXNlIFJmOnJldHVybiA5NjtjYXNlIFNmOnJldHVybiA5NTtkZWZhdWx0OnRocm93IEVycm9yKHUoMzMyKSk7fX1mdW5jdGlvbiBiZyhhKXtzd2l0Y2goYSl7Y2FzZSA5OTpyZXR1cm4gT2Y7Y2FzZSA5ODpyZXR1cm4gUGY7Y2FzZSA5NzpyZXR1cm4gUWY7Y2FzZSA5NjpyZXR1cm4gUmY7Y2FzZSA5NTpyZXR1cm4gU2Y7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMzMikpO319ZnVuY3Rpb24gY2coYSxiKXthPWJnKGEpO3JldHVybiBJZihhLGIpfWZ1bmN0aW9uIGRnKGEsYixjKXthPWJnKGEpO3JldHVybiBKZihhLGIsYyl9ZnVuY3Rpb24gZWcoYSl7bnVsbD09PVdmPyhXZj1bYV0sWGY9SmYoT2YsZmcpKTpXZi5wdXNoKGEpO3JldHVybiBUZn1mdW5jdGlvbiBnZygpe2lmKG51bGwhPT1YZil7dmFyIGE9WGY7WGY9bnVsbDtLZihhKX1mZygpfVxuZnVuY3Rpb24gZmcoKXtpZighWWYmJm51bGwhPT1XZil7WWY9ITA7dmFyIGE9MDt0cnl7dmFyIGI9V2Y7Y2coOTksZnVuY3Rpb24oKXtmb3IoO2E8Yi5sZW5ndGg7YSsrKXt2YXIgYz1iW2FdO2RvIGM9YyghMCk7d2hpbGUobnVsbCE9PWMpfX0pO1dmPW51bGx9Y2F0Y2goYyl7dGhyb3cgbnVsbCE9PVdmJiYoV2Y9V2Yuc2xpY2UoYSsxKSksSmYoT2YsZ2cpLGM7fWZpbmFsbHl7WWY9ITF9fX1mdW5jdGlvbiBoZyhhLGIsYyl7Yy89MTA7cmV0dXJuIDEwNzM3NDE4MjEtKCgoMTA3Mzc0MTgyMS1hK2IvMTApL2N8MCkrMSkqY31mdW5jdGlvbiBpZyhhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPW4oe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKX1yZXR1cm4gYn12YXIgamc9e2N1cnJlbnQ6bnVsbH0sa2c9bnVsbCxsZz1udWxsLG1nPW51bGw7ZnVuY3Rpb24gbmcoKXttZz1sZz1rZz1udWxsfVxuZnVuY3Rpb24gb2coYSl7dmFyIGI9amcuY3VycmVudDtIKGpnKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIHBnKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuYWx0ZXJuYXRlO2lmKGEuY2hpbGRFeHBpcmF0aW9uVGltZTxiKWEuY2hpbGRFeHBpcmF0aW9uVGltZT1iLG51bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtlbHNlIGlmKG51bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiljLmNoaWxkRXhwaXJhdGlvblRpbWU9YjtlbHNlIGJyZWFrO2E9YS5yZXR1cm59fWZ1bmN0aW9uIHFnKGEsYil7a2c9YTttZz1sZz1udWxsO2E9YS5kZXBlbmRlbmNpZXM7bnVsbCE9PWEmJm51bGwhPT1hLmZpcnN0Q29udGV4dCYmKGEuZXhwaXJhdGlvblRpbWU+PWImJihyZz0hMCksYS5maXJzdENvbnRleHQ9bnVsbCl9XG5mdW5jdGlvbiBzZyhhLGIpe2lmKG1nIT09YSYmITEhPT1iJiYwIT09Yil7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBifHwxMDczNzQxODIzPT09YiltZz1hLGI9MTA3Mzc0MTgyMztiPXtjb250ZXh0OmEsb2JzZXJ2ZWRCaXRzOmIsbmV4dDpudWxsfTtpZihudWxsPT09bGcpe2lmKG51bGw9PT1rZyl0aHJvdyBFcnJvcih1KDMwOCkpO2xnPWI7a2cuZGVwZW5kZW5jaWVzPXtleHBpcmF0aW9uVGltZTowLGZpcnN0Q29udGV4dDpiLHJlc3BvbmRlcnM6bnVsbH19ZWxzZSBsZz1sZy5uZXh0PWJ9cmV0dXJuIGEuX2N1cnJlbnRWYWx1ZX12YXIgdGc9ITE7ZnVuY3Rpb24gdWcoYSl7YS51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEubWVtb2l6ZWRTdGF0ZSxiYXNlUXVldWU6bnVsbCxzaGFyZWQ6e3BlbmRpbmc6bnVsbH0sZWZmZWN0czpudWxsfX1cbmZ1bmN0aW9uIHZnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9PT1hJiYoYi51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGJhc2VRdWV1ZTphLmJhc2VRdWV1ZSxzaGFyZWQ6YS5zaGFyZWQsZWZmZWN0czphLmVmZmVjdHN9KX1mdW5jdGlvbiB3ZyhhLGIpe2E9e2V4cGlyYXRpb25UaW1lOmEsc3VzcGVuc2VDb25maWc6Yix0YWc6MCxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGx9O3JldHVybiBhLm5leHQ9YX1mdW5jdGlvbiB4ZyhhLGIpe2E9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09YSl7YT1hLnNoYXJlZDt2YXIgYz1hLnBlbmRpbmc7bnVsbD09PWM/Yi5uZXh0PWI6KGIubmV4dD1jLm5leHQsYy5uZXh0PWIpO2EucGVuZGluZz1ifX1cbmZ1bmN0aW9uIHlnKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJnZnKGMsYSk7YT1hLnVwZGF0ZVF1ZXVlO2M9YS5iYXNlUXVldWU7bnVsbD09PWM/KGEuYmFzZVF1ZXVlPWIubmV4dD1iLGIubmV4dD1iKTooYi5uZXh0PWMubmV4dCxjLm5leHQ9Yil9XG5mdW5jdGlvbiB6ZyhhLGIsYyxkKXt2YXIgZT1hLnVwZGF0ZVF1ZXVlO3RnPSExO3ZhciBmPWUuYmFzZVF1ZXVlLGc9ZS5zaGFyZWQucGVuZGluZztpZihudWxsIT09Zyl7aWYobnVsbCE9PWYpe3ZhciBoPWYubmV4dDtmLm5leHQ9Zy5uZXh0O2cubmV4dD1ofWY9ZztlLnNoYXJlZC5wZW5kaW5nPW51bGw7aD1hLmFsdGVybmF0ZTtudWxsIT09aCYmKGg9aC51cGRhdGVRdWV1ZSxudWxsIT09aCYmKGguYmFzZVF1ZXVlPWcpKX1pZihudWxsIT09Zil7aD1mLm5leHQ7dmFyIGs9ZS5iYXNlU3RhdGUsbD0wLG09bnVsbCxwPW51bGwseD1udWxsO2lmKG51bGwhPT1oKXt2YXIgej1oO2Rve2c9ei5leHBpcmF0aW9uVGltZTtpZihnPGQpe3ZhciBjYT17ZXhwaXJhdGlvblRpbWU6ei5leHBpcmF0aW9uVGltZSxzdXNwZW5zZUNvbmZpZzp6LnN1c3BlbnNlQ29uZmlnLHRhZzp6LnRhZyxwYXlsb2FkOnoucGF5bG9hZCxjYWxsYmFjazp6LmNhbGxiYWNrLG5leHQ6bnVsbH07bnVsbD09PXg/KHA9eD1cbmNhLG09ayk6eD14Lm5leHQ9Y2E7Zz5sJiYobD1nKX1lbHNle251bGwhPT14JiYoeD14Lm5leHQ9e2V4cGlyYXRpb25UaW1lOjEwNzM3NDE4MjMsc3VzcGVuc2VDb25maWc6ei5zdXNwZW5zZUNvbmZpZyx0YWc6ei50YWcscGF5bG9hZDp6LnBheWxvYWQsY2FsbGJhY2s6ei5jYWxsYmFjayxuZXh0Om51bGx9KTtBZyhnLHouc3VzcGVuc2VDb25maWcpO2E6e3ZhciBEPWEsdD16O2c9YjtjYT1jO3N3aXRjaCh0LnRhZyl7Y2FzZSAxOkQ9dC5wYXlsb2FkO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBEKXtrPUQuY2FsbChjYSxrLGcpO2JyZWFrIGF9az1EO2JyZWFrIGE7Y2FzZSAzOkQuZWZmZWN0VGFnPUQuZWZmZWN0VGFnJi00MDk3fDY0O2Nhc2UgMDpEPXQucGF5bG9hZDtnPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBEP0QuY2FsbChjYSxrLGcpOkQ7aWYobnVsbD09PWd8fHZvaWQgMD09PWcpYnJlYWsgYTtrPW4oe30sayxnKTticmVhayBhO2Nhc2UgMjp0Zz0hMH19bnVsbCE9PXouY2FsbGJhY2smJlxuKGEuZWZmZWN0VGFnfD0zMixnPWUuZWZmZWN0cyxudWxsPT09Zz9lLmVmZmVjdHM9W3pdOmcucHVzaCh6KSl9ej16Lm5leHQ7aWYobnVsbD09PXp8fHo9PT1oKWlmKGc9ZS5zaGFyZWQucGVuZGluZyxudWxsPT09ZylicmVhaztlbHNlIHo9Zi5uZXh0PWcubmV4dCxnLm5leHQ9aCxlLmJhc2VRdWV1ZT1mPWcsZS5zaGFyZWQucGVuZGluZz1udWxsfXdoaWxlKDEpfW51bGw9PT14P209azp4Lm5leHQ9cDtlLmJhc2VTdGF0ZT1tO2UuYmFzZVF1ZXVlPXg7QmcobCk7YS5leHBpcmF0aW9uVGltZT1sO2EubWVtb2l6ZWRTdGF0ZT1rfX1cbmZ1bmN0aW9uIENnKGEsYixjKXthPWIuZWZmZWN0cztiLmVmZmVjdHM9bnVsbDtpZihudWxsIT09YSlmb3IoYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgZD1hW2JdLGU9ZC5jYWxsYmFjaztpZihudWxsIT09ZSl7ZC5jYWxsYmFjaz1udWxsO2Q9ZTtlPWM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQpdGhyb3cgRXJyb3IodSgxOTEsZCkpO2QuY2FsbChlKX19fXZhciBEZz1wYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyxFZz0obmV3IGFhLkNvbXBvbmVudCkucmVmcztmdW5jdGlvbiBGZyhhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6bih7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jOzA9PT1hLmV4cGlyYXRpb25UaW1lJiYoYS51cGRhdGVRdWV1ZS5iYXNlU3RhdGU9Yyl9XG52YXIgSmc9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFsRmliZXIpP2RjKGEpPT09YTohMX0sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1HZygpLGU9RGcuc3VzcGVuc2U7ZD1IZyhkLGEsZSk7ZT13ZyhkLGUpO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTt4ZyhhLGUpO0lnKGEsZCl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPUdnKCksZT1EZy5zdXNwZW5zZTtkPUhnKGQsYSxlKTtlPXdnKGQsZSk7ZS50YWc9MTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7eGcoYSxlKTtJZyhhLGQpfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oYSxiKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgYz1HZygpLGQ9RGcuc3VzcGVuc2U7XG5jPUhnKGMsYSxkKTtkPXdnKGMsZCk7ZC50YWc9Mjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGQuY2FsbGJhY2s9Yik7eGcoYSxkKTtJZyhhLGMpfX07ZnVuY3Rpb24gS2coYSxiLGMsZCxlLGYsZyl7YT1hLnN0YXRlTm9kZTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5zaG91bGRDb21wb25lbnRVcGRhdGU/YS5zaG91bGRDb21wb25lbnRVcGRhdGUoZCxmLGcpOmIucHJvdG90eXBlJiZiLnByb3RvdHlwZS5pc1B1cmVSZWFjdENvbXBvbmVudD8hYmYoYyxkKXx8IWJmKGUsZik6ITB9XG5mdW5jdGlvbiBMZyhhLGIsYyl7dmFyIGQ9ITEsZT1BZjt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/Zj1zZyhmKTooZT1MKGIpP0JmOkouY3VycmVudCxkPWIuY29udGV4dFR5cGVzLGY9KGQ9bnVsbCE9PWQmJnZvaWQgMCE9PWQpP0NmKGEsZSk6QWYpO2I9bmV3IGIoYyxmKTthLm1lbW9pemVkU3RhdGU9bnVsbCE9PWIuc3RhdGUmJnZvaWQgMCE9PWIuc3RhdGU/Yi5zdGF0ZTpudWxsO2IudXBkYXRlcj1KZzthLnN0YXRlTm9kZT1iO2IuX3JlYWN0SW50ZXJuYWxGaWJlcj1hO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1lLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9Zik7cmV0dXJuIGJ9XG5mdW5jdGlvbiBNZyhhLGIsYyxkKXthPWIuc3RhdGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtiLnN0YXRlIT09YSYmSmcuZW5xdWV1ZVJlcGxhY2VTdGF0ZShiLGIuc3RhdGUsbnVsbCl9XG5mdW5jdGlvbiBOZyhhLGIsYyxkKXt2YXIgZT1hLnN0YXRlTm9kZTtlLnByb3BzPWM7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7ZS5yZWZzPUVnO3VnKGEpO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9lLmNvbnRleHQ9c2coZik6KGY9TChiKT9CZjpKLmN1cnJlbnQsZS5jb250ZXh0PUNmKGEsZikpO3pnKGEsYyxlLGQpO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihGZyhhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50fHxcbihiPWUuc3RhdGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50JiZlLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZKZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSx6ZyhhLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmVmZmVjdFRhZ3w9NCl9dmFyIE9nPUFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiBQZyhhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7aWYoYyl7aWYoMSE9PWMudGFnKXRocm93IEVycm9yKHUoMzA5KSk7dmFyIGQ9Yy5zdGF0ZU5vZGV9aWYoIWQpdGhyb3cgRXJyb3IodSgxNDcsYSkpO3ZhciBlPVwiXCIrYTtpZihudWxsIT09YiYmbnVsbCE9PWIucmVmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5yZWYmJmIucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBiLnJlZjtiPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcztiPT09RWcmJihiPWQucmVmcz17fSk7bnVsbD09PWE/ZGVsZXRlIGJbZV06YltlXT1hfTtiLl9zdHJpbmdSZWY9ZTtyZXR1cm4gYn1pZihcInN0cmluZ1wiIT09dHlwZW9mIGEpdGhyb3cgRXJyb3IodSgyODQpKTtpZighYy5fb3duZXIpdGhyb3cgRXJyb3IodSgyOTAsYSkpO31yZXR1cm4gYX1cbmZ1bmN0aW9uIFFnKGEsYil7aWYoXCJ0ZXh0YXJlYVwiIT09YS50eXBlKXRocm93IEVycm9yKHUoMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChiKT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGIpLmpvaW4oXCIsIFwiKStcIn1cIjpiLFwiXCIpKTt9XG5mdW5jdGlvbiBSZyhhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmVmZmVjdFRhZz04fX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYil7YT1TZyhhLGIpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5lZmZlY3RUYWc9XG4yLGMpOmQ7Yi5lZmZlY3RUYWc9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZWZmZWN0VGFnPTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDYhPT1iLnRhZylyZXR1cm4gYj1UZyhjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBrKGEsYixjLGQpe2lmKG51bGwhPT1iJiZiLmVsZW1lbnRUeXBlPT09Yy50eXBlKXJldHVybiBkPWUoYixjLnByb3BzKSxkLnJlZj1QZyhhLGIsYyksZC5yZXR1cm49YSxkO2Q9VWcoYy50eXBlLGMua2V5LGMucHJvcHMsbnVsbCxhLm1vZGUsZCk7ZC5yZWY9UGcoYSxiLGMpO2QucmV0dXJuPWE7cmV0dXJuIGR9ZnVuY3Rpb24gbChhLGIsYyxkKXtpZihudWxsPT09Ynx8NCE9PWIudGFnfHxiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09Yy5jb250YWluZXJJbmZvfHxiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PVxuYy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYj1WZyhjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYy5jaGlsZHJlbnx8W10pO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gbShhLGIsYyxkLGYpe2lmKG51bGw9PT1ifHw3IT09Yi50YWcpcmV0dXJuIGI9V2coYyxhLm1vZGUsZCxmKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBwKGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj1UZyhcIlwiK2IsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSByYTpyZXR1cm4gYz1VZyhiLnR5cGUsYi5rZXksYi5wcm9wcyxudWxsLGEubW9kZSxjKSxjLnJlZj1QZyhhLG51bGwsYiksYy5yZXR1cm49YSxjO2Nhc2Ugc2E6cmV0dXJuIGI9VmcoYixhLm1vZGUsYyksYi5yZXR1cm49YSxifWlmKE9nKGIpfHxcbkdhKGIpKXJldHVybiBiPVdnKGIsYS5tb2RlLGMsbnVsbCksYi5yZXR1cm49YSxiO1FnKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24geChhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSByYTpyZXR1cm4gYy5rZXk9PT1lP2MudHlwZT09PXRhP20oYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxlKTprKGEsYixjLGQpOm51bGw7Y2FzZSBzYTpyZXR1cm4gYy5rZXk9PT1lP2woYSxiLGMsZCk6bnVsbH1pZihPZyhjKXx8R2EoYykpcmV0dXJuIG51bGwhPT1lP251bGw6bShhLGIsYyxkLG51bGwpO1FnKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24geihhLGIsYyxkLGUpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkKXJldHVybiBhPVxuYS5nZXQoYyl8fG51bGwsaChiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIHJhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxkLnR5cGU9PT10YT9tKGIsYSxkLnByb3BzLmNoaWxkcmVuLGUsZC5rZXkpOmsoYixhLGQsZSk7Y2FzZSBzYTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsbChiLGEsZCxlKX1pZihPZyhkKXx8R2EoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsbShiLGEsZCxlLG51bGwpO1FnKGIsZCl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gY2EoZSxnLGgsayl7Zm9yKHZhciBsPW51bGwsdD1udWxsLG09Zyx5PWc9MCxBPW51bGw7bnVsbCE9PW0mJnk8aC5sZW5ndGg7eSsrKXttLmluZGV4Pnk/KEE9bSxtPW51bGwpOkE9bS5zaWJsaW5nO3ZhciBxPXgoZSxtLGhbeV0sayk7aWYobnVsbD09PXEpe251bGw9PT1tJiYobT1BKTticmVha31hJiZcbm0mJm51bGw9PT1xLmFsdGVybmF0ZSYmYihlLG0pO2c9ZihxLGcseSk7bnVsbD09PXQ/bD1xOnQuc2libGluZz1xO3Q9cTttPUF9aWYoeT09PWgubGVuZ3RoKXJldHVybiBjKGUsbSksbDtpZihudWxsPT09bSl7Zm9yKDt5PGgubGVuZ3RoO3krKyltPXAoZSxoW3ldLGspLG51bGwhPT1tJiYoZz1mKG0sZyx5KSxudWxsPT09dD9sPW06dC5zaWJsaW5nPW0sdD1tKTtyZXR1cm4gbH1mb3IobT1kKGUsbSk7eTxoLmxlbmd0aDt5KyspQT16KG0sZSx5LGhbeV0sayksbnVsbCE9PUEmJihhJiZudWxsIT09QS5hbHRlcm5hdGUmJm0uZGVsZXRlKG51bGw9PT1BLmtleT95OkEua2V5KSxnPWYoQSxnLHkpLG51bGw9PT10P2w9QTp0LnNpYmxpbmc9QSx0PUEpO2EmJm0uZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9ZnVuY3Rpb24gRChlLGcsaCxsKXt2YXIgaz1HYShoKTtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2Ygayl0aHJvdyBFcnJvcih1KDE1MCkpO2g9ay5jYWxsKGgpO1xuaWYobnVsbD09aCl0aHJvdyBFcnJvcih1KDE1MSkpO2Zvcih2YXIgbT1rPW51bGwsdD1nLHk9Zz0wLEE9bnVsbCxxPWgubmV4dCgpO251bGwhPT10JiYhcS5kb25lO3krKyxxPWgubmV4dCgpKXt0LmluZGV4Pnk/KEE9dCx0PW51bGwpOkE9dC5zaWJsaW5nO3ZhciBEPXgoZSx0LHEudmFsdWUsbCk7aWYobnVsbD09PUQpe251bGw9PT10JiYodD1BKTticmVha31hJiZ0JiZudWxsPT09RC5hbHRlcm5hdGUmJmIoZSx0KTtnPWYoRCxnLHkpO251bGw9PT1tP2s9RDptLnNpYmxpbmc9RDttPUQ7dD1BfWlmKHEuZG9uZSlyZXR1cm4gYyhlLHQpLGs7aWYobnVsbD09PXQpe2Zvcig7IXEuZG9uZTt5KysscT1oLm5leHQoKSlxPXAoZSxxLnZhbHVlLGwpLG51bGwhPT1xJiYoZz1mKHEsZyx5KSxudWxsPT09bT9rPXE6bS5zaWJsaW5nPXEsbT1xKTtyZXR1cm4ga31mb3IodD1kKGUsdCk7IXEuZG9uZTt5KysscT1oLm5leHQoKSlxPXoodCxlLHkscS52YWx1ZSxsKSxudWxsIT09cSYmKGEmJm51bGwhPT1cbnEuYWx0ZXJuYXRlJiZ0LmRlbGV0ZShudWxsPT09cS5rZXk/eTpxLmtleSksZz1mKHEsZyx5KSxudWxsPT09bT9rPXE6bS5zaWJsaW5nPXEsbT1xKTthJiZ0LmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBrfXJldHVybiBmdW5jdGlvbihhLGQsZixoKXt2YXIgaz1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLnR5cGU9PT10YSYmbnVsbD09PWYua2V5O2smJihmPWYucHJvcHMuY2hpbGRyZW4pO3ZhciBsPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY7aWYobClzd2l0Y2goZi4kJHR5cGVvZil7Y2FzZSByYTphOntsPWYua2V5O2ZvcihrPWQ7bnVsbCE9PWs7KXtpZihrLmtleT09PWwpe3N3aXRjaChrLnRhZyl7Y2FzZSA3OmlmKGYudHlwZT09PXRhKXtjKGEsay5zaWJsaW5nKTtkPWUoayxmLnByb3BzLmNoaWxkcmVuKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWJyZWFrO2RlZmF1bHQ6aWYoay5lbGVtZW50VHlwZT09PWYudHlwZSl7YyhhLFxuay5zaWJsaW5nKTtkPWUoayxmLnByb3BzKTtkLnJlZj1QZyhhLGssZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX19YyhhLGspO2JyZWFrfWVsc2UgYihhLGspO2s9ay5zaWJsaW5nfWYudHlwZT09PXRhPyhkPVdnKGYucHJvcHMuY2hpbGRyZW4sYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD1VZyhmLnR5cGUsZi5rZXksZi5wcm9wcyxudWxsLGEubW9kZSxoKSxoLnJlZj1QZyhhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2Ugc2E6YTp7Zm9yKGs9Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PWspaWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGQpO2JyZWFrfWVsc2UgYihhLGQpO2Q9XG5kLnNpYmxpbmd9ZD1WZyhmLGEubW9kZSxoKTtkLnJldHVybj1hO2E9ZH1yZXR1cm4gZyhhKX1pZihcInN0cmluZ1wiPT09dHlwZW9mIGZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZilyZXR1cm4gZj1cIlwiK2YsbnVsbCE9PWQmJjY9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZiksZC5yZXR1cm49YSxhPWQpOihjKGEsZCksZD1UZyhmLGEubW9kZSxoKSxkLnJldHVybj1hLGE9ZCksZyhhKTtpZihPZyhmKSlyZXR1cm4gY2EoYSxkLGYsaCk7aWYoR2EoZikpcmV0dXJuIEQoYSxkLGYsaCk7bCYmUWcoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAxOmNhc2UgMDp0aHJvdyBhPWEudHlwZSxFcnJvcih1KDE1MixhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fFwiQ29tcG9uZW50XCIpKTt9cmV0dXJuIGMoYSxkKX19dmFyIFhnPVJnKCEwKSxZZz1SZyghMSksWmc9e30sJGc9e2N1cnJlbnQ6Wmd9LGFoPXtjdXJyZW50OlpnfSxiaD17Y3VycmVudDpaZ307XG5mdW5jdGlvbiBjaChhKXtpZihhPT09WmcpdGhyb3cgRXJyb3IodSgxNzQpKTtyZXR1cm4gYX1mdW5jdGlvbiBkaChhLGIpe0koYmgsYik7SShhaCxhKTtJKCRnLFpnKTthPWIubm9kZVR5cGU7c3dpdGNoKGEpe2Nhc2UgOTpjYXNlIDExOmI9KGI9Yi5kb2N1bWVudEVsZW1lbnQpP2IubmFtZXNwYWNlVVJJOk9iKG51bGwsXCJcIik7YnJlYWs7ZGVmYXVsdDphPTg9PT1hP2IucGFyZW50Tm9kZTpiLGI9YS5uYW1lc3BhY2VVUkl8fG51bGwsYT1hLnRhZ05hbWUsYj1PYihiLGEpfUgoJGcpO0koJGcsYil9ZnVuY3Rpb24gZWgoKXtIKCRnKTtIKGFoKTtIKGJoKX1mdW5jdGlvbiBmaChhKXtjaChiaC5jdXJyZW50KTt2YXIgYj1jaCgkZy5jdXJyZW50KTt2YXIgYz1PYihiLGEudHlwZSk7YiE9PWMmJihJKGFoLGEpLEkoJGcsYykpfWZ1bmN0aW9uIGdoKGEpe2FoLmN1cnJlbnQ9PT1hJiYoSCgkZyksSChhaCkpfXZhciBNPXtjdXJyZW50OjB9O1xuZnVuY3Rpb24gaGgoYSl7Zm9yKHZhciBiPWE7bnVsbCE9PWI7KXtpZigxMz09PWIudGFnKXt2YXIgYz1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWMmJihjPWMuZGVoeWRyYXRlZCxudWxsPT09Y3x8Yy5kYXRhPT09QmR8fGMuZGF0YT09PUNkKSlyZXR1cm4gYn1lbHNlIGlmKDE5PT09Yi50YWcmJnZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5yZXZlYWxPcmRlcil7aWYoMCE9PShiLmVmZmVjdFRhZyY2NCkpcmV0dXJuIGJ9ZWxzZSBpZihudWxsIT09Yi5jaGlsZCl7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9aWYoYj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfXJldHVybiBudWxsfWZ1bmN0aW9uIGloKGEsYil7cmV0dXJue3Jlc3BvbmRlcjphLHByb3BzOmJ9fVxudmFyIGpoPXBhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsa2g9cGEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsbGg9MCxOPW51bGwsTz1udWxsLFA9bnVsbCxtaD0hMTtmdW5jdGlvbiBRKCl7dGhyb3cgRXJyb3IodSgzMjEpKTt9ZnVuY3Rpb24gbmgoYSxiKXtpZihudWxsPT09YilyZXR1cm4hMTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoJiZjPGEubGVuZ3RoO2MrKylpZighJGUoYVtjXSxiW2NdKSlyZXR1cm4hMTtyZXR1cm4hMH1cbmZ1bmN0aW9uIG9oKGEsYixjLGQsZSxmKXtsaD1mO049YjtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7Yi5leHBpcmF0aW9uVGltZT0wO2poLmN1cnJlbnQ9bnVsbD09PWF8fG51bGw9PT1hLm1lbW9pemVkU3RhdGU/cGg6cWg7YT1jKGQsZSk7aWYoYi5leHBpcmF0aW9uVGltZT09PWxoKXtmPTA7ZG97Yi5leHBpcmF0aW9uVGltZT0wO2lmKCEoMjU+ZikpdGhyb3cgRXJyb3IodSgzMDEpKTtmKz0xO1A9Tz1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtqaC5jdXJyZW50PXJoO2E9YyhkLGUpfXdoaWxlKGIuZXhwaXJhdGlvblRpbWU9PT1saCl9amguY3VycmVudD1zaDtiPW51bGwhPT1PJiZudWxsIT09Ty5uZXh0O2xoPTA7UD1PPU49bnVsbDttaD0hMTtpZihiKXRocm93IEVycm9yKHUoMzAwKSk7cmV0dXJuIGF9XG5mdW5jdGlvbiB0aCgpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwsYmFzZVF1ZXVlOm51bGwscXVldWU6bnVsbCxuZXh0Om51bGx9O251bGw9PT1QP04ubWVtb2l6ZWRTdGF0ZT1QPWE6UD1QLm5leHQ9YTtyZXR1cm4gUH1mdW5jdGlvbiB1aCgpe2lmKG51bGw9PT1PKXt2YXIgYT1OLmFsdGVybmF0ZTthPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsfWVsc2UgYT1PLm5leHQ7dmFyIGI9bnVsbD09PVA/Ti5tZW1vaXplZFN0YXRlOlAubmV4dDtpZihudWxsIT09YilQPWIsTz1hO2Vsc2V7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IodSgzMTApKTtPPWE7YT17bWVtb2l6ZWRTdGF0ZTpPLm1lbW9pemVkU3RhdGUsYmFzZVN0YXRlOk8uYmFzZVN0YXRlLGJhc2VRdWV1ZTpPLmJhc2VRdWV1ZSxxdWV1ZTpPLnF1ZXVlLG5leHQ6bnVsbH07bnVsbD09PVA/Ti5tZW1vaXplZFN0YXRlPVA9YTpQPVAubmV4dD1hfXJldHVybiBQfVxuZnVuY3Rpb24gdmgoYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiB3aChhKXt2YXIgYj11aCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih1KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPU8sZT1kLmJhc2VRdWV1ZSxmPWMucGVuZGluZztpZihudWxsIT09Zil7aWYobnVsbCE9PWUpe3ZhciBnPWUubmV4dDtlLm5leHQ9Zi5uZXh0O2YubmV4dD1nfWQuYmFzZVF1ZXVlPWU9ZjtjLnBlbmRpbmc9bnVsbH1pZihudWxsIT09ZSl7ZT1lLm5leHQ7ZD1kLmJhc2VTdGF0ZTt2YXIgaD1nPWY9bnVsbCxrPWU7ZG97dmFyIGw9ay5leHBpcmF0aW9uVGltZTtpZihsPGxoKXt2YXIgbT17ZXhwaXJhdGlvblRpbWU6ay5leHBpcmF0aW9uVGltZSxzdXNwZW5zZUNvbmZpZzprLnN1c3BlbnNlQ29uZmlnLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsZWFnZXJTdGF0ZTprLmVhZ2VyU3RhdGUsbmV4dDpudWxsfTtudWxsPT09aD8oZz1oPW0sZj1kKTpoPWgubmV4dD1tO2w+Ti5leHBpcmF0aW9uVGltZSYmXG4oTi5leHBpcmF0aW9uVGltZT1sLEJnKGwpKX1lbHNlIG51bGwhPT1oJiYoaD1oLm5leHQ9e2V4cGlyYXRpb25UaW1lOjEwNzM3NDE4MjMsc3VzcGVuc2VDb25maWc6ay5zdXNwZW5zZUNvbmZpZyxhY3Rpb246ay5hY3Rpb24sZWFnZXJSZWR1Y2VyOmsuZWFnZXJSZWR1Y2VyLGVhZ2VyU3RhdGU6ay5lYWdlclN0YXRlLG5leHQ6bnVsbH0pLEFnKGwsay5zdXNwZW5zZUNvbmZpZyksZD1rLmVhZ2VyUmVkdWNlcj09PWE/ay5lYWdlclN0YXRlOmEoZCxrLmFjdGlvbik7az1rLm5leHR9d2hpbGUobnVsbCE9PWsmJmshPT1lKTtudWxsPT09aD9mPWQ6aC5uZXh0PWc7JGUoZCxiLm1lbW9pemVkU3RhdGUpfHwocmc9ITApO2IubWVtb2l6ZWRTdGF0ZT1kO2IuYmFzZVN0YXRlPWY7Yi5iYXNlUXVldWU9aDtjLmxhc3RSZW5kZXJlZFN0YXRlPWR9cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxjLmRpc3BhdGNoXX1cbmZ1bmN0aW9uIHhoKGEpe3ZhciBiPXVoKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHUoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9Yy5kaXNwYXRjaCxlPWMucGVuZGluZyxmPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZSl7Yy5wZW5kaW5nPW51bGw7dmFyIGc9ZT1lLm5leHQ7ZG8gZj1hKGYsZy5hY3Rpb24pLGc9Zy5uZXh0O3doaWxlKGchPT1lKTskZShmLGIubWVtb2l6ZWRTdGF0ZSl8fChyZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7bnVsbD09PWIuYmFzZVF1ZXVlJiYoYi5iYXNlU3RhdGU9Zik7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1mfXJldHVybltmLGRdfVxuZnVuY3Rpb24geWgoYSl7dmFyIGI9dGgoKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSYmKGE9YSgpKTtiLm1lbW9pemVkU3RhdGU9Yi5iYXNlU3RhdGU9YTthPWIucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6dmgsbGFzdFJlbmRlcmVkU3RhdGU6YX07YT1hLmRpc3BhdGNoPXpoLmJpbmQobnVsbCxOLGEpO3JldHVybltiLm1lbW9pemVkU3RhdGUsYV19ZnVuY3Rpb24gQWgoYSxiLGMsZCl7YT17dGFnOmEsY3JlYXRlOmIsZGVzdHJveTpjLGRlcHM6ZCxuZXh0Om51bGx9O2I9Ti51cGRhdGVRdWV1ZTtudWxsPT09Yj8oYj17bGFzdEVmZmVjdDpudWxsfSxOLnVwZGF0ZVF1ZXVlPWIsYi5sYXN0RWZmZWN0PWEubmV4dD1hKTooYz1iLmxhc3RFZmZlY3QsbnVsbD09PWM/Yi5sYXN0RWZmZWN0PWEubmV4dD1hOihkPWMubmV4dCxjLm5leHQ9YSxhLm5leHQ9ZCxiLmxhc3RFZmZlY3Q9YSkpO3JldHVybiBhfVxuZnVuY3Rpb24gQmgoKXtyZXR1cm4gdWgoKS5tZW1vaXplZFN0YXRlfWZ1bmN0aW9uIENoKGEsYixjLGQpe3ZhciBlPXRoKCk7Ti5lZmZlY3RUYWd8PWE7ZS5tZW1vaXplZFN0YXRlPUFoKDF8YixjLHZvaWQgMCx2b2lkIDA9PT1kP251bGw6ZCl9ZnVuY3Rpb24gRGgoYSxiLGMsZCl7dmFyIGU9dWgoKTtkPXZvaWQgMD09PWQ/bnVsbDpkO3ZhciBmPXZvaWQgMDtpZihudWxsIT09Tyl7dmFyIGc9Ty5tZW1vaXplZFN0YXRlO2Y9Zy5kZXN0cm95O2lmKG51bGwhPT1kJiZuaChkLGcuZGVwcykpe0FoKGIsYyxmLGQpO3JldHVybn19Ti5lZmZlY3RUYWd8PWE7ZS5tZW1vaXplZFN0YXRlPUFoKDF8YixjLGYsZCl9ZnVuY3Rpb24gRWgoYSxiKXtyZXR1cm4gQ2goNTE2LDQsYSxiKX1mdW5jdGlvbiBGaChhLGIpe3JldHVybiBEaCg1MTYsNCxhLGIpfWZ1bmN0aW9uIEdoKGEsYil7cmV0dXJuIERoKDQsMixhLGIpfVxuZnVuY3Rpb24gSGgoYSxiKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYT1hKCksYihhKSxmdW5jdGlvbigpe2IobnVsbCl9O2lmKG51bGwhPT1iJiZ2b2lkIDAhPT1iKXJldHVybiBhPWEoKSxiLmN1cnJlbnQ9YSxmdW5jdGlvbigpe2IuY3VycmVudD1udWxsfX1mdW5jdGlvbiBJaChhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIERoKDQsMixIaC5iaW5kKG51bGwsYixhKSxjKX1mdW5jdGlvbiBKaCgpe31mdW5jdGlvbiBLaChhLGIpe3RoKCkubWVtb2l6ZWRTdGF0ZT1bYSx2b2lkIDA9PT1iP251bGw6Yl07cmV0dXJuIGF9ZnVuY3Rpb24gTGgoYSxiKXt2YXIgYz11aCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmbmgoYixkWzFdKSlyZXR1cm4gZFswXTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9XG5mdW5jdGlvbiBNaChhLGIpe3ZhciBjPXVoKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZuaChiLGRbMV0pKXJldHVybiBkWzBdO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1mdW5jdGlvbiBOaChhLGIsYyl7dmFyIGQ9YWcoKTtjZyg5OD5kPzk4OmQsZnVuY3Rpb24oKXthKCEwKX0pO2NnKDk3PGQ/OTc6ZCxmdW5jdGlvbigpe3ZhciBkPWtoLnN1c3BlbnNlO2toLnN1c3BlbnNlPXZvaWQgMD09PWI/bnVsbDpiO3RyeXthKCExKSxjKCl9ZmluYWxseXtraC5zdXNwZW5zZT1kfX0pfVxuZnVuY3Rpb24gemgoYSxiLGMpe3ZhciBkPUdnKCksZT1EZy5zdXNwZW5zZTtkPUhnKGQsYSxlKTtlPXtleHBpcmF0aW9uVGltZTpkLHN1c3BlbnNlQ29uZmlnOmUsYWN0aW9uOmMsZWFnZXJSZWR1Y2VyOm51bGwsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH07dmFyIGY9Yi5wZW5kaW5nO251bGw9PT1mP2UubmV4dD1lOihlLm5leHQ9Zi5uZXh0LGYubmV4dD1lKTtiLnBlbmRpbmc9ZTtmPWEuYWx0ZXJuYXRlO2lmKGE9PT1OfHxudWxsIT09ZiYmZj09PU4pbWg9ITAsZS5leHBpcmF0aW9uVGltZT1saCxOLmV4cGlyYXRpb25UaW1lPWxoO2Vsc2V7aWYoMD09PWEuZXhwaXJhdGlvblRpbWUmJihudWxsPT09Znx8MD09PWYuZXhwaXJhdGlvblRpbWUpJiYoZj1iLmxhc3RSZW5kZXJlZFJlZHVjZXIsbnVsbCE9PWYpKXRyeXt2YXIgZz1iLmxhc3RSZW5kZXJlZFN0YXRlLGg9ZihnLGMpO2UuZWFnZXJSZWR1Y2VyPWY7ZS5lYWdlclN0YXRlPWg7aWYoJGUoaCxnKSlyZXR1cm59Y2F0Y2goayl7fWZpbmFsbHl7fUlnKGEsXG5kKX19XG52YXIgc2g9e3JlYWRDb250ZXh0OnNnLHVzZUNhbGxiYWNrOlEsdXNlQ29udGV4dDpRLHVzZUVmZmVjdDpRLHVzZUltcGVyYXRpdmVIYW5kbGU6USx1c2VMYXlvdXRFZmZlY3Q6USx1c2VNZW1vOlEsdXNlUmVkdWNlcjpRLHVzZVJlZjpRLHVzZVN0YXRlOlEsdXNlRGVidWdWYWx1ZTpRLHVzZVJlc3BvbmRlcjpRLHVzZURlZmVycmVkVmFsdWU6USx1c2VUcmFuc2l0aW9uOlF9LHBoPXtyZWFkQ29udGV4dDpzZyx1c2VDYWxsYmFjazpLaCx1c2VDb250ZXh0OnNnLHVzZUVmZmVjdDpFaCx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gQ2goNCwyLEhoLmJpbmQobnVsbCxiLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gQ2goNCwyLGEsYil9LHVzZU1lbW86ZnVuY3Rpb24oYSxiKXt2YXIgYz10aCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLFxuYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXRoKCk7Yj12b2lkIDAhPT1jP2MoYik6YjtkLm1lbW9pemVkU3RhdGU9ZC5iYXNlU3RhdGU9YjthPWQucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6YSxsYXN0UmVuZGVyZWRTdGF0ZTpifTthPWEuZGlzcGF0Y2g9emguYmluZChudWxsLE4sYSk7cmV0dXJuW2QubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlUmVmOmZ1bmN0aW9uKGEpe3ZhciBiPXRoKCk7YT17Y3VycmVudDphfTtyZXR1cm4gYi5tZW1vaXplZFN0YXRlPWF9LHVzZVN0YXRlOnloLHVzZURlYnVnVmFsdWU6SmgsdXNlUmVzcG9uZGVyOmloLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSxiKXt2YXIgYz15aChhKSxkPWNbMF0sZT1jWzFdO0VoKGZ1bmN0aW9uKCl7dmFyIGM9a2guc3VzcGVuc2U7a2guc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2UoYSl9ZmluYWxseXtraC5zdXNwZW5zZT1cbmN9fSxbYSxiXSk7cmV0dXJuIGR9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oYSl7dmFyIGI9eWgoITEpLGM9YlswXTtiPWJbMV07cmV0dXJuW0toKE5oLmJpbmQobnVsbCxiLGEpLFtiLGFdKSxjXX19LHFoPXtyZWFkQ29udGV4dDpzZyx1c2VDYWxsYmFjazpMaCx1c2VDb250ZXh0OnNnLHVzZUVmZmVjdDpGaCx1c2VJbXBlcmF0aXZlSGFuZGxlOkloLHVzZUxheW91dEVmZmVjdDpHaCx1c2VNZW1vOk1oLHVzZVJlZHVjZXI6d2gsdXNlUmVmOkJoLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIHdoKHZoKX0sdXNlRGVidWdWYWx1ZTpKaCx1c2VSZXNwb25kZXI6aWgsdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhLGIpe3ZhciBjPXdoKHZoKSxkPWNbMF0sZT1jWzFdO0ZoKGZ1bmN0aW9uKCl7dmFyIGM9a2guc3VzcGVuc2U7a2guc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2UoYSl9ZmluYWxseXtraC5zdXNwZW5zZT1jfX0sW2EsYl0pO3JldHVybiBkfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPVxud2godmgpLGM9YlswXTtiPWJbMV07cmV0dXJuW0xoKE5oLmJpbmQobnVsbCxiLGEpLFtiLGFdKSxjXX19LHJoPXtyZWFkQ29udGV4dDpzZyx1c2VDYWxsYmFjazpMaCx1c2VDb250ZXh0OnNnLHVzZUVmZmVjdDpGaCx1c2VJbXBlcmF0aXZlSGFuZGxlOkloLHVzZUxheW91dEVmZmVjdDpHaCx1c2VNZW1vOk1oLHVzZVJlZHVjZXI6eGgsdXNlUmVmOkJoLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIHhoKHZoKX0sdXNlRGVidWdWYWx1ZTpKaCx1c2VSZXNwb25kZXI6aWgsdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhLGIpe3ZhciBjPXhoKHZoKSxkPWNbMF0sZT1jWzFdO0ZoKGZ1bmN0aW9uKCl7dmFyIGM9a2guc3VzcGVuc2U7a2guc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2UoYSl9ZmluYWxseXtraC5zdXNwZW5zZT1jfX0sW2EsYl0pO3JldHVybiBkfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPXhoKHZoKSxjPWJbMF07Yj1iWzFdO3JldHVybltMaChOaC5iaW5kKG51bGwsXG5iLGEpLFtiLGFdKSxjXX19LE9oPW51bGwsUGg9bnVsbCxRaD0hMTtmdW5jdGlvbiBSaChhLGIpe3ZhciBjPVNoKDUsbnVsbCxudWxsLDApO2MuZWxlbWVudFR5cGU9XCJERUxFVEVEXCI7Yy50eXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Yy5yZXR1cm49YTtjLmVmZmVjdFRhZz04O251bGwhPT1hLmxhc3RFZmZlY3Q/KGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsYS5sYXN0RWZmZWN0PWMpOmEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PWN9XG5mdW5jdGlvbiBUaChhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnZhciBjPWEudHlwZTtiPTEhPT1iLm5vZGVUeXBlfHxjLnRvTG93ZXJDYXNlKCkhPT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDpiO3JldHVybiBudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDEzOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gVWgoYSl7aWYoUWgpe3ZhciBiPVBoO2lmKGIpe3ZhciBjPWI7aWYoIVRoKGEsYikpe2I9SmQoYy5uZXh0U2libGluZyk7aWYoIWJ8fCFUaChhLGIpKXthLmVmZmVjdFRhZz1hLmVmZmVjdFRhZyYtMTAyNXwyO1FoPSExO09oPWE7cmV0dXJufVJoKE9oLGMpfU9oPWE7UGg9SmQoYi5maXJzdENoaWxkKX1lbHNlIGEuZWZmZWN0VGFnPWEuZWZmZWN0VGFnJi0xMDI1fDIsUWg9ITEsT2g9YX19ZnVuY3Rpb24gVmgoYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnJiYxMyE9PWEudGFnOylhPWEucmV0dXJuO09oPWF9XG5mdW5jdGlvbiBXaChhKXtpZihhIT09T2gpcmV0dXJuITE7aWYoIVFoKXJldHVybiBWaChhKSxRaD0hMCwhMTt2YXIgYj1hLnR5cGU7aWYoNSE9PWEudGFnfHxcImhlYWRcIiE9PWImJlwiYm9keVwiIT09YiYmIUdkKGIsYS5tZW1vaXplZFByb3BzKSlmb3IoYj1QaDtiOylSaChhLGIpLGI9SmQoYi5uZXh0U2libGluZyk7VmgoYSk7aWYoMTM9PT1hLnRhZyl7YT1hLm1lbW9pemVkU3RhdGU7YT1udWxsIT09YT9hLmRlaHlkcmF0ZWQ6bnVsbDtpZighYSl0aHJvdyBFcnJvcih1KDMxNykpO2E6e2E9YS5uZXh0U2libGluZztmb3IoYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKGM9PT1BZCl7aWYoMD09PWIpe1BoPUpkKGEubmV4dFNpYmxpbmcpO2JyZWFrIGF9Yi0tfWVsc2UgYyE9PXpkJiZjIT09Q2QmJmMhPT1CZHx8YisrfWE9YS5uZXh0U2libGluZ31QaD1udWxsfX1lbHNlIFBoPU9oP0pkKGEuc3RhdGVOb2RlLm5leHRTaWJsaW5nKTpudWxsO3JldHVybiEwfVxuZnVuY3Rpb24gWGgoKXtQaD1PaD1udWxsO1FoPSExfXZhciBZaD1wYS5SZWFjdEN1cnJlbnRPd25lcixyZz0hMTtmdW5jdGlvbiBSKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/WWcoYixudWxsLGMsZCk6WGcoYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gWmgoYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO3FnKGIsZSk7ZD1vaChhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiFyZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZWZmZWN0VGFnJj0tNTE3LGEuZXhwaXJhdGlvblRpbWU8PWUmJihhLmV4cGlyYXRpb25UaW1lPTApLCRoKGEsYixlKTtiLmVmZmVjdFRhZ3w9MTtSKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gYWkoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hKXt2YXIgZz1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJiFiaShnKSYmdm9pZCAwPT09Zy5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZyxjaShhLGIsZyxkLGUsZik7YT1VZyhjLnR5cGUsbnVsbCxkLG51bGwsYi5tb2RlLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1nPWEuY2hpbGQ7aWYoZTxmJiYoZT1nLm1lbW9pemVkUHJvcHMsYz1jLmNvbXBhcmUsYz1udWxsIT09Yz9jOmJmLGMoZSxkKSYmYS5yZWY9PT1iLnJlZikpcmV0dXJuICRoKGEsYixmKTtiLmVmZmVjdFRhZ3w9MTthPVNnKGcsZCk7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfVxuZnVuY3Rpb24gY2koYSxiLGMsZCxlLGYpe3JldHVybiBudWxsIT09YSYmYmYoYS5tZW1vaXplZFByb3BzLGQpJiZhLnJlZj09PWIucmVmJiYocmc9ITEsZTxmKT8oYi5leHBpcmF0aW9uVGltZT1hLmV4cGlyYXRpb25UaW1lLCRoKGEsYixmKSk6ZGkoYSxiLGMsZCxmKX1mdW5jdGlvbiBlaShhLGIpe3ZhciBjPWIucmVmO2lmKG51bGw9PT1hJiZudWxsIT09Y3x8bnVsbCE9PWEmJmEucmVmIT09YyliLmVmZmVjdFRhZ3w9MTI4fWZ1bmN0aW9uIGRpKGEsYixjLGQsZSl7dmFyIGY9TChjKT9CZjpKLmN1cnJlbnQ7Zj1DZihiLGYpO3FnKGIsZSk7Yz1vaChhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiFyZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZWZmZWN0VGFnJj0tNTE3LGEuZXhwaXJhdGlvblRpbWU8PWUmJihhLmV4cGlyYXRpb25UaW1lPTApLCRoKGEsYixlKTtiLmVmZmVjdFRhZ3w9MTtSKGEsYixjLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gZmkoYSxiLGMsZCxlKXtpZihMKGMpKXt2YXIgZj0hMDtHZihiKX1lbHNlIGY9ITE7cWcoYixlKTtpZihudWxsPT09Yi5zdGF0ZU5vZGUpbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpLExnKGIsYyxkKSxOZyhiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD1zZyhsKToobD1MKGMpP0JmOkouY3VycmVudCxsPUNmKGIsbCkpO3ZhciBtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLHA9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO3B8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZNZyhiLGcsZCxsKTt0Zz0hMTt2YXIgeD1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT14O3pnKGIsZCxnLGUpO2s9Yi5tZW1vaXplZFN0YXRlO2ghPT1kfHx4IT09a3x8Sy5jdXJyZW50fHx0Zz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihGZyhiLGMsbSxkKSxrPWIubWVtb2l6ZWRTdGF0ZSksKGg9dGd8fEtnKGIsYyxoLGQseCxrLGwpKT8ocHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpKSxcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWspLGcucHJvcHM9ZCxnLnN0YXRlPWssZy5jb250ZXh0PWwsZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksZD0hMSl9ZWxzZSBnPWIuc3RhdGVOb2RlLHZnKGEsYiksaD1iLm1lbW9pemVkUHJvcHMsZy5wcm9wcz1iLnR5cGU9PT1iLmVsZW1lbnRUeXBlP2g6aWcoYi50eXBlLGgpLGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZSxcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9c2cobCk6KGw9TChjKT9CZjpKLmN1cnJlbnQsbD1DZihiLGwpKSxtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLChwPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZNZyhiLGcsZCxsKSx0Zz0hMSxrPWIubWVtb2l6ZWRTdGF0ZSxnLnN0YXRlPWssemcoYixkLGcsZSkseD1iLm1lbW9pemVkU3RhdGUsaCE9PWR8fGshPT14fHxLLmN1cnJlbnR8fHRnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKEZnKGIsYyxtLGQpLHg9Yi5tZW1vaXplZFN0YXRlKSwobT10Z3x8S2coYixjLGgsZCxrLHgsbCkpPyhwfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZXx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGUmJmcuY29tcG9uZW50V2lsbFVwZGF0ZShkLFxueCxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLHgsbCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZWZmZWN0VGFnfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPXgpLGcucHJvcHM9ZCxnLnN0YXRlPXgsZy5jb250ZXh0PWwsZD1tKTpcbihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxkPSExKTtyZXR1cm4gZ2koYSxiLGMsZCxmLGUpfVxuZnVuY3Rpb24gZ2koYSxiLGMsZCxlLGYpe2VpKGEsYik7dmFyIGc9MCE9PShiLmVmZmVjdFRhZyY2NCk7aWYoIWQmJiFnKXJldHVybiBlJiZIZihiLGMsITEpLCRoKGEsYixmKTtkPWIuc3RhdGVOb2RlO1loLmN1cnJlbnQ9Yjt2YXIgaD1nJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I/bnVsbDpkLnJlbmRlcigpO2IuZWZmZWN0VGFnfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPVhnKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9WGcoYixudWxsLGgsZikpOlIoYSxiLGgsZik7Yi5tZW1vaXplZFN0YXRlPWQuc3RhdGU7ZSYmSGYoYixjLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiBoaShhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P0VmKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJkVmKGEsYi5jb250ZXh0LCExKTtkaChhLGIuY29udGFpbmVySW5mbyl9XG52YXIgaWk9e2RlaHlkcmF0ZWQ6bnVsbCxyZXRyeVRpbWU6MH07XG5mdW5jdGlvbiBqaShhLGIsYyl7dmFyIGQ9Yi5tb2RlLGU9Yi5wZW5kaW5nUHJvcHMsZj1NLmN1cnJlbnQsZz0hMSxoOyhoPTAhPT0oYi5lZmZlY3RUYWcmNjQpKXx8KGg9MCE9PShmJjIpJiYobnVsbD09PWF8fG51bGwhPT1hLm1lbW9pemVkU3RhdGUpKTtoPyhnPSEwLGIuZWZmZWN0VGFnJj0tNjUpOm51bGwhPT1hJiZudWxsPT09YS5tZW1vaXplZFN0YXRlfHx2b2lkIDA9PT1lLmZhbGxiYWNrfHwhMD09PWUudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fChmfD0xKTtJKE0sZiYxKTtpZihudWxsPT09YSl7dm9pZCAwIT09ZS5mYWxsYmFjayYmVWgoYik7aWYoZyl7Zz1lLmZhbGxiYWNrO2U9V2cobnVsbCxkLDAsbnVsbCk7ZS5yZXR1cm49YjtpZigwPT09KGIubW9kZSYyKSlmb3IoYT1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxlLmNoaWxkPWE7bnVsbCE9PWE7KWEucmV0dXJuPWUsYT1hLnNpYmxpbmc7Yz1XZyhnLGQsYyxudWxsKTtjLnJldHVybj1cbmI7ZS5zaWJsaW5nPWM7Yi5tZW1vaXplZFN0YXRlPWlpO2IuY2hpbGQ9ZTtyZXR1cm4gY31kPWUuY2hpbGRyZW47Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGIuY2hpbGQ9WWcoYixudWxsLGQsYyl9aWYobnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSl7YT1hLmNoaWxkO2Q9YS5zaWJsaW5nO2lmKGcpe2U9ZS5mYWxsYmFjaztjPVNnKGEsYS5wZW5kaW5nUHJvcHMpO2MucmV0dXJuPWI7aWYoMD09PShiLm1vZGUmMikmJihnPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGchPT1hLmNoaWxkKSlmb3IoYy5jaGlsZD1nO251bGwhPT1nOylnLnJldHVybj1jLGc9Zy5zaWJsaW5nO2Q9U2coZCxlKTtkLnJldHVybj1iO2Muc2libGluZz1kO2MuY2hpbGRFeHBpcmF0aW9uVGltZT0wO2IubWVtb2l6ZWRTdGF0ZT1paTtiLmNoaWxkPWM7cmV0dXJuIGR9Yz1YZyhiLGEuY2hpbGQsZS5jaGlsZHJlbixjKTtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gYi5jaGlsZD1cbmN9YT1hLmNoaWxkO2lmKGcpe2c9ZS5mYWxsYmFjaztlPVdnKG51bGwsZCwwLG51bGwpO2UucmV0dXJuPWI7ZS5jaGlsZD1hO251bGwhPT1hJiYoYS5yZXR1cm49ZSk7aWYoMD09PShiLm1vZGUmMikpZm9yKGE9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZS5jaGlsZD1hO251bGwhPT1hOylhLnJldHVybj1lLGE9YS5zaWJsaW5nO2M9V2coZyxkLGMsbnVsbCk7Yy5yZXR1cm49YjtlLnNpYmxpbmc9YztjLmVmZmVjdFRhZ3w9MjtlLmNoaWxkRXhwaXJhdGlvblRpbWU9MDtiLm1lbW9pemVkU3RhdGU9aWk7Yi5jaGlsZD1lO3JldHVybiBjfWIubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBiLmNoaWxkPVhnKGIsYSxlLmNoaWxkcmVuLGMpfVxuZnVuY3Rpb24ga2koYSxiKXthLmV4cGlyYXRpb25UaW1lPGImJihhLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPGImJihjLmV4cGlyYXRpb25UaW1lPWIpO3BnKGEucmV0dXJuLGIpfWZ1bmN0aW9uIGxpKGEsYixjLGQsZSxmKXt2YXIgZz1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWc/YS5tZW1vaXplZFN0YXRlPXtpc0JhY2t3YXJkczpiLHJlbmRlcmluZzpudWxsLHJlbmRlcmluZ1N0YXJ0VGltZTowLGxhc3Q6ZCx0YWlsOmMsdGFpbEV4cGlyYXRpb246MCx0YWlsTW9kZTplLGxhc3RFZmZlY3Q6Zn06KGcuaXNCYWNrd2FyZHM9YixnLnJlbmRlcmluZz1udWxsLGcucmVuZGVyaW5nU3RhcnRUaW1lPTAsZy5sYXN0PWQsZy50YWlsPWMsZy50YWlsRXhwaXJhdGlvbj0wLGcudGFpbE1vZGU9ZSxnLmxhc3RFZmZlY3Q9Zil9XG5mdW5jdGlvbiBtaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1kLnJldmVhbE9yZGVyLGY9ZC50YWlsO1IoYSxiLGQuY2hpbGRyZW4sYyk7ZD1NLmN1cnJlbnQ7aWYoMCE9PShkJjIpKWQ9ZCYxfDIsYi5lZmZlY3RUYWd8PTY0O2Vsc2V7aWYobnVsbCE9PWEmJjAhPT0oYS5lZmZlY3RUYWcmNjQpKWE6Zm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2lmKDEzPT09YS50YWcpbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYma2koYSxjKTtlbHNlIGlmKDE5PT09YS50YWcpa2koYSxjKTtlbHNlIGlmKG51bGwhPT1hLmNoaWxkKXthLmNoaWxkLnJldHVybj1hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YilicmVhayBhO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1iKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfWQmPTF9SShNLGQpO2lmKDA9PT0oYi5tb2RlJjIpKWIubWVtb2l6ZWRTdGF0ZT1cbm51bGw7ZWxzZSBzd2l0Y2goZSl7Y2FzZSBcImZvcndhcmRzXCI6Yz1iLmNoaWxkO2ZvcihlPW51bGw7bnVsbCE9PWM7KWE9Yy5hbHRlcm5hdGUsbnVsbCE9PWEmJm51bGw9PT1oaChhKSYmKGU9YyksYz1jLnNpYmxpbmc7Yz1lO251bGw9PT1jPyhlPWIuY2hpbGQsYi5jaGlsZD1udWxsKTooZT1jLnNpYmxpbmcsYy5zaWJsaW5nPW51bGwpO2xpKGIsITEsZSxjLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwiYmFja3dhcmRzXCI6Yz1udWxsO2U9Yi5jaGlsZDtmb3IoYi5jaGlsZD1udWxsO251bGwhPT1lOyl7YT1lLmFsdGVybmF0ZTtpZihudWxsIT09YSYmbnVsbD09PWhoKGEpKXtiLmNoaWxkPWU7YnJlYWt9YT1lLnNpYmxpbmc7ZS5zaWJsaW5nPWM7Yz1lO2U9YX1saShiLCEwLGMsbnVsbCxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcInRvZ2V0aGVyXCI6bGkoYiwhMSxudWxsLG51bGwsdm9pZCAwLGIubGFzdEVmZmVjdCk7YnJlYWs7ZGVmYXVsdDpiLm1lbW9pemVkU3RhdGU9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uICRoKGEsYixjKXtudWxsIT09YSYmKGIuZGVwZW5kZW5jaWVzPWEuZGVwZW5kZW5jaWVzKTt2YXIgZD1iLmV4cGlyYXRpb25UaW1lOzAhPT1kJiZCZyhkKTtpZihiLmNoaWxkRXhwaXJhdGlvblRpbWU8YylyZXR1cm4gbnVsbDtpZihudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQpdGhyb3cgRXJyb3IodSgxNTMpKTtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO2M9U2coYSxhLnBlbmRpbmdQcm9wcyk7Yi5jaGlsZD1jO2ZvcihjLnJldHVybj1iO251bGwhPT1hLnNpYmxpbmc7KWE9YS5zaWJsaW5nLGM9Yy5zaWJsaW5nPVNnKGEsYS5wZW5kaW5nUHJvcHMpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9dmFyIG5pLG9pLHBpLHFpO1xubmk9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O29pPWZ1bmN0aW9uKCl7fTtcbnBpPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9YS5tZW1vaXplZFByb3BzO2lmKGYhPT1kKXt2YXIgZz1iLnN0YXRlTm9kZTtjaCgkZy5jdXJyZW50KTthPW51bGw7c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOmY9emIoZyxmKTtkPXpiKGcsZCk7YT1bXTticmVhaztjYXNlIFwib3B0aW9uXCI6Zj1HYihnLGYpO2Q9R2IoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpmPW4oe30sZix7dmFsdWU6dm9pZCAwfSk7ZD1uKHt9LGQse3ZhbHVlOnZvaWQgMH0pO2E9W107YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Zj1JYihnLGYpO2Q9SWIoZyxkKTthPVtdO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiIT09dHlwZW9mIGYub25DbGljayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQub25DbGljayYmKGcub25jbGljaz1zZCl9b2QoYyxkKTt2YXIgaCxrO2M9bnVsbDtmb3IoaCBpbiBmKWlmKCFkLmhhc093blByb3BlcnR5KGgpJiZmLmhhc093blByb3BlcnR5KGgpJiZudWxsIT1mW2hdKWlmKFwic3R5bGVcIj09PVxuaClmb3IoayBpbiBnPWZbaF0sZylnLmhhc093blByb3BlcnR5KGspJiYoY3x8KGM9e30pLGNba109XCJcIik7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIiE9PWgmJlwiY2hpbGRyZW5cIiE9PWgmJlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1oJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09aCYmXCJhdXRvRm9jdXNcIiE9PWgmJihRYS5oYXNPd25Qcm9wZXJ0eShoKT9hfHwoYT1bXSk6KGE9YXx8W10pLnB1c2goaCxudWxsKSk7Zm9yKGggaW4gZCl7dmFyIGw9ZFtoXTtnPW51bGwhPWY/ZltoXTp2b2lkIDA7aWYoZC5oYXNPd25Qcm9wZXJ0eShoKSYmbCE9PWcmJihudWxsIT1sfHxudWxsIT1nKSlpZihcInN0eWxlXCI9PT1oKWlmKGcpe2ZvcihrIGluIGcpIWcuaGFzT3duUHJvcGVydHkoayl8fGwmJmwuaGFzT3duUHJvcGVydHkoayl8fChjfHwoYz17fSksY1trXT1cIlwiKTtmb3IoayBpbiBsKWwuaGFzT3duUHJvcGVydHkoaykmJmdba10hPT1sW2tdJiYoY3x8KGM9e30pLFxuY1trXT1sW2tdKX1lbHNlIGN8fChhfHwoYT1bXSksYS5wdXNoKGgsYykpLGM9bDtlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09aD8obD1sP2wuX19odG1sOnZvaWQgMCxnPWc/Zy5fX2h0bWw6dm9pZCAwLG51bGwhPWwmJmchPT1sJiYoYT1hfHxbXSkucHVzaChoLGwpKTpcImNoaWxkcmVuXCI9PT1oP2c9PT1sfHxcInN0cmluZ1wiIT09dHlwZW9mIGwmJlwibnVtYmVyXCIhPT10eXBlb2YgbHx8KGE9YXx8W10pLnB1c2goaCxcIlwiK2wpOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1oJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09aCYmKFFhLmhhc093blByb3BlcnR5KGgpPyhudWxsIT1sJiZyZChlLGgpLGF8fGc9PT1sfHwoYT1bXSkpOihhPWF8fFtdKS5wdXNoKGgsbCkpfWMmJihhPWF8fFtdKS5wdXNoKFwic3R5bGVcIixjKTtlPWE7aWYoYi51cGRhdGVRdWV1ZT1lKWIuZWZmZWN0VGFnfD00fX07XG5xaT1mdW5jdGlvbihhLGIsYyxkKXtjIT09ZCYmKGIuZWZmZWN0VGFnfD00KX07ZnVuY3Rpb24gcmkoYSxiKXtzd2l0Y2goYS50YWlsTW9kZSl7Y2FzZSBcImhpZGRlblwiOmI9YS50YWlsO2Zvcih2YXIgYz1udWxsO251bGwhPT1iOyludWxsIT09Yi5hbHRlcm5hdGUmJihjPWIpLGI9Yi5zaWJsaW5nO251bGw9PT1jP2EudGFpbD1udWxsOmMuc2libGluZz1udWxsO2JyZWFrO2Nhc2UgXCJjb2xsYXBzZWRcIjpjPWEudGFpbDtmb3IodmFyIGQ9bnVsbDtudWxsIT09YzspbnVsbCE9PWMuYWx0ZXJuYXRlJiYoZD1jKSxjPWMuc2libGluZztudWxsPT09ZD9ifHxudWxsPT09YS50YWlsP2EudGFpbD1udWxsOmEudGFpbC5zaWJsaW5nPW51bGw6ZC5zaWJsaW5nPW51bGx9fVxuZnVuY3Rpb24gc2koYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmNhc2UgMTY6Y2FzZSAxNTpjYXNlIDA6Y2FzZSAxMTpjYXNlIDc6Y2FzZSA4OmNhc2UgMTI6Y2FzZSA5OmNhc2UgMTQ6cmV0dXJuIG51bGw7Y2FzZSAxOnJldHVybiBMKGIudHlwZSkmJkRmKCksbnVsbDtjYXNlIDM6cmV0dXJuIGVoKCksSChLKSxIKEopLGM9Yi5zdGF0ZU5vZGUsYy5wZW5kaW5nQ29udGV4dCYmKGMuY29udGV4dD1jLnBlbmRpbmdDb250ZXh0LGMucGVuZGluZ0NvbnRleHQ9bnVsbCksbnVsbCE9PWEmJm51bGwhPT1hLmNoaWxkfHwhV2goYil8fChiLmVmZmVjdFRhZ3w9NCksb2koYiksbnVsbDtjYXNlIDU6Z2goYik7Yz1jaChiaC5jdXJyZW50KTt2YXIgZT1iLnR5cGU7aWYobnVsbCE9PWEmJm51bGwhPWIuc3RhdGVOb2RlKXBpKGEsYixlLGQsYyksYS5yZWYhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD0xMjgpO2Vsc2V7aWYoIWQpe2lmKG51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih1KDE2NikpO1xucmV0dXJuIG51bGx9YT1jaCgkZy5jdXJyZW50KTtpZihXaChiKSl7ZD1iLnN0YXRlTm9kZTtlPWIudHlwZTt2YXIgZj1iLm1lbW9pemVkUHJvcHM7ZFtNZF09YjtkW05kXT1mO3N3aXRjaChlKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkYoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGE9MDthPGFjLmxlbmd0aDthKyspRihhY1thXSxkKTticmVhaztjYXNlIFwic291cmNlXCI6RihcImVycm9yXCIsZCk7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RihcImVycm9yXCIsZCk7RihcImxvYWRcIixkKTticmVhaztjYXNlIFwiZm9ybVwiOkYoXCJyZXNldFwiLGQpO0YoXCJzdWJtaXRcIixkKTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkYoXCJ0b2dnbGVcIixkKTticmVhaztjYXNlIFwiaW5wdXRcIjpBYihkLGYpO0YoXCJpbnZhbGlkXCIsZCk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpkLl93cmFwcGVyU3RhdGU9XG57d2FzTXVsdGlwbGU6ISFmLm11bHRpcGxlfTtGKFwiaW52YWxpZFwiLGQpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpKYihkLGYpLEYoXCJpbnZhbGlkXCIsZCkscmQoYyxcIm9uQ2hhbmdlXCIpfW9kKGUsZik7YT1udWxsO2Zvcih2YXIgZyBpbiBmKWlmKGYuaGFzT3duUHJvcGVydHkoZykpe3ZhciBoPWZbZ107XCJjaGlsZHJlblwiPT09Zz9cInN0cmluZ1wiPT09dHlwZW9mIGg/ZC50ZXh0Q29udGVudCE9PWgmJihhPVtcImNoaWxkcmVuXCIsaF0pOlwibnVtYmVyXCI9PT10eXBlb2YgaCYmZC50ZXh0Q29udGVudCE9PVwiXCIraCYmKGE9W1wiY2hpbGRyZW5cIixcIlwiK2hdKTpRYS5oYXNPd25Qcm9wZXJ0eShnKSYmbnVsbCE9aCYmcmQoYyxnKX1zd2l0Y2goZSl7Y2FzZSBcImlucHV0XCI6eGIoZCk7RWIoZCxmLCEwKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjp4YihkKTtMYihkKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGYub25DbGljayYmXG4oZC5vbmNsaWNrPXNkKX1jPWE7Yi51cGRhdGVRdWV1ZT1jO251bGwhPT1jJiYoYi5lZmZlY3RUYWd8PTQpfWVsc2V7Zz05PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudDthPT09cWQmJihhPU5iKGUpKTthPT09cWQ/XCJzY3JpcHRcIj09PWU/KGE9Zy5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGEuaW5uZXJIVE1MPVwiPHNjcmlwdD5cXHgzYy9zY3JpcHQ+XCIsYT1hLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCkpOlwic3RyaW5nXCI9PT10eXBlb2YgZC5pcz9hPWcuY3JlYXRlRWxlbWVudChlLHtpczpkLmlzfSk6KGE9Zy5jcmVhdGVFbGVtZW50KGUpLFwic2VsZWN0XCI9PT1lJiYoZz1hLGQubXVsdGlwbGU/Zy5tdWx0aXBsZT0hMDpkLnNpemUmJihnLnNpemU9ZC5zaXplKSkpOmE9Zy5jcmVhdGVFbGVtZW50TlMoYSxlKTthW01kXT1iO2FbTmRdPWQ7bmkoYSxiLCExLCExKTtiLnN0YXRlTm9kZT1hO2c9cGQoZSxkKTtzd2l0Y2goZSl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpGKFwibG9hZFwiLFxuYSk7aD1kO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihoPTA7aDxhYy5sZW5ndGg7aCsrKUYoYWNbaF0sYSk7aD1kO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpGKFwiZXJyb3JcIixhKTtoPWQ7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RihcImVycm9yXCIsYSk7RihcImxvYWRcIixhKTtoPWQ7YnJlYWs7Y2FzZSBcImZvcm1cIjpGKFwicmVzZXRcIixhKTtGKFwic3VibWl0XCIsYSk7aD1kO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RihcInRvZ2dsZVwiLGEpO2g9ZDticmVhaztjYXNlIFwiaW5wdXRcIjpBYihhLGQpO2g9emIoYSxkKTtGKFwiaW52YWxpZFwiLGEpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwib3B0aW9uXCI6aD1HYihhLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhZC5tdWx0aXBsZX07aD1uKHt9LGQse3ZhbHVlOnZvaWQgMH0pO0YoXCJpbnZhbGlkXCIsYSk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOkpiKGEsXG5kKTtoPUliKGEsZCk7RihcImludmFsaWRcIixhKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7ZGVmYXVsdDpoPWR9b2QoZSxoKTt2YXIgaz1oO2ZvcihmIGluIGspaWYoay5oYXNPd25Qcm9wZXJ0eShmKSl7dmFyIGw9a1tmXTtcInN0eWxlXCI9PT1mP21kKGEsbCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zj8obD1sP2wuX19odG1sOnZvaWQgMCxudWxsIT1sJiZRYihhLGwpKTpcImNoaWxkcmVuXCI9PT1mP1wic3RyaW5nXCI9PT10eXBlb2YgbD8oXCJ0ZXh0YXJlYVwiIT09ZXx8XCJcIiE9PWwpJiZSYihhLGwpOlwibnVtYmVyXCI9PT10eXBlb2YgbCYmUmIoYSxcIlwiK2wpOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1mJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09ZiYmXCJhdXRvRm9jdXNcIiE9PWYmJihRYS5oYXNPd25Qcm9wZXJ0eShmKT9udWxsIT1sJiZyZChjLGYpOm51bGwhPWwmJnFiKGEsZixsLGcpKX1zd2l0Y2goZSl7Y2FzZSBcImlucHV0XCI6eGIoYSk7RWIoYSxkLCExKTtcbmJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOnhiKGEpO0xiKGEpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1kLnZhbHVlJiZhLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIityYihkLnZhbHVlKSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEubXVsdGlwbGU9ISFkLm11bHRpcGxlO2M9ZC52YWx1ZTtudWxsIT1jP0hiKGEsISFkLm11bHRpcGxlLGMsITEpOm51bGwhPWQuZGVmYXVsdFZhbHVlJiZIYihhLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgaC5vbkNsaWNrJiYoYS5vbmNsaWNrPXNkKX1GZChlLGQpJiYoYi5lZmZlY3RUYWd8PTQpfW51bGwhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD0xMjgpfXJldHVybiBudWxsO2Nhc2UgNjppZihhJiZudWxsIT1iLnN0YXRlTm9kZSlxaShhLGIsYS5tZW1vaXplZFByb3BzLGQpO2Vsc2V7aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBkJiZudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IodSgxNjYpKTtcbmM9Y2goYmguY3VycmVudCk7Y2goJGcuY3VycmVudCk7V2goYik/KGM9Yi5zdGF0ZU5vZGUsZD1iLm1lbW9pemVkUHJvcHMsY1tNZF09YixjLm5vZGVWYWx1ZSE9PWQmJihiLmVmZmVjdFRhZ3w9NCkpOihjPSg5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZCksY1tNZF09YixiLnN0YXRlTm9kZT1jKX1yZXR1cm4gbnVsbDtjYXNlIDEzOkgoTSk7ZD1iLm1lbW9pemVkU3RhdGU7aWYoMCE9PShiLmVmZmVjdFRhZyY2NCkpcmV0dXJuIGIuZXhwaXJhdGlvblRpbWU9YyxiO2M9bnVsbCE9PWQ7ZD0hMTtudWxsPT09YT92b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMuZmFsbGJhY2smJldoKGIpOihlPWEubWVtb2l6ZWRTdGF0ZSxkPW51bGwhPT1lLGN8fG51bGw9PT1lfHwoZT1hLmNoaWxkLnNpYmxpbmcsbnVsbCE9PWUmJihmPWIuZmlyc3RFZmZlY3QsbnVsbCE9PWY/KGIuZmlyc3RFZmZlY3Q9ZSxlLm5leHRFZmZlY3Q9Zik6KGIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PVxuZSxlLm5leHRFZmZlY3Q9bnVsbCksZS5lZmZlY3RUYWc9OCkpKTtpZihjJiYhZCYmMCE9PShiLm1vZGUmMikpaWYobnVsbD09PWEmJiEwIT09Yi5tZW1vaXplZFByb3BzLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrfHwwIT09KE0uY3VycmVudCYxKSlTPT09dGkmJihTPXVpKTtlbHNle2lmKFM9PT10aXx8Uz09PXVpKVM9dmk7MCE9PXdpJiZudWxsIT09VCYmKHhpKFQsVSkseWkoVCx3aSkpfWlmKGN8fGQpYi5lZmZlY3RUYWd8PTQ7cmV0dXJuIG51bGw7Y2FzZSA0OnJldHVybiBlaCgpLG9pKGIpLG51bGw7Y2FzZSAxMDpyZXR1cm4gb2coYiksbnVsbDtjYXNlIDE3OnJldHVybiBMKGIudHlwZSkmJkRmKCksbnVsbDtjYXNlIDE5OkgoTSk7ZD1iLm1lbW9pemVkU3RhdGU7aWYobnVsbD09PWQpcmV0dXJuIG51bGw7ZT0wIT09KGIuZWZmZWN0VGFnJjY0KTtmPWQucmVuZGVyaW5nO2lmKG51bGw9PT1mKWlmKGUpcmkoZCwhMSk7ZWxzZXtpZihTIT09dGl8fG51bGwhPT1hJiYwIT09KGEuZWZmZWN0VGFnJlxuNjQpKWZvcihmPWIuY2hpbGQ7bnVsbCE9PWY7KXthPWhoKGYpO2lmKG51bGwhPT1hKXtiLmVmZmVjdFRhZ3w9NjQ7cmkoZCwhMSk7ZT1hLnVwZGF0ZVF1ZXVlO251bGwhPT1lJiYoYi51cGRhdGVRdWV1ZT1lLGIuZWZmZWN0VGFnfD00KTtudWxsPT09ZC5sYXN0RWZmZWN0JiYoYi5maXJzdEVmZmVjdD1udWxsKTtiLmxhc3RFZmZlY3Q9ZC5sYXN0RWZmZWN0O2ZvcihkPWIuY2hpbGQ7bnVsbCE9PWQ7KWU9ZCxmPWMsZS5lZmZlY3RUYWcmPTIsZS5uZXh0RWZmZWN0PW51bGwsZS5maXJzdEVmZmVjdD1udWxsLGUubGFzdEVmZmVjdD1udWxsLGE9ZS5hbHRlcm5hdGUsbnVsbD09PWE/KGUuY2hpbGRFeHBpcmF0aW9uVGltZT0wLGUuZXhwaXJhdGlvblRpbWU9ZixlLmNoaWxkPW51bGwsZS5tZW1vaXplZFByb3BzPW51bGwsZS5tZW1vaXplZFN0YXRlPW51bGwsZS51cGRhdGVRdWV1ZT1udWxsLGUuZGVwZW5kZW5jaWVzPW51bGwpOihlLmNoaWxkRXhwaXJhdGlvblRpbWU9YS5jaGlsZEV4cGlyYXRpb25UaW1lLFxuZS5leHBpcmF0aW9uVGltZT1hLmV4cGlyYXRpb25UaW1lLGUuY2hpbGQ9YS5jaGlsZCxlLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzLGUubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGUsZS51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGY9YS5kZXBlbmRlbmNpZXMsZS5kZXBlbmRlbmNpZXM9bnVsbD09PWY/bnVsbDp7ZXhwaXJhdGlvblRpbWU6Zi5leHBpcmF0aW9uVGltZSxmaXJzdENvbnRleHQ6Zi5maXJzdENvbnRleHQscmVzcG9uZGVyczpmLnJlc3BvbmRlcnN9KSxkPWQuc2libGluZztJKE0sTS5jdXJyZW50JjF8Mik7cmV0dXJuIGIuY2hpbGR9Zj1mLnNpYmxpbmd9fWVsc2V7aWYoIWUpaWYoYT1oaChmKSxudWxsIT09YSl7aWYoYi5lZmZlY3RUYWd8PTY0LGU9ITAsYz1hLnVwZGF0ZVF1ZXVlLG51bGwhPT1jJiYoYi51cGRhdGVRdWV1ZT1jLGIuZWZmZWN0VGFnfD00KSxyaShkLCEwKSxudWxsPT09ZC50YWlsJiZcImhpZGRlblwiPT09ZC50YWlsTW9kZSYmIWYuYWx0ZXJuYXRlKXJldHVybiBiPVxuYi5sYXN0RWZmZWN0PWQubGFzdEVmZmVjdCxudWxsIT09YiYmKGIubmV4dEVmZmVjdD1udWxsKSxudWxsfWVsc2UgMiokZigpLWQucmVuZGVyaW5nU3RhcnRUaW1lPmQudGFpbEV4cGlyYXRpb24mJjE8YyYmKGIuZWZmZWN0VGFnfD02NCxlPSEwLHJpKGQsITEpLGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPWMtMSk7ZC5pc0JhY2t3YXJkcz8oZi5zaWJsaW5nPWIuY2hpbGQsYi5jaGlsZD1mKTooYz1kLmxhc3QsbnVsbCE9PWM/Yy5zaWJsaW5nPWY6Yi5jaGlsZD1mLGQubGFzdD1mKX1yZXR1cm4gbnVsbCE9PWQudGFpbD8oMD09PWQudGFpbEV4cGlyYXRpb24mJihkLnRhaWxFeHBpcmF0aW9uPSRmKCkrNTAwKSxjPWQudGFpbCxkLnJlbmRlcmluZz1jLGQudGFpbD1jLnNpYmxpbmcsZC5sYXN0RWZmZWN0PWIubGFzdEVmZmVjdCxkLnJlbmRlcmluZ1N0YXJ0VGltZT0kZigpLGMuc2libGluZz1udWxsLGI9TS5jdXJyZW50LEkoTSxlP2ImMXwyOmImMSksYyk6bnVsbH10aHJvdyBFcnJvcih1KDE1NixcbmIudGFnKSk7fWZ1bmN0aW9uIHppKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAxOkwoYS50eXBlKSYmRGYoKTt2YXIgYj1hLmVmZmVjdFRhZztyZXR1cm4gYiY0MDk2PyhhLmVmZmVjdFRhZz1iJi00MDk3fDY0LGEpOm51bGw7Y2FzZSAzOmVoKCk7SChLKTtIKEopO2I9YS5lZmZlY3RUYWc7aWYoMCE9PShiJjY0KSl0aHJvdyBFcnJvcih1KDI4NSkpO2EuZWZmZWN0VGFnPWImLTQwOTd8NjQ7cmV0dXJuIGE7Y2FzZSA1OnJldHVybiBnaChhKSxudWxsO2Nhc2UgMTM6cmV0dXJuIEgoTSksYj1hLmVmZmVjdFRhZyxiJjQwOTY/KGEuZWZmZWN0VGFnPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDE5OnJldHVybiBIKE0pLG51bGw7Y2FzZSA0OnJldHVybiBlaCgpLG51bGw7Y2FzZSAxMDpyZXR1cm4gb2coYSksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1mdW5jdGlvbiBBaShhLGIpe3JldHVybnt2YWx1ZTphLHNvdXJjZTpiLHN0YWNrOkphKGIpfX1cbnZhciBCaT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha1NldD9XZWFrU2V0OlNldDtmdW5jdGlvbiBDaShhLGIpe3ZhciBjPWIuc291cmNlLGQ9Yi5zdGFjaztudWxsPT09ZCYmbnVsbCE9PWMmJihkPUphKGMpKTtudWxsIT09YyYmSWEoYy50eXBlKTtiPWIudmFsdWU7bnVsbCE9PWEmJjE9PT1hLnRhZyYmSWEoYS50eXBlKTt0cnl7Y29uc29sZS5lcnJvcihiKX1jYXRjaChlKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgZTt9KX19ZnVuY3Rpb24gRGkoYSxiKXt0cnl7Yi5wcm9wcz1hLm1lbW9pemVkUHJvcHMsYi5zdGF0ZT1hLm1lbW9pemVkU3RhdGUsYi5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGMpe0VpKGEsYyl9fWZ1bmN0aW9uIEZpKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe0VpKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIEdpKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6cmV0dXJuO2Nhc2UgMTppZihiLmVmZmVjdFRhZyYyNTYmJm51bGwhPT1hKXt2YXIgYz1hLm1lbW9pemVkUHJvcHMsZD1hLm1lbW9pemVkU3RhdGU7YT1iLnN0YXRlTm9kZTtiPWEuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoYi5lbGVtZW50VHlwZT09PWIudHlwZT9jOmlnKGIudHlwZSxjKSxkKTthLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlPWJ9cmV0dXJuO2Nhc2UgMzpjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OnJldHVybn10aHJvdyBFcnJvcih1KDE2MykpO31cbmZ1bmN0aW9uIEhpKGEsYil7Yj1iLnVwZGF0ZVF1ZXVlO2I9bnVsbCE9PWI/Yi5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWIpe3ZhciBjPWI9Yi5uZXh0O2Rve2lmKChjLnRhZyZhKT09PWEpe3ZhciBkPWMuZGVzdHJveTtjLmRlc3Ryb3k9dm9pZCAwO3ZvaWQgMCE9PWQmJmQoKX1jPWMubmV4dH13aGlsZShjIT09Yil9fWZ1bmN0aW9uIElpKGEsYil7Yj1iLnVwZGF0ZVF1ZXVlO2I9bnVsbCE9PWI/Yi5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWIpe3ZhciBjPWI9Yi5uZXh0O2Rve2lmKChjLnRhZyZhKT09PWEpe3ZhciBkPWMuY3JlYXRlO2MuZGVzdHJveT1kKCl9Yz1jLm5leHR9d2hpbGUoYyE9PWIpfX1cbmZ1bmN0aW9uIEppKGEsYixjKXtzd2l0Y2goYy50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpJaSgzLGMpO3JldHVybjtjYXNlIDE6YT1jLnN0YXRlTm9kZTtpZihjLmVmZmVjdFRhZyY0KWlmKG51bGw9PT1iKWEuY29tcG9uZW50RGlkTW91bnQoKTtlbHNle3ZhciBkPWMuZWxlbWVudFR5cGU9PT1jLnR5cGU/Yi5tZW1vaXplZFByb3BzOmlnKGMudHlwZSxiLm1lbW9pemVkUHJvcHMpO2EuY29tcG9uZW50RGlkVXBkYXRlKGQsYi5tZW1vaXplZFN0YXRlLGEuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUpfWI9Yy51cGRhdGVRdWV1ZTtudWxsIT09YiYmQ2coYyxiLGEpO3JldHVybjtjYXNlIDM6Yj1jLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthPW51bGw7aWYobnVsbCE9PWMuY2hpbGQpc3dpdGNoKGMuY2hpbGQudGFnKXtjYXNlIDU6YT1jLmNoaWxkLnN0YXRlTm9kZTticmVhaztjYXNlIDE6YT1jLmNoaWxkLnN0YXRlTm9kZX1DZyhjLGIsYSl9cmV0dXJuO1xuY2FzZSA1OmE9Yy5zdGF0ZU5vZGU7bnVsbD09PWImJmMuZWZmZWN0VGFnJjQmJkZkKGMudHlwZSxjLm1lbW9pemVkUHJvcHMpJiZhLmZvY3VzKCk7cmV0dXJuO2Nhc2UgNjpyZXR1cm47Y2FzZSA0OnJldHVybjtjYXNlIDEyOnJldHVybjtjYXNlIDEzOm51bGw9PT1jLm1lbW9pemVkU3RhdGUmJihjPWMuYWx0ZXJuYXRlLG51bGwhPT1jJiYoYz1jLm1lbW9pemVkU3RhdGUsbnVsbCE9PWMmJihjPWMuZGVoeWRyYXRlZCxudWxsIT09YyYmVmMoYykpKSk7cmV0dXJuO2Nhc2UgMTk6Y2FzZSAxNzpjYXNlIDIwOmNhc2UgMjE6cmV0dXJufXRocm93IEVycm9yKHUoMTYzKSk7fVxuZnVuY3Rpb24gS2koYSxiLGMpe1wiZnVuY3Rpb25cIj09PXR5cGVvZiBMaSYmTGkoYik7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6Y2FzZSAyMjphPWIudXBkYXRlUXVldWU7aWYobnVsbCE9PWEmJihhPWEubGFzdEVmZmVjdCxudWxsIT09YSkpe3ZhciBkPWEubmV4dDtjZyg5NzxjPzk3OmMsZnVuY3Rpb24oKXt2YXIgYT1kO2Rve3ZhciBjPWEuZGVzdHJveTtpZih2b2lkIDAhPT1jKXt2YXIgZz1iO3RyeXtjKCl9Y2F0Y2goaCl7RWkoZyxoKX19YT1hLm5leHR9d2hpbGUoYSE9PWQpfSl9YnJlYWs7Y2FzZSAxOkZpKGIpO2M9Yi5zdGF0ZU5vZGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGMuY29tcG9uZW50V2lsbFVubW91bnQmJkRpKGIsYyk7YnJlYWs7Y2FzZSA1OkZpKGIpO2JyZWFrO2Nhc2UgNDpNaShhLGIsYyl9fVxuZnVuY3Rpb24gTmkoYSl7dmFyIGI9YS5hbHRlcm5hdGU7YS5yZXR1cm49bnVsbDthLmNoaWxkPW51bGw7YS5tZW1vaXplZFN0YXRlPW51bGw7YS51cGRhdGVRdWV1ZT1udWxsO2EuZGVwZW5kZW5jaWVzPW51bGw7YS5hbHRlcm5hdGU9bnVsbDthLmZpcnN0RWZmZWN0PW51bGw7YS5sYXN0RWZmZWN0PW51bGw7YS5wZW5kaW5nUHJvcHM9bnVsbDthLm1lbW9pemVkUHJvcHM9bnVsbDthLnN0YXRlTm9kZT1udWxsO251bGwhPT1iJiZOaShiKX1mdW5jdGlvbiBPaShhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uIFBpKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKE9pKGIpKXt2YXIgYz1iO2JyZWFrIGF9Yj1iLnJldHVybn10aHJvdyBFcnJvcih1KDE2MCkpO31iPWMuc3RhdGVOb2RlO3N3aXRjaChjLnRhZyl7Y2FzZSA1OnZhciBkPSExO2JyZWFrO2Nhc2UgMzpiPWIuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2Nhc2UgNDpiPWIuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgxNjEpKTt9Yy5lZmZlY3RUYWcmMTYmJihSYihiLFwiXCIpLGMuZWZmZWN0VGFnJj0tMTcpO2E6Yjpmb3IoYz1hOzspe2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8T2koYy5yZXR1cm4pKXtjPW51bGw7YnJlYWsgYX1jPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Zm9yKGM9Yy5zaWJsaW5nOzUhPT1jLnRhZyYmNiE9PWMudGFnJiYxOCE9PWMudGFnOyl7aWYoYy5lZmZlY3RUYWcmMiljb250aW51ZSBiO1xuaWYobnVsbD09PWMuY2hpbGR8fDQ9PT1jLnRhZyljb250aW51ZSBiO2Vsc2UgYy5jaGlsZC5yZXR1cm49YyxjPWMuY2hpbGR9aWYoIShjLmVmZmVjdFRhZyYyKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1kP1FpKGEsYyxiKTpSaShhLGMsYil9XG5mdW5jdGlvbiBRaShhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj84PT09Yy5ub2RlVHlwZT9jLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGEsYik6Yy5pbnNlcnRCZWZvcmUoYSxiKTooOD09PWMubm9kZVR5cGU/KGI9Yy5wYXJlbnROb2RlLGIuaW5zZXJ0QmVmb3JlKGEsYykpOihiPWMsYi5hcHBlbmRDaGlsZChhKSksYz1jLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWMmJnZvaWQgMCE9PWN8fG51bGwhPT1iLm9uY2xpY2t8fChiLm9uY2xpY2s9c2QpKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoUWkoYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOylRaShhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBSaShhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj9jLmluc2VydEJlZm9yZShhLGIpOmMuYXBwZW5kQ2hpbGQoYSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKFJpKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspUmkoYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gTWkoYSxiLGMpe2Zvcih2YXIgZD1iLGU9ITEsZixnOzspe2lmKCFlKXtlPWQucmV0dXJuO2E6Zm9yKDs7KXtpZihudWxsPT09ZSl0aHJvdyBFcnJvcih1KDE2MCkpO2Y9ZS5zdGF0ZU5vZGU7c3dpdGNoKGUudGFnKXtjYXNlIDU6Zz0hMTticmVhayBhO2Nhc2UgMzpmPWYuY29udGFpbmVySW5mbztnPSEwO2JyZWFrIGE7Y2FzZSA0OmY9Zi5jb250YWluZXJJbmZvO2c9ITA7YnJlYWsgYX1lPWUucmV0dXJufWU9ITB9aWYoNT09PWQudGFnfHw2PT09ZC50YWcpe2E6Zm9yKHZhciBoPWEsaz1kLGw9YyxtPWs7OylpZihLaShoLG0sbCksbnVsbCE9PW0uY2hpbGQmJjQhPT1tLnRhZyltLmNoaWxkLnJldHVybj1tLG09bS5jaGlsZDtlbHNle2lmKG09PT1rKWJyZWFrIGE7Zm9yKDtudWxsPT09bS5zaWJsaW5nOyl7aWYobnVsbD09PW0ucmV0dXJufHxtLnJldHVybj09PWspYnJlYWsgYTttPW0ucmV0dXJufW0uc2libGluZy5yZXR1cm49bS5yZXR1cm47bT1tLnNpYmxpbmd9Zz8oaD1cbmYsaz1kLnN0YXRlTm9kZSw4PT09aC5ub2RlVHlwZT9oLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoayk6aC5yZW1vdmVDaGlsZChrKSk6Zi5yZW1vdmVDaGlsZChkLnN0YXRlTm9kZSl9ZWxzZSBpZig0PT09ZC50YWcpe2lmKG51bGwhPT1kLmNoaWxkKXtmPWQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87Zz0hMDtkLmNoaWxkLnJldHVybj1kO2Q9ZC5jaGlsZDtjb250aW51ZX19ZWxzZSBpZihLaShhLGQsYyksbnVsbCE9PWQuY2hpbGQpe2QuY2hpbGQucmV0dXJuPWQ7ZD1kLmNoaWxkO2NvbnRpbnVlfWlmKGQ9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWQuc2libGluZzspe2lmKG51bGw9PT1kLnJldHVybnx8ZC5yZXR1cm49PT1iKXJldHVybjtkPWQucmV0dXJuOzQ9PT1kLnRhZyYmKGU9ITEpfWQuc2libGluZy5yZXR1cm49ZC5yZXR1cm47ZD1kLnNpYmxpbmd9fVxuZnVuY3Rpb24gU2koYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpjYXNlIDIyOkhpKDMsYik7cmV0dXJuO2Nhc2UgMTpyZXR1cm47Y2FzZSA1OnZhciBjPWIuc3RhdGVOb2RlO2lmKG51bGwhPWMpe3ZhciBkPWIubWVtb2l6ZWRQcm9wcyxlPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpkO2E9Yi50eXBlO3ZhciBmPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO2lmKG51bGwhPT1mKXtjW05kXT1kO1wiaW5wdXRcIj09PWEmJlwicmFkaW9cIj09PWQudHlwZSYmbnVsbCE9ZC5uYW1lJiZCYihjLGQpO3BkKGEsZSk7Yj1wZChhLGQpO2ZvcihlPTA7ZTxmLmxlbmd0aDtlKz0yKXt2YXIgZz1mW2VdLGg9ZltlKzFdO1wic3R5bGVcIj09PWc/bWQoYyxoKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP1FiKGMsaCk6XCJjaGlsZHJlblwiPT09Zz9SYihjLGgpOnFiKGMsZyxoLGIpfXN3aXRjaChhKXtjYXNlIFwiaW5wdXRcIjpDYihjLGQpO2JyZWFrO1xuY2FzZSBcInRleHRhcmVhXCI6S2IoYyxkKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGUsYy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlPSEhZC5tdWx0aXBsZSxhPWQudmFsdWUsbnVsbCE9YT9IYihjLCEhZC5tdWx0aXBsZSxhLCExKTpiIT09ISFkLm11bHRpcGxlJiYobnVsbCE9ZC5kZWZhdWx0VmFsdWU/SGIoYywhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsITApOkhiKGMsISFkLm11bHRpcGxlLGQubXVsdGlwbGU/W106XCJcIiwhMSkpfX19cmV0dXJuO2Nhc2UgNjppZihudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IodSgxNjIpKTtiLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yi5tZW1vaXplZFByb3BzO3JldHVybjtjYXNlIDM6Yj1iLnN0YXRlTm9kZTtiLmh5ZHJhdGUmJihiLmh5ZHJhdGU9ITEsVmMoYi5jb250YWluZXJJbmZvKSk7cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6Yz1iO251bGw9PT1iLm1lbW9pemVkU3RhdGU/XG5kPSExOihkPSEwLGM9Yi5jaGlsZCxUaT0kZigpKTtpZihudWxsIT09YylhOmZvcihhPWM7Oyl7aWYoNT09PWEudGFnKWY9YS5zdGF0ZU5vZGUsZD8oZj1mLnN0eWxlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLnNldFByb3BlcnR5P2Yuc2V0UHJvcGVydHkoXCJkaXNwbGF5XCIsXCJub25lXCIsXCJpbXBvcnRhbnRcIik6Zi5kaXNwbGF5PVwibm9uZVwiKTooZj1hLnN0YXRlTm9kZSxlPWEubWVtb2l6ZWRQcm9wcy5zdHlsZSxlPXZvaWQgMCE9PWUmJm51bGwhPT1lJiZlLmhhc093blByb3BlcnR5KFwiZGlzcGxheVwiKT9lLmRpc3BsYXk6bnVsbCxmLnN0eWxlLmRpc3BsYXk9bGQoXCJkaXNwbGF5XCIsZSkpO2Vsc2UgaWYoNj09PWEudGFnKWEuc3RhdGVOb2RlLm5vZGVWYWx1ZT1kP1wiXCI6YS5tZW1vaXplZFByb3BzO2Vsc2UgaWYoMTM9PT1hLnRhZyYmbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYmbnVsbD09PWEubWVtb2l6ZWRTdGF0ZS5kZWh5ZHJhdGVkKXtmPWEuY2hpbGQuc2libGluZztmLnJldHVybj1hO2E9XG5mO2NvbnRpbnVlfWVsc2UgaWYobnVsbCE9PWEuY2hpbGQpe2EuY2hpbGQucmV0dXJuPWE7YT1hLmNoaWxkO2NvbnRpbnVlfWlmKGE9PT1jKWJyZWFrO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1jKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfVVpKGIpO3JldHVybjtjYXNlIDE5OlVpKGIpO3JldHVybjtjYXNlIDE3OnJldHVybn10aHJvdyBFcnJvcih1KDE2MykpO31mdW5jdGlvbiBVaShhKXt2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbD09PWMmJihjPWEuc3RhdGVOb2RlPW5ldyBCaSk7Yi5mb3JFYWNoKGZ1bmN0aW9uKGIpe3ZhciBkPVZpLmJpbmQobnVsbCxhLGIpO2MuaGFzKGIpfHwoYy5hZGQoYiksYi50aGVuKGQsZCkpfSl9fVxudmFyIFdpPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwO2Z1bmN0aW9uIFhpKGEsYixjKXtjPXdnKGMsbnVsbCk7Yy50YWc9MztjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7WWl8fChZaT0hMCxaaT1kKTtDaShhLGIpfTtyZXR1cm4gY31cbmZ1bmN0aW9uICRpKGEsYixjKXtjPXdnKGMsbnVsbCk7Yy50YWc9Mzt2YXIgZD1hLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZT1iLnZhbHVlO2MucGF5bG9hZD1mdW5jdGlvbigpe0NpKGEsYik7cmV0dXJuIGQoZSl9fXZhciBmPWEuc3RhdGVOb2RlO251bGwhPT1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5jb21wb25lbnREaWRDYXRjaCYmKGMuY2FsbGJhY2s9ZnVuY3Rpb24oKXtcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCYmKG51bGw9PT1haj9haj1uZXcgU2V0KFt0aGlzXSk6YWouYWRkKHRoaXMpLENpKGEsYikpO3ZhciBjPWIuc3RhY2s7dGhpcy5jb21wb25lbnREaWRDYXRjaChiLnZhbHVlLHtjb21wb25lbnRTdGFjazpudWxsIT09Yz9jOlwiXCJ9KX0pO3JldHVybiBjfVxudmFyIGJqPU1hdGguY2VpbCxjaj1wYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGRqPXBhLlJlYWN0Q3VycmVudE93bmVyLFY9MCxlaj04LGZqPTE2LGdqPTMyLHRpPTAsaGo9MSxpaj0yLHVpPTMsdmk9NCxqaj01LFc9VixUPW51bGwsWD1udWxsLFU9MCxTPXRpLGtqPW51bGwsbGo9MTA3Mzc0MTgyMyxtaj0xMDczNzQxODIzLG5qPW51bGwsd2k9MCxvaj0hMSxUaT0wLHBqPTUwMCxZPW51bGwsWWk9ITEsWmk9bnVsbCxhaj1udWxsLHFqPSExLHJqPW51bGwsc2o9OTAsdGo9bnVsbCx1aj0wLHZqPW51bGwsd2o9MDtmdW5jdGlvbiBHZygpe3JldHVybihXJihmanxnaikpIT09Vj8xMDczNzQxODIxLSgkZigpLzEwfDApOjAhPT13aj93ajp3aj0xMDczNzQxODIxLSgkZigpLzEwfDApfVxuZnVuY3Rpb24gSGcoYSxiLGMpe2I9Yi5tb2RlO2lmKDA9PT0oYiYyKSlyZXR1cm4gMTA3Mzc0MTgyMzt2YXIgZD1hZygpO2lmKDA9PT0oYiY0KSlyZXR1cm4gOTk9PT1kPzEwNzM3NDE4MjM6MTA3Mzc0MTgyMjtpZigoVyZmaikhPT1WKXJldHVybiBVO2lmKG51bGwhPT1jKWE9aGcoYSxjLnRpbWVvdXRNc3wwfHw1RTMsMjUwKTtlbHNlIHN3aXRjaChkKXtjYXNlIDk5OmE9MTA3Mzc0MTgyMzticmVhaztjYXNlIDk4OmE9aGcoYSwxNTAsMTAwKTticmVhaztjYXNlIDk3OmNhc2UgOTY6YT1oZyhhLDVFMywyNTApO2JyZWFrO2Nhc2UgOTU6YT0yO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMjYpKTt9bnVsbCE9PVQmJmE9PT1VJiYtLWE7cmV0dXJuIGF9XG5mdW5jdGlvbiBJZyhhLGIpe2lmKDUwPHVqKXRocm93IHVqPTAsdmo9bnVsbCxFcnJvcih1KDE4NSkpO2E9eGooYSxiKTtpZihudWxsIT09YSl7dmFyIGM9YWcoKTsxMDczNzQxODIzPT09Yj8oVyZlaikhPT1WJiYoVyYoZmp8Z2opKT09PVY/eWooYSk6KFooYSksVz09PVYmJmdnKCkpOlooYSk7KFcmNCk9PT1WfHw5OCE9PWMmJjk5IT09Y3x8KG51bGw9PT10aj90aj1uZXcgTWFwKFtbYSxiXV0pOihjPXRqLmdldChhKSwodm9pZCAwPT09Y3x8Yz5iKSYmdGouc2V0KGEsYikpKX19XG5mdW5jdGlvbiB4aihhLGIpe2EuZXhwaXJhdGlvblRpbWU8YiYmKGEuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8YiYmKGMuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGQ9YS5yZXR1cm4sZT1udWxsO2lmKG51bGw9PT1kJiYzPT09YS50YWcpZT1hLnN0YXRlTm9kZTtlbHNlIGZvcig7bnVsbCE9PWQ7KXtjPWQuYWx0ZXJuYXRlO2QuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoZC5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO251bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtpZihudWxsPT09ZC5yZXR1cm4mJjM9PT1kLnRhZyl7ZT1kLnN0YXRlTm9kZTticmVha31kPWQucmV0dXJufW51bGwhPT1lJiYoVD09PWUmJihCZyhiKSxTPT09dmkmJnhpKGUsVSkpLHlpKGUsYikpO3JldHVybiBlfVxuZnVuY3Rpb24gemooYSl7dmFyIGI9YS5sYXN0RXhwaXJlZFRpbWU7aWYoMCE9PWIpcmV0dXJuIGI7Yj1hLmZpcnN0UGVuZGluZ1RpbWU7aWYoIUFqKGEsYikpcmV0dXJuIGI7dmFyIGM9YS5sYXN0UGluZ2VkVGltZTthPWEubmV4dEtub3duUGVuZGluZ0xldmVsO2E9Yz5hP2M6YTtyZXR1cm4gMj49YSYmYiE9PWE/MDphfVxuZnVuY3Rpb24gWihhKXtpZigwIT09YS5sYXN0RXhwaXJlZFRpbWUpYS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjMsYS5jYWxsYmFja1ByaW9yaXR5PTk5LGEuY2FsbGJhY2tOb2RlPWVnKHlqLmJpbmQobnVsbCxhKSk7ZWxzZXt2YXIgYj16aihhKSxjPWEuY2FsbGJhY2tOb2RlO2lmKDA9PT1iKW51bGwhPT1jJiYoYS5jYWxsYmFja05vZGU9bnVsbCxhLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9MCxhLmNhbGxiYWNrUHJpb3JpdHk9OTApO2Vsc2V7dmFyIGQ9R2coKTsxMDczNzQxODIzPT09Yj9kPTk5OjE9PT1ifHwyPT09Yj9kPTk1OihkPTEwKigxMDczNzQxODIxLWIpLTEwKigxMDczNzQxODIxLWQpLGQ9MD49ZD85OToyNTA+PWQ/OTg6NTI1MD49ZD85Nzo5NSk7aWYobnVsbCE9PWMpe3ZhciBlPWEuY2FsbGJhY2tQcmlvcml0eTtpZihhLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9PT1iJiZlPj1kKXJldHVybjtjIT09VGYmJktmKGMpfWEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT1cbmI7YS5jYWxsYmFja1ByaW9yaXR5PWQ7Yj0xMDczNzQxODIzPT09Yj9lZyh5ai5iaW5kKG51bGwsYSkpOmRnKGQsQmouYmluZChudWxsLGEpLHt0aW1lb3V0OjEwKigxMDczNzQxODIxLWIpLSRmKCl9KTthLmNhbGxiYWNrTm9kZT1ifX19XG5mdW5jdGlvbiBCaihhLGIpe3dqPTA7aWYoYilyZXR1cm4gYj1HZygpLENqKGEsYiksWihhKSxudWxsO3ZhciBjPXpqKGEpO2lmKDAhPT1jKXtiPWEuY2FsbGJhY2tOb2RlO2lmKChXJihmanxnaikpIT09Vil0aHJvdyBFcnJvcih1KDMyNykpO0RqKCk7YT09PVQmJmM9PT1VfHxFaihhLGMpO2lmKG51bGwhPT1YKXt2YXIgZD1XO1d8PWZqO3ZhciBlPUZqKCk7ZG8gdHJ5e0dqKCk7YnJlYWt9Y2F0Y2goaCl7SGooYSxoKX13aGlsZSgxKTtuZygpO1c9ZDtjai5jdXJyZW50PWU7aWYoUz09PWhqKXRocm93IGI9a2osRWooYSxjKSx4aShhLGMpLFooYSksYjtpZihudWxsPT09WClzd2l0Y2goZT1hLmZpbmlzaGVkV29yaz1hLmN1cnJlbnQuYWx0ZXJuYXRlLGEuZmluaXNoZWRFeHBpcmF0aW9uVGltZT1jLGQ9UyxUPW51bGwsZCl7Y2FzZSB0aTpjYXNlIGhqOnRocm93IEVycm9yKHUoMzQ1KSk7Y2FzZSBpajpDaihhLDI8Yz8yOmMpO2JyZWFrO2Nhc2UgdWk6eGkoYSxjKTtkPWEubGFzdFN1c3BlbmRlZFRpbWU7XG5jPT09ZCYmKGEubmV4dEtub3duUGVuZGluZ0xldmVsPUlqKGUpKTtpZigxMDczNzQxODIzPT09bGomJihlPVRpK3BqLSRmKCksMTA8ZSkpe2lmKG9qKXt2YXIgZj1hLmxhc3RQaW5nZWRUaW1lO2lmKDA9PT1mfHxmPj1jKXthLmxhc3RQaW5nZWRUaW1lPWM7RWooYSxjKTticmVha319Zj16aihhKTtpZigwIT09ZiYmZiE9PWMpYnJlYWs7aWYoMCE9PWQmJmQhPT1jKXthLmxhc3RQaW5nZWRUaW1lPWQ7YnJlYWt9YS50aW1lb3V0SGFuZGxlPUhkKEpqLmJpbmQobnVsbCxhKSxlKTticmVha31KaihhKTticmVhaztjYXNlIHZpOnhpKGEsYyk7ZD1hLmxhc3RTdXNwZW5kZWRUaW1lO2M9PT1kJiYoYS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9SWooZSkpO2lmKG9qJiYoZT1hLmxhc3RQaW5nZWRUaW1lLDA9PT1lfHxlPj1jKSl7YS5sYXN0UGluZ2VkVGltZT1jO0VqKGEsYyk7YnJlYWt9ZT16aihhKTtpZigwIT09ZSYmZSE9PWMpYnJlYWs7aWYoMCE9PWQmJmQhPT1jKXthLmxhc3RQaW5nZWRUaW1lPVxuZDticmVha30xMDczNzQxODIzIT09bWo/ZD0xMCooMTA3Mzc0MTgyMS1taiktJGYoKToxMDczNzQxODIzPT09bGo/ZD0wOihkPTEwKigxMDczNzQxODIxLWxqKS01RTMsZT0kZigpLGM9MTAqKDEwNzM3NDE4MjEtYyktZSxkPWUtZCwwPmQmJihkPTApLGQ9KDEyMD5kPzEyMDo0ODA+ZD80ODA6MTA4MD5kPzEwODA6MTkyMD5kPzE5MjA6M0UzPmQ/M0UzOjQzMjA+ZD80MzIwOjE5NjAqYmooZC8xOTYwKSktZCxjPGQmJihkPWMpKTtpZigxMDxkKXthLnRpbWVvdXRIYW5kbGU9SGQoSmouYmluZChudWxsLGEpLGQpO2JyZWFrfUpqKGEpO2JyZWFrO2Nhc2Ugamo6aWYoMTA3Mzc0MTgyMyE9PWxqJiZudWxsIT09bmope2Y9bGo7dmFyIGc9bmo7ZD1nLmJ1c3lNaW5EdXJhdGlvbk1zfDA7MD49ZD9kPTA6KGU9Zy5idXN5RGVsYXlNc3wwLGY9JGYoKS0oMTAqKDEwNzM3NDE4MjEtZiktKGcudGltZW91dE1zfDB8fDVFMykpLGQ9Zjw9ZT8wOmUrZC1mKTtpZigxMDxkKXt4aShhLGMpO2EudGltZW91dEhhbmRsZT1cbkhkKEpqLmJpbmQobnVsbCxhKSxkKTticmVha319SmooYSk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMyOSkpO31aKGEpO2lmKGEuY2FsbGJhY2tOb2RlPT09YilyZXR1cm4gQmouYmluZChudWxsLGEpfX1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIHlqKGEpe3ZhciBiPWEubGFzdEV4cGlyZWRUaW1lO2I9MCE9PWI/YjoxMDczNzQxODIzO2lmKChXJihmanxnaikpIT09Vil0aHJvdyBFcnJvcih1KDMyNykpO0RqKCk7YT09PVQmJmI9PT1VfHxFaihhLGIpO2lmKG51bGwhPT1YKXt2YXIgYz1XO1d8PWZqO3ZhciBkPUZqKCk7ZG8gdHJ5e0tqKCk7YnJlYWt9Y2F0Y2goZSl7SGooYSxlKX13aGlsZSgxKTtuZygpO1c9Yztjai5jdXJyZW50PWQ7aWYoUz09PWhqKXRocm93IGM9a2osRWooYSxiKSx4aShhLGIpLFooYSksYztpZihudWxsIT09WCl0aHJvdyBFcnJvcih1KDI2MSkpO2EuZmluaXNoZWRXb3JrPWEuY3VycmVudC5hbHRlcm5hdGU7YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPWI7VD1udWxsO0pqKGEpO1ooYSl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gTGooKXtpZihudWxsIT09dGope3ZhciBhPXRqO3RqPW51bGw7YS5mb3JFYWNoKGZ1bmN0aW9uKGEsYyl7Q2ooYyxhKTtaKGMpfSk7Z2coKX19XG5mdW5jdGlvbiBNaihhLGIpe3ZhciBjPVc7V3w9MTt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtXPWMsVz09PVYmJmdnKCl9fWZ1bmN0aW9uIE5qKGEsYil7dmFyIGM9VztXJj0tMjtXfD1lajt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtXPWMsVz09PVYmJmdnKCl9fVxuZnVuY3Rpb24gRWooYSxiKXthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRFeHBpcmF0aW9uVGltZT0wO3ZhciBjPWEudGltZW91dEhhbmRsZTstMSE9PWMmJihhLnRpbWVvdXRIYW5kbGU9LTEsSWQoYykpO2lmKG51bGwhPT1YKWZvcihjPVgucmV0dXJuO251bGwhPT1jOyl7dmFyIGQ9Yztzd2l0Y2goZC50YWcpe2Nhc2UgMTpkPWQudHlwZS5jaGlsZENvbnRleHRUeXBlcztudWxsIT09ZCYmdm9pZCAwIT09ZCYmRGYoKTticmVhaztjYXNlIDM6ZWgoKTtIKEspO0goSik7YnJlYWs7Y2FzZSA1OmdoKGQpO2JyZWFrO2Nhc2UgNDplaCgpO2JyZWFrO2Nhc2UgMTM6SChNKTticmVhaztjYXNlIDE5OkgoTSk7YnJlYWs7Y2FzZSAxMDpvZyhkKX1jPWMucmV0dXJufVQ9YTtYPVNnKGEuY3VycmVudCxudWxsKTtVPWI7Uz10aTtraj1udWxsO21qPWxqPTEwNzM3NDE4MjM7bmo9bnVsbDt3aT0wO29qPSExfVxuZnVuY3Rpb24gSGooYSxiKXtkb3t0cnl7bmcoKTtqaC5jdXJyZW50PXNoO2lmKG1oKWZvcih2YXIgYz1OLm1lbW9pemVkU3RhdGU7bnVsbCE9PWM7KXt2YXIgZD1jLnF1ZXVlO251bGwhPT1kJiYoZC5wZW5kaW5nPW51bGwpO2M9Yy5uZXh0fWxoPTA7UD1PPU49bnVsbDttaD0hMTtpZihudWxsPT09WHx8bnVsbD09PVgucmV0dXJuKXJldHVybiBTPWhqLGtqPWIsWD1udWxsO2E6e3ZhciBlPWEsZj1YLnJldHVybixnPVgsaD1iO2I9VTtnLmVmZmVjdFRhZ3w9MjA0ODtnLmZpcnN0RWZmZWN0PWcubGFzdEVmZmVjdD1udWxsO2lmKG51bGwhPT1oJiZcIm9iamVjdFwiPT09dHlwZW9mIGgmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBoLnRoZW4pe3ZhciBrPWg7aWYoMD09PShnLm1vZGUmMikpe3ZhciBsPWcuYWx0ZXJuYXRlO2w/KGcubWVtb2l6ZWRTdGF0ZT1sLm1lbW9pemVkU3RhdGUsZy5leHBpcmF0aW9uVGltZT1sLmV4cGlyYXRpb25UaW1lKTpnLm1lbW9pemVkU3RhdGU9bnVsbH12YXIgbT0wIT09XG4oTS5jdXJyZW50JjEpLHA9Zjtkb3t2YXIgeDtpZih4PTEzPT09cC50YWcpe3ZhciB6PXAubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09eil4PW51bGwhPT16LmRlaHlkcmF0ZWQ/ITA6ITE7ZWxzZXt2YXIgY2E9cC5tZW1vaXplZFByb3BzO3g9dm9pZCAwPT09Y2EuZmFsbGJhY2s/ITE6ITAhPT1jYS51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjaz8hMDptPyExOiEwfX1pZih4KXt2YXIgRD1wLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1EKXt2YXIgdD1uZXcgU2V0O3QuYWRkKGspO3AudXBkYXRlUXVldWU9dH1lbHNlIEQuYWRkKGspO2lmKDA9PT0ocC5tb2RlJjIpKXtwLmVmZmVjdFRhZ3w9NjQ7Zy5lZmZlY3RUYWcmPS0yOTgxO2lmKDE9PT1nLnRhZylpZihudWxsPT09Zy5hbHRlcm5hdGUpZy50YWc9MTc7ZWxzZXt2YXIgeT13ZygxMDczNzQxODIzLG51bGwpO3kudGFnPTI7eGcoZyx5KX1nLmV4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjM7YnJlYWsgYX1oPXZvaWQgMDtnPWI7dmFyIEE9ZS5waW5nQ2FjaGU7XG5udWxsPT09QT8oQT1lLnBpbmdDYWNoZT1uZXcgV2ksaD1uZXcgU2V0LEEuc2V0KGssaCkpOihoPUEuZ2V0KGspLHZvaWQgMD09PWgmJihoPW5ldyBTZXQsQS5zZXQoayxoKSkpO2lmKCFoLmhhcyhnKSl7aC5hZGQoZyk7dmFyIHE9T2ouYmluZChudWxsLGUsayxnKTtrLnRoZW4ocSxxKX1wLmVmZmVjdFRhZ3w9NDA5NjtwLmV4cGlyYXRpb25UaW1lPWI7YnJlYWsgYX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKTtoPUVycm9yKChJYShnLnR5cGUpfHxcIkEgUmVhY3QgY29tcG9uZW50XCIpK1wiIHN1c3BlbmRlZCB3aGlsZSByZW5kZXJpbmcsIGJ1dCBubyBmYWxsYmFjayBVSSB3YXMgc3BlY2lmaWVkLlxcblxcbkFkZCBhIDxTdXNwZW5zZSBmYWxsYmFjaz0uLi4+IGNvbXBvbmVudCBoaWdoZXIgaW4gdGhlIHRyZWUgdG8gcHJvdmlkZSBhIGxvYWRpbmcgaW5kaWNhdG9yIG9yIHBsYWNlaG9sZGVyIHRvIGRpc3BsYXkuXCIrSmEoZykpfVMhPT1qaiYmKFM9aWopO2g9QWkoaCxnKTtwPWY7ZG97c3dpdGNoKHAudGFnKXtjYXNlIDM6az1cbmg7cC5lZmZlY3RUYWd8PTQwOTY7cC5leHBpcmF0aW9uVGltZT1iO3ZhciBCPVhpKHAsayxiKTt5ZyhwLEIpO2JyZWFrIGE7Y2FzZSAxOms9aDt2YXIgdz1wLnR5cGUsdWI9cC5zdGF0ZU5vZGU7aWYoMD09PShwLmVmZmVjdFRhZyY2NCkmJihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fG51bGwhPT11YiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHViLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PWFqfHwhYWouaGFzKHViKSkpKXtwLmVmZmVjdFRhZ3w9NDA5NjtwLmV4cGlyYXRpb25UaW1lPWI7dmFyIHZiPSRpKHAsayxiKTt5ZyhwLHZiKTticmVhayBhfX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKX1YPVBqKFgpfWNhdGNoKFhjKXtiPVhjO2NvbnRpbnVlfWJyZWFrfXdoaWxlKDEpfWZ1bmN0aW9uIEZqKCl7dmFyIGE9Y2ouY3VycmVudDtjai5jdXJyZW50PXNoO3JldHVybiBudWxsPT09YT9zaDphfVxuZnVuY3Rpb24gQWcoYSxiKXthPGxqJiYyPGEmJihsaj1hKTtudWxsIT09YiYmYTxtaiYmMjxhJiYobWo9YSxuaj1iKX1mdW5jdGlvbiBCZyhhKXthPndpJiYod2k9YSl9ZnVuY3Rpb24gS2ooKXtmb3IoO251bGwhPT1YOylYPVFqKFgpfWZ1bmN0aW9uIEdqKCl7Zm9yKDtudWxsIT09WCYmIVVmKCk7KVg9UWooWCl9ZnVuY3Rpb24gUWooYSl7dmFyIGI9UmooYS5hbHRlcm5hdGUsYSxVKTthLm1lbW9pemVkUHJvcHM9YS5wZW5kaW5nUHJvcHM7bnVsbD09PWImJihiPVBqKGEpKTtkai5jdXJyZW50PW51bGw7cmV0dXJuIGJ9XG5mdW5jdGlvbiBQaihhKXtYPWE7ZG97dmFyIGI9WC5hbHRlcm5hdGU7YT1YLnJldHVybjtpZigwPT09KFguZWZmZWN0VGFnJjIwNDgpKXtiPXNpKGIsWCxVKTtpZigxPT09VXx8MSE9PVguY2hpbGRFeHBpcmF0aW9uVGltZSl7Zm9yKHZhciBjPTAsZD1YLmNoaWxkO251bGwhPT1kOyl7dmFyIGU9ZC5leHBpcmF0aW9uVGltZSxmPWQuY2hpbGRFeHBpcmF0aW9uVGltZTtlPmMmJihjPWUpO2Y+YyYmKGM9Zik7ZD1kLnNpYmxpbmd9WC5jaGlsZEV4cGlyYXRpb25UaW1lPWN9aWYobnVsbCE9PWIpcmV0dXJuIGI7bnVsbCE9PWEmJjA9PT0oYS5lZmZlY3RUYWcmMjA0OCkmJihudWxsPT09YS5maXJzdEVmZmVjdCYmKGEuZmlyc3RFZmZlY3Q9WC5maXJzdEVmZmVjdCksbnVsbCE9PVgubGFzdEVmZmVjdCYmKG51bGwhPT1hLmxhc3RFZmZlY3QmJihhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1YLmZpcnN0RWZmZWN0KSxhLmxhc3RFZmZlY3Q9WC5sYXN0RWZmZWN0KSwxPFguZWZmZWN0VGFnJiYobnVsbCE9PVxuYS5sYXN0RWZmZWN0P2EubGFzdEVmZmVjdC5uZXh0RWZmZWN0PVg6YS5maXJzdEVmZmVjdD1YLGEubGFzdEVmZmVjdD1YKSl9ZWxzZXtiPXppKFgpO2lmKG51bGwhPT1iKXJldHVybiBiLmVmZmVjdFRhZyY9MjA0NyxiO251bGwhPT1hJiYoYS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9bnVsbCxhLmVmZmVjdFRhZ3w9MjA0OCl9Yj1YLnNpYmxpbmc7aWYobnVsbCE9PWIpcmV0dXJuIGI7WD1hfXdoaWxlKG51bGwhPT1YKTtTPT09dGkmJihTPWpqKTtyZXR1cm4gbnVsbH1mdW5jdGlvbiBJaihhKXt2YXIgYj1hLmV4cGlyYXRpb25UaW1lO2E9YS5jaGlsZEV4cGlyYXRpb25UaW1lO3JldHVybiBiPmE/YjphfWZ1bmN0aW9uIEpqKGEpe3ZhciBiPWFnKCk7Y2coOTksU2ouYmluZChudWxsLGEsYikpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gU2ooYSxiKXtkbyBEaigpO3doaWxlKG51bGwhPT1yaik7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMzI3KSk7dmFyIGM9YS5maW5pc2hlZFdvcmssZD1hLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDtpZihjPT09YS5jdXJyZW50KXRocm93IEVycm9yKHUoMTc3KSk7YS5jYWxsYmFja05vZGU9bnVsbDthLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9MDthLmNhbGxiYWNrUHJpb3JpdHk9OTA7YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDt2YXIgZT1JaihjKTthLmZpcnN0UGVuZGluZ1RpbWU9ZTtkPD1hLmxhc3RTdXNwZW5kZWRUaW1lP2EuZmlyc3RTdXNwZW5kZWRUaW1lPWEubGFzdFN1c3BlbmRlZFRpbWU9YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDpkPD1hLmZpcnN0U3VzcGVuZGVkVGltZSYmKGEuZmlyc3RTdXNwZW5kZWRUaW1lPVxuZC0xKTtkPD1hLmxhc3RQaW5nZWRUaW1lJiYoYS5sYXN0UGluZ2VkVGltZT0wKTtkPD1hLmxhc3RFeHBpcmVkVGltZSYmKGEubGFzdEV4cGlyZWRUaW1lPTApO2E9PT1UJiYoWD1UPW51bGwsVT0wKTsxPGMuZWZmZWN0VGFnP251bGwhPT1jLmxhc3RFZmZlY3Q/KGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsZT1jLmZpcnN0RWZmZWN0KTplPWM6ZT1jLmZpcnN0RWZmZWN0O2lmKG51bGwhPT1lKXt2YXIgZj1XO1d8PWdqO2RqLmN1cnJlbnQ9bnVsbDtEZD1mZDt2YXIgZz14ZCgpO2lmKHlkKGcpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBnKXZhciBoPXtzdGFydDpnLnNlbGVjdGlvblN0YXJ0LGVuZDpnLnNlbGVjdGlvbkVuZH07ZWxzZSBhOntoPShoPWcub3duZXJEb2N1bWVudCkmJmguZGVmYXVsdFZpZXd8fHdpbmRvdzt2YXIgaz1oLmdldFNlbGVjdGlvbiYmaC5nZXRTZWxlY3Rpb24oKTtpZihrJiYwIT09ay5yYW5nZUNvdW50KXtoPWsuYW5jaG9yTm9kZTt2YXIgbD1rLmFuY2hvck9mZnNldCxcbm09ay5mb2N1c05vZGU7az1rLmZvY3VzT2Zmc2V0O3RyeXtoLm5vZGVUeXBlLG0ubm9kZVR5cGV9Y2F0Y2god2Ipe2g9bnVsbDticmVhayBhfXZhciBwPTAseD0tMSx6PS0xLGNhPTAsRD0wLHQ9Zyx5PW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgQTs7KXt0IT09aHx8MCE9PWwmJjMhPT10Lm5vZGVUeXBlfHwoeD1wK2wpO3QhPT1tfHwwIT09ayYmMyE9PXQubm9kZVR5cGV8fCh6PXArayk7Mz09PXQubm9kZVR5cGUmJihwKz10Lm5vZGVWYWx1ZS5sZW5ndGgpO2lmKG51bGw9PT0oQT10LmZpcnN0Q2hpbGQpKWJyZWFrO3k9dDt0PUF9Zm9yKDs7KXtpZih0PT09ZylicmVhayBiO3k9PT1oJiYrK2NhPT09bCYmKHg9cCk7eT09PW0mJisrRD09PWsmJih6PXApO2lmKG51bGwhPT0oQT10Lm5leHRTaWJsaW5nKSlicmVhazt0PXk7eT10LnBhcmVudE5vZGV9dD1BfWg9LTE9PT14fHwtMT09PXo/bnVsbDp7c3RhcnQ6eCxlbmQ6en19ZWxzZSBoPW51bGx9aD1ofHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBoPVxubnVsbDtFZD17YWN0aXZlRWxlbWVudERldGFjaGVkOm51bGwsZm9jdXNlZEVsZW06ZyxzZWxlY3Rpb25SYW5nZTpofTtmZD0hMTtZPWU7ZG8gdHJ5e1RqKCl9Y2F0Y2god2Ipe2lmKG51bGw9PT1ZKXRocm93IEVycm9yKHUoMzMwKSk7RWkoWSx3Yik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO1k9ZTtkbyB0cnl7Zm9yKGc9YSxoPWI7bnVsbCE9PVk7KXt2YXIgcT1ZLmVmZmVjdFRhZztxJjE2JiZSYihZLnN0YXRlTm9kZSxcIlwiKTtpZihxJjEyOCl7dmFyIEI9WS5hbHRlcm5hdGU7aWYobnVsbCE9PUIpe3ZhciB3PUIucmVmO251bGwhPT13JiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHc/dyhudWxsKTp3LmN1cnJlbnQ9bnVsbCl9fXN3aXRjaChxJjEwMzgpe2Nhc2UgMjpQaShZKTtZLmVmZmVjdFRhZyY9LTM7YnJlYWs7Y2FzZSA2OlBpKFkpO1kuZWZmZWN0VGFnJj0tMztTaShZLmFsdGVybmF0ZSxZKTticmVhaztjYXNlIDEwMjQ6WS5lZmZlY3RUYWcmPS0xMDI1O2JyZWFrO2Nhc2UgMTAyODpZLmVmZmVjdFRhZyY9XG4tMTAyNTtTaShZLmFsdGVybmF0ZSxZKTticmVhaztjYXNlIDQ6U2koWS5hbHRlcm5hdGUsWSk7YnJlYWs7Y2FzZSA4Omw9WSxNaShnLGwsaCksTmkobCl9WT1ZLm5leHRFZmZlY3R9fWNhdGNoKHdiKXtpZihudWxsPT09WSl0aHJvdyBFcnJvcih1KDMzMCkpO0VpKFksd2IpO1k9WS5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1ZKTt3PUVkO0I9eGQoKTtxPXcuZm9jdXNlZEVsZW07aD13LnNlbGVjdGlvblJhbmdlO2lmKEIhPT1xJiZxJiZxLm93bmVyRG9jdW1lbnQmJndkKHEub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQscSkpe251bGwhPT1oJiZ5ZChxKSYmKEI9aC5zdGFydCx3PWguZW5kLHZvaWQgMD09PXcmJih3PUIpLFwic2VsZWN0aW9uU3RhcnRcImluIHE/KHEuc2VsZWN0aW9uU3RhcnQ9QixxLnNlbGVjdGlvbkVuZD1NYXRoLm1pbih3LHEudmFsdWUubGVuZ3RoKSk6KHc9KEI9cS5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJkIuZGVmYXVsdFZpZXd8fHdpbmRvdyx3LmdldFNlbGVjdGlvbiYmXG4odz13LmdldFNlbGVjdGlvbigpLGw9cS50ZXh0Q29udGVudC5sZW5ndGgsZz1NYXRoLm1pbihoLnN0YXJ0LGwpLGg9dm9pZCAwPT09aC5lbmQ/ZzpNYXRoLm1pbihoLmVuZCxsKSwhdy5leHRlbmQmJmc+aCYmKGw9aCxoPWcsZz1sKSxsPXZkKHEsZyksbT12ZChxLGgpLGwmJm0mJigxIT09dy5yYW5nZUNvdW50fHx3LmFuY2hvck5vZGUhPT1sLm5vZGV8fHcuYW5jaG9yT2Zmc2V0IT09bC5vZmZzZXR8fHcuZm9jdXNOb2RlIT09bS5ub2RlfHx3LmZvY3VzT2Zmc2V0IT09bS5vZmZzZXQpJiYoQj1CLmNyZWF0ZVJhbmdlKCksQi5zZXRTdGFydChsLm5vZGUsbC5vZmZzZXQpLHcucmVtb3ZlQWxsUmFuZ2VzKCksZz5oPyh3LmFkZFJhbmdlKEIpLHcuZXh0ZW5kKG0ubm9kZSxtLm9mZnNldCkpOihCLnNldEVuZChtLm5vZGUsbS5vZmZzZXQpLHcuYWRkUmFuZ2UoQikpKSkpKTtCPVtdO2Zvcih3PXE7dz13LnBhcmVudE5vZGU7KTE9PT13Lm5vZGVUeXBlJiZCLnB1c2goe2VsZW1lbnQ6dyxsZWZ0Oncuc2Nyb2xsTGVmdCxcbnRvcDp3LnNjcm9sbFRvcH0pO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBxLmZvY3VzJiZxLmZvY3VzKCk7Zm9yKHE9MDtxPEIubGVuZ3RoO3ErKyl3PUJbcV0sdy5lbGVtZW50LnNjcm9sbExlZnQ9dy5sZWZ0LHcuZWxlbWVudC5zY3JvbGxUb3A9dy50b3B9ZmQ9ISFEZDtFZD1EZD1udWxsO2EuY3VycmVudD1jO1k9ZTtkbyB0cnl7Zm9yKHE9YTtudWxsIT09WTspe3ZhciB1Yj1ZLmVmZmVjdFRhZzt1YiYzNiYmSmkocSxZLmFsdGVybmF0ZSxZKTtpZih1YiYxMjgpe0I9dm9pZCAwO3ZhciB2Yj1ZLnJlZjtpZihudWxsIT09dmIpe3ZhciBYYz1ZLnN0YXRlTm9kZTtzd2l0Y2goWS50YWcpe2Nhc2UgNTpCPVhjO2JyZWFrO2RlZmF1bHQ6Qj1YY31cImZ1bmN0aW9uXCI9PT10eXBlb2YgdmI/dmIoQik6dmIuY3VycmVudD1CfX1ZPVkubmV4dEVmZmVjdH19Y2F0Y2god2Ipe2lmKG51bGw9PT1ZKXRocm93IEVycm9yKHUoMzMwKSk7RWkoWSx3Yik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO1k9XG5udWxsO1ZmKCk7Vz1mfWVsc2UgYS5jdXJyZW50PWM7aWYocWopcWo9ITEscmo9YSxzaj1iO2Vsc2UgZm9yKFk9ZTtudWxsIT09WTspYj1ZLm5leHRFZmZlY3QsWS5uZXh0RWZmZWN0PW51bGwsWT1iO2I9YS5maXJzdFBlbmRpbmdUaW1lOzA9PT1iJiYoYWo9bnVsbCk7MTA3Mzc0MTgyMz09PWI/YT09PXZqP3VqKys6KHVqPTAsdmo9YSk6dWo9MDtcImZ1bmN0aW9uXCI9PT10eXBlb2YgVWomJlVqKGMuc3RhdGVOb2RlLGQpO1ooYSk7aWYoWWkpdGhyb3cgWWk9ITEsYT1aaSxaaT1udWxsLGE7aWYoKFcmZWopIT09VilyZXR1cm4gbnVsbDtnZygpO3JldHVybiBudWxsfWZ1bmN0aW9uIFRqKCl7Zm9yKDtudWxsIT09WTspe3ZhciBhPVkuZWZmZWN0VGFnOzAhPT0oYSYyNTYpJiZHaShZLmFsdGVybmF0ZSxZKTswPT09KGEmNTEyKXx8cWp8fChxaj0hMCxkZyg5NyxmdW5jdGlvbigpe0RqKCk7cmV0dXJuIG51bGx9KSk7WT1ZLm5leHRFZmZlY3R9fVxuZnVuY3Rpb24gRGooKXtpZig5MCE9PXNqKXt2YXIgYT05Nzxzaj85Nzpzajtzaj05MDtyZXR1cm4gY2coYSxWail9fWZ1bmN0aW9uIFZqKCl7aWYobnVsbD09PXJqKXJldHVybiExO3ZhciBhPXJqO3JqPW51bGw7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMzMxKSk7dmFyIGI9VztXfD1najtmb3IoYT1hLmN1cnJlbnQuZmlyc3RFZmZlY3Q7bnVsbCE9PWE7KXt0cnl7dmFyIGM9YTtpZigwIT09KGMuZWZmZWN0VGFnJjUxMikpc3dpdGNoKGMudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6SGkoNSxjKSxJaSg1LGMpfX1jYXRjaChkKXtpZihudWxsPT09YSl0aHJvdyBFcnJvcih1KDMzMCkpO0VpKGEsZCl9Yz1hLm5leHRFZmZlY3Q7YS5uZXh0RWZmZWN0PW51bGw7YT1jfVc9YjtnZygpO3JldHVybiEwfVxuZnVuY3Rpb24gV2ooYSxiLGMpe2I9QWkoYyxiKTtiPVhpKGEsYiwxMDczNzQxODIzKTt4ZyhhLGIpO2E9eGooYSwxMDczNzQxODIzKTtudWxsIT09YSYmWihhKX1mdW5jdGlvbiBFaShhLGIpe2lmKDM9PT1hLnRhZylXaihhLGEsYik7ZWxzZSBmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtpZigzPT09Yy50YWcpe1dqKGMsYSxiKTticmVha31lbHNlIGlmKDE9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGMudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PWFqfHwhYWouaGFzKGQpKSl7YT1BaShiLGEpO2E9JGkoYyxhLDEwNzM3NDE4MjMpO3hnKGMsYSk7Yz14aihjLDEwNzM3NDE4MjMpO251bGwhPT1jJiZaKGMpO2JyZWFrfX1jPWMucmV0dXJufX1cbmZ1bmN0aW9uIE9qKGEsYixjKXt2YXIgZD1hLnBpbmdDYWNoZTtudWxsIT09ZCYmZC5kZWxldGUoYik7VD09PWEmJlU9PT1jP1M9PT12aXx8Uz09PXVpJiYxMDczNzQxODIzPT09bGomJiRmKCktVGk8cGo/RWooYSxVKTpvaj0hMDpBaihhLGMpJiYoYj1hLmxhc3RQaW5nZWRUaW1lLDAhPT1iJiZiPGN8fChhLmxhc3RQaW5nZWRUaW1lPWMsWihhKSkpfWZ1bmN0aW9uIFZpKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbCE9PWMmJmMuZGVsZXRlKGIpO2I9MDswPT09YiYmKGI9R2coKSxiPUhnKGIsYSxudWxsKSk7YT14aihhLGIpO251bGwhPT1hJiZaKGEpfXZhciBSajtcblJqPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1iLmV4cGlyYXRpb25UaW1lO2lmKG51bGwhPT1hKXt2YXIgZT1iLnBlbmRpbmdQcm9wcztpZihhLm1lbW9pemVkUHJvcHMhPT1lfHxLLmN1cnJlbnQpcmc9ITA7ZWxzZXtpZihkPGMpe3JnPSExO3N3aXRjaChiLnRhZyl7Y2FzZSAzOmhpKGIpO1hoKCk7YnJlYWs7Y2FzZSA1OmZoKGIpO2lmKGIubW9kZSY0JiYxIT09YyYmZS5oaWRkZW4pcmV0dXJuIGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPTEsbnVsbDticmVhaztjYXNlIDE6TChiLnR5cGUpJiZHZihiKTticmVhaztjYXNlIDQ6ZGgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOmQ9Yi5tZW1vaXplZFByb3BzLnZhbHVlO2U9Yi50eXBlLl9jb250ZXh0O0koamcsZS5fY3VycmVudFZhbHVlKTtlLl9jdXJyZW50VmFsdWU9ZDticmVhaztjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2Q9Yi5jaGlsZC5jaGlsZEV4cGlyYXRpb25UaW1lO1xuaWYoMCE9PWQmJmQ+PWMpcmV0dXJuIGppKGEsYixjKTtJKE0sTS5jdXJyZW50JjEpO2I9JGgoYSxiLGMpO3JldHVybiBudWxsIT09Yj9iLnNpYmxpbmc6bnVsbH1JKE0sTS5jdXJyZW50JjEpO2JyZWFrO2Nhc2UgMTk6ZD1iLmNoaWxkRXhwaXJhdGlvblRpbWU+PWM7aWYoMCE9PShhLmVmZmVjdFRhZyY2NCkpe2lmKGQpcmV0dXJuIG1pKGEsYixjKTtiLmVmZmVjdFRhZ3w9NjR9ZT1iLm1lbW9pemVkU3RhdGU7bnVsbCE9PWUmJihlLnJlbmRlcmluZz1udWxsLGUudGFpbD1udWxsKTtJKE0sTS5jdXJyZW50KTtpZighZClyZXR1cm4gbnVsbH1yZXR1cm4gJGgoYSxiLGMpfXJnPSExfX1lbHNlIHJnPSExO2IuZXhwaXJhdGlvblRpbWU9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPWIudHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7YT1iLnBlbmRpbmdQcm9wcztlPUNmKGIsSi5jdXJyZW50KTtxZyhiLGMpO2U9b2gobnVsbCxcbmIsZCxhLGUsYyk7Yi5lZmZlY3RUYWd8PTE7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBlJiZudWxsIT09ZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGUucmVuZGVyJiZ2b2lkIDA9PT1lLiQkdHlwZW9mKXtiLnRhZz0xO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtpZihMKGQpKXt2YXIgZj0hMDtHZihiKX1lbHNlIGY9ITE7Yi5tZW1vaXplZFN0YXRlPW51bGwhPT1lLnN0YXRlJiZ2b2lkIDAhPT1lLnN0YXRlP2Uuc3RhdGU6bnVsbDt1ZyhiKTt2YXIgZz1kLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmRmcoYixkLGcsYSk7ZS51cGRhdGVyPUpnO2Iuc3RhdGVOb2RlPWU7ZS5fcmVhY3RJbnRlcm5hbEZpYmVyPWI7TmcoYixkLGEsYyk7Yj1naShudWxsLGIsZCwhMCxmLGMpfWVsc2UgYi50YWc9MCxSKG51bGwsYixlLGMpLGI9Yi5jaGlsZDtyZXR1cm4gYjtjYXNlIDE2OmE6e2U9Yi5lbGVtZW50VHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPVxubnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTthPWIucGVuZGluZ1Byb3BzO0hhKGUpO2lmKDEhPT1lLl9zdGF0dXMpdGhyb3cgZS5fcmVzdWx0O2U9ZS5fcmVzdWx0O2IudHlwZT1lO2Y9Yi50YWc9WGooZSk7YT1pZyhlLGEpO3N3aXRjaChmKXtjYXNlIDA6Yj1kaShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxOmI9ZmkobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTE6Yj1aaChudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxNDpiPWFpKG51bGwsYixlLGlnKGUudHlwZSxhKSxkLGMpO2JyZWFrIGF9dGhyb3cgRXJyb3IodSgzMDYsZSxcIlwiKSk7fXJldHVybiBiO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6aWcoZCxlKSxkaShhLGIsZCxlLGMpO2Nhc2UgMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6aWcoZCxlKSxmaShhLGIsZCxlLGMpO1xuY2FzZSAzOmhpKGIpO2Q9Yi51cGRhdGVRdWV1ZTtpZihudWxsPT09YXx8bnVsbD09PWQpdGhyb3cgRXJyb3IodSgyODIpKTtkPWIucGVuZGluZ1Byb3BzO2U9Yi5tZW1vaXplZFN0YXRlO2U9bnVsbCE9PWU/ZS5lbGVtZW50Om51bGw7dmcoYSxiKTt6ZyhiLGQsbnVsbCxjKTtkPWIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50O2lmKGQ9PT1lKVhoKCksYj0kaChhLGIsYyk7ZWxzZXtpZihlPWIuc3RhdGVOb2RlLmh5ZHJhdGUpUGg9SmQoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mby5maXJzdENoaWxkKSxPaD1iLGU9UWg9ITA7aWYoZSlmb3IoYz1ZZyhiLG51bGwsZCxjKSxiLmNoaWxkPWM7YzspYy5lZmZlY3RUYWc9Yy5lZmZlY3RUYWcmLTN8MTAyNCxjPWMuc2libGluZztlbHNlIFIoYSxiLGQsYyksWGgoKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBmaChiKSxudWxsPT09YSYmVWgoYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpcbm51bGwsZz1lLmNoaWxkcmVuLEdkKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZHZChkLGYpJiYoYi5lZmZlY3RUYWd8PTE2KSxlaShhLGIpLGIubW9kZSY0JiYxIT09YyYmZS5oaWRkZW4/KGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPTEsYj1udWxsKTooUihhLGIsZyxjKSxiPWIuY2hpbGQpLGI7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmVWgoYiksbnVsbDtjYXNlIDEzOnJldHVybiBqaShhLGIsYyk7Y2FzZSA0OnJldHVybiBkaChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1YZyhiLG51bGwsZCxjKTpSKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6aWcoZCxlKSxaaChhLGIsZCxlLGMpO2Nhc2UgNzpyZXR1cm4gUihhLGIsYi5wZW5kaW5nUHJvcHMsYyksYi5jaGlsZDtjYXNlIDg6cmV0dXJuIFIoYSxcbmIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBSKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTA6YTp7ZD1iLnR5cGUuX2NvbnRleHQ7ZT1iLnBlbmRpbmdQcm9wcztnPWIubWVtb2l6ZWRQcm9wcztmPWUudmFsdWU7dmFyIGg9Yi50eXBlLl9jb250ZXh0O0koamcsaC5fY3VycmVudFZhbHVlKTtoLl9jdXJyZW50VmFsdWU9ZjtpZihudWxsIT09ZylpZihoPWcudmFsdWUsZj0kZShoLGYpPzA6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhoLGYpOjEwNzM3NDE4MjMpfDAsMD09PWYpe2lmKGcuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhSy5jdXJyZW50KXtiPSRoKGEsYixjKTticmVhayBhfX1lbHNlIGZvcihoPWIuY2hpbGQsbnVsbCE9PWgmJihoLnJldHVybj1iKTtudWxsIT09aDspe3ZhciBrPWguZGVwZW5kZW5jaWVzO2lmKG51bGwhPT1cbmspe2c9aC5jaGlsZDtmb3IodmFyIGw9ay5maXJzdENvbnRleHQ7bnVsbCE9PWw7KXtpZihsLmNvbnRleHQ9PT1kJiYwIT09KGwub2JzZXJ2ZWRCaXRzJmYpKXsxPT09aC50YWcmJihsPXdnKGMsbnVsbCksbC50YWc9Mix4ZyhoLGwpKTtoLmV4cGlyYXRpb25UaW1lPGMmJihoLmV4cGlyYXRpb25UaW1lPWMpO2w9aC5hbHRlcm5hdGU7bnVsbCE9PWwmJmwuZXhwaXJhdGlvblRpbWU8YyYmKGwuZXhwaXJhdGlvblRpbWU9Yyk7cGcoaC5yZXR1cm4sYyk7ay5leHBpcmF0aW9uVGltZTxjJiYoay5leHBpcmF0aW9uVGltZT1jKTticmVha31sPWwubmV4dH19ZWxzZSBnPTEwPT09aC50YWc/aC50eXBlPT09Yi50eXBlP251bGw6aC5jaGlsZDpoLmNoaWxkO2lmKG51bGwhPT1nKWcucmV0dXJuPWg7ZWxzZSBmb3IoZz1oO251bGwhPT1nOyl7aWYoZz09PWIpe2c9bnVsbDticmVha31oPWcuc2libGluZztpZihudWxsIT09aCl7aC5yZXR1cm49Zy5yZXR1cm47Zz1oO2JyZWFrfWc9Zy5yZXR1cm59aD1cbmd9UihhLGIsZS5jaGlsZHJlbixjKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA5OnJldHVybiBlPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGQ9Zi5jaGlsZHJlbixxZyhiLGMpLGU9c2coZSxmLnVuc3RhYmxlX29ic2VydmVkQml0cyksZD1kKGUpLGIuZWZmZWN0VGFnfD0xLFIoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDE0OnJldHVybiBlPWIudHlwZSxmPWlnKGUsYi5wZW5kaW5nUHJvcHMpLGY9aWcoZS50eXBlLGYpLGFpKGEsYixlLGYsZCxjKTtjYXNlIDE1OnJldHVybiBjaShhLGIsYi50eXBlLGIucGVuZGluZ1Byb3BzLGQsYyk7Y2FzZSAxNzpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6aWcoZCxlKSxudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksYi50YWc9MSxMKGQpPyhhPSEwLEdmKGIpKTphPSExLHFnKGIsYyksTGcoYixkLGUpLE5nKGIsZCxlLGMpLGdpKG51bGwsXG5iLGQsITAsYSxjKTtjYXNlIDE5OnJldHVybiBtaShhLGIsYyl9dGhyb3cgRXJyb3IodSgxNTYsYi50YWcpKTt9O3ZhciBVaj1udWxsLExpPW51bGw7ZnVuY3Rpb24gWWooYSl7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18pcmV0dXJuITE7dmFyIGI9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKGIuaXNEaXNhYmxlZHx8IWIuc3VwcG9ydHNGaWJlcilyZXR1cm4hMDt0cnl7dmFyIGM9Yi5pbmplY3QoYSk7VWo9ZnVuY3Rpb24oYSl7dHJ5e2Iub25Db21taXRGaWJlclJvb3QoYyxhLHZvaWQgMCw2ND09PShhLmN1cnJlbnQuZWZmZWN0VGFnJjY0KSl9Y2F0Y2goZSl7fX07TGk9ZnVuY3Rpb24oYSl7dHJ5e2Iub25Db21taXRGaWJlclVubW91bnQoYyxhKX1jYXRjaChlKXt9fX1jYXRjaChkKXt9cmV0dXJuITB9XG5mdW5jdGlvbiBaaihhLGIsYyxkKXt0aGlzLnRhZz1hO3RoaXMua2V5PWM7dGhpcy5zaWJsaW5nPXRoaXMuY2hpbGQ9dGhpcy5yZXR1cm49dGhpcy5zdGF0ZU5vZGU9dGhpcy50eXBlPXRoaXMuZWxlbWVudFR5cGU9bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5yZWY9bnVsbDt0aGlzLnBlbmRpbmdQcm9wcz1iO3RoaXMuZGVwZW5kZW5jaWVzPXRoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz1udWxsO3RoaXMubW9kZT1kO3RoaXMuZWZmZWN0VGFnPTA7dGhpcy5sYXN0RWZmZWN0PXRoaXMuZmlyc3RFZmZlY3Q9dGhpcy5uZXh0RWZmZWN0PW51bGw7dGhpcy5jaGlsZEV4cGlyYXRpb25UaW1lPXRoaXMuZXhwaXJhdGlvblRpbWU9MDt0aGlzLmFsdGVybmF0ZT1udWxsfWZ1bmN0aW9uIFNoKGEsYixjLGQpe3JldHVybiBuZXcgWmooYSxiLGMsZCl9XG5mdW5jdGlvbiBiaShhKXthPWEucHJvdG90eXBlO3JldHVybiEoIWF8fCFhLmlzUmVhY3RDb21wb25lbnQpfWZ1bmN0aW9uIFhqKGEpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBiaShhKT8xOjA7aWYodm9pZCAwIT09YSYmbnVsbCE9PWEpe2E9YS4kJHR5cGVvZjtpZihhPT09emEpcmV0dXJuIDExO2lmKGE9PT1DYSlyZXR1cm4gMTR9cmV0dXJuIDJ9XG5mdW5jdGlvbiBTZyhhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGw9PT1jPyhjPVNoKGEudGFnLGIsYS5rZXksYS5tb2RlKSxjLmVsZW1lbnRUeXBlPWEuZWxlbWVudFR5cGUsYy50eXBlPWEudHlwZSxjLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxjLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWMpOihjLnBlbmRpbmdQcm9wcz1iLGMuZWZmZWN0VGFnPTAsYy5uZXh0RWZmZWN0PW51bGwsYy5maXJzdEVmZmVjdD1udWxsLGMubGFzdEVmZmVjdD1udWxsKTtjLmNoaWxkRXhwaXJhdGlvblRpbWU9YS5jaGlsZEV4cGlyYXRpb25UaW1lO2MuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZTtjLmNoaWxkPWEuY2hpbGQ7Yy5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztjLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2MudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtiPWEuZGVwZW5kZW5jaWVzO2MuZGVwZW5kZW5jaWVzPW51bGw9PT1iP251bGw6e2V4cGlyYXRpb25UaW1lOmIuZXhwaXJhdGlvblRpbWUsXG5maXJzdENvbnRleHQ6Yi5maXJzdENvbnRleHQscmVzcG9uZGVyczpiLnJlc3BvbmRlcnN9O2Muc2libGluZz1hLnNpYmxpbmc7Yy5pbmRleD1hLmluZGV4O2MucmVmPWEucmVmO3JldHVybiBjfVxuZnVuY3Rpb24gVWcoYSxiLGMsZCxlLGYpe3ZhciBnPTI7ZD1hO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKWJpKGEpJiYoZz0xKTtlbHNlIGlmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlnPTU7ZWxzZSBhOnN3aXRjaChhKXtjYXNlIHRhOnJldHVybiBXZyhjLmNoaWxkcmVuLGUsZixiKTtjYXNlIHlhOmc9ODtlfD03O2JyZWFrO2Nhc2UgdWE6Zz04O2V8PTE7YnJlYWs7Y2FzZSB2YTpyZXR1cm4gYT1TaCgxMixjLGIsZXw4KSxhLmVsZW1lbnRUeXBlPXZhLGEudHlwZT12YSxhLmV4cGlyYXRpb25UaW1lPWYsYTtjYXNlIEFhOnJldHVybiBhPVNoKDEzLGMsYixlKSxhLnR5cGU9QWEsYS5lbGVtZW50VHlwZT1BYSxhLmV4cGlyYXRpb25UaW1lPWYsYTtjYXNlIEJhOnJldHVybiBhPVNoKDE5LGMsYixlKSxhLmVsZW1lbnRUeXBlPUJhLGEuZXhwaXJhdGlvblRpbWU9ZixhO2RlZmF1bHQ6aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSB3YTpnPVxuMTA7YnJlYWsgYTtjYXNlIHhhOmc9OTticmVhayBhO2Nhc2UgemE6Zz0xMTticmVhayBhO2Nhc2UgQ2E6Zz0xNDticmVhayBhO2Nhc2UgRGE6Zz0xNjtkPW51bGw7YnJlYWsgYTtjYXNlIEVhOmc9MjI7YnJlYWsgYX10aHJvdyBFcnJvcih1KDEzMCxudWxsPT1hP2E6dHlwZW9mIGEsXCJcIikpO31iPVNoKGcsYyxiLGUpO2IuZWxlbWVudFR5cGU9YTtiLnR5cGU9ZDtiLmV4cGlyYXRpb25UaW1lPWY7cmV0dXJuIGJ9ZnVuY3Rpb24gV2coYSxiLGMsZCl7YT1TaCg3LGEsZCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9ZnVuY3Rpb24gVGcoYSxiLGMpe2E9U2goNixhLG51bGwsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfVxuZnVuY3Rpb24gVmcoYSxiLGMpe2I9U2goNCxudWxsIT09YS5jaGlsZHJlbj9hLmNoaWxkcmVuOltdLGEua2V5LGIpO2IuZXhwaXJhdGlvblRpbWU9YztiLnN0YXRlTm9kZT17Y29udGFpbmVySW5mbzphLmNvbnRhaW5lckluZm8scGVuZGluZ0NoaWxkcmVuOm51bGwsaW1wbGVtZW50YXRpb246YS5pbXBsZW1lbnRhdGlvbn07cmV0dXJuIGJ9XG5mdW5jdGlvbiBhayhhLGIsYyl7dGhpcy50YWc9Yjt0aGlzLmN1cnJlbnQ9bnVsbDt0aGlzLmNvbnRhaW5lckluZm89YTt0aGlzLnBpbmdDYWNoZT10aGlzLnBlbmRpbmdDaGlsZHJlbj1udWxsO3RoaXMuZmluaXNoZWRFeHBpcmF0aW9uVGltZT0wO3RoaXMuZmluaXNoZWRXb3JrPW51bGw7dGhpcy50aW1lb3V0SGFuZGxlPS0xO3RoaXMucGVuZGluZ0NvbnRleHQ9dGhpcy5jb250ZXh0PW51bGw7dGhpcy5oeWRyYXRlPWM7dGhpcy5jYWxsYmFja05vZGU9bnVsbDt0aGlzLmNhbGxiYWNrUHJpb3JpdHk9OTA7dGhpcy5sYXN0RXhwaXJlZFRpbWU9dGhpcy5sYXN0UGluZ2VkVGltZT10aGlzLm5leHRLbm93blBlbmRpbmdMZXZlbD10aGlzLmxhc3RTdXNwZW5kZWRUaW1lPXRoaXMuZmlyc3RTdXNwZW5kZWRUaW1lPXRoaXMuZmlyc3RQZW5kaW5nVGltZT0wfVxuZnVuY3Rpb24gQWooYSxiKXt2YXIgYz1hLmZpcnN0U3VzcGVuZGVkVGltZTthPWEubGFzdFN1c3BlbmRlZFRpbWU7cmV0dXJuIDAhPT1jJiZjPj1iJiZhPD1ifWZ1bmN0aW9uIHhpKGEsYil7dmFyIGM9YS5maXJzdFN1c3BlbmRlZFRpbWUsZD1hLmxhc3RTdXNwZW5kZWRUaW1lO2M8YiYmKGEuZmlyc3RTdXNwZW5kZWRUaW1lPWIpO2lmKGQ+Ynx8MD09PWMpYS5sYXN0U3VzcGVuZGVkVGltZT1iO2I8PWEubGFzdFBpbmdlZFRpbWUmJihhLmxhc3RQaW5nZWRUaW1lPTApO2I8PWEubGFzdEV4cGlyZWRUaW1lJiYoYS5sYXN0RXhwaXJlZFRpbWU9MCl9XG5mdW5jdGlvbiB5aShhLGIpe2I+YS5maXJzdFBlbmRpbmdUaW1lJiYoYS5maXJzdFBlbmRpbmdUaW1lPWIpO3ZhciBjPWEuZmlyc3RTdXNwZW5kZWRUaW1lOzAhPT1jJiYoYj49Yz9hLmZpcnN0U3VzcGVuZGVkVGltZT1hLmxhc3RTdXNwZW5kZWRUaW1lPWEubmV4dEtub3duUGVuZGluZ0xldmVsPTA6Yj49YS5sYXN0U3VzcGVuZGVkVGltZSYmKGEubGFzdFN1c3BlbmRlZFRpbWU9YisxKSxiPmEubmV4dEtub3duUGVuZGluZ0xldmVsJiYoYS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9YikpfWZ1bmN0aW9uIENqKGEsYil7dmFyIGM9YS5sYXN0RXhwaXJlZFRpbWU7aWYoMD09PWN8fGM+YilhLmxhc3RFeHBpcmVkVGltZT1ifVxuZnVuY3Rpb24gYmsoYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9R2coKSxnPURnLnN1c3BlbnNlO2Y9SGcoZixlLGcpO2E6aWYoYyl7Yz1jLl9yZWFjdEludGVybmFsRmliZXI7Yjp7aWYoZGMoYykhPT1jfHwxIT09Yy50YWcpdGhyb3cgRXJyb3IodSgxNzApKTt2YXIgaD1jO2Rve3N3aXRjaChoLnRhZyl7Y2FzZSAzOmg9aC5zdGF0ZU5vZGUuY29udGV4dDticmVhayBiO2Nhc2UgMTppZihMKGgudHlwZSkpe2g9aC5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7YnJlYWsgYn19aD1oLnJldHVybn13aGlsZShudWxsIT09aCk7dGhyb3cgRXJyb3IodSgxNzEpKTt9aWYoMT09PWMudGFnKXt2YXIgaz1jLnR5cGU7aWYoTChrKSl7Yz1GZihjLGssaCk7YnJlYWsgYX19Yz1ofWVsc2UgYz1BZjtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPXdnKGYsZyk7Yi5wYXlsb2FkPXtlbGVtZW50OmF9O2Q9dm9pZCAwPT09XG5kP251bGw6ZDtudWxsIT09ZCYmKGIuY2FsbGJhY2s9ZCk7eGcoZSxiKTtJZyhlLGYpO3JldHVybiBmfWZ1bmN0aW9uIGNrKGEpe2E9YS5jdXJyZW50O2lmKCFhLmNoaWxkKXJldHVybiBudWxsO3N3aXRjaChhLmNoaWxkLnRhZyl7Y2FzZSA1OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZTtkZWZhdWx0OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZX19ZnVuY3Rpb24gZGsoYSxiKXthPWEubWVtb2l6ZWRTdGF0ZTtudWxsIT09YSYmbnVsbCE9PWEuZGVoeWRyYXRlZCYmYS5yZXRyeVRpbWU8YiYmKGEucmV0cnlUaW1lPWIpfWZ1bmN0aW9uIGVrKGEsYil7ZGsoYSxiKTsoYT1hLmFsdGVybmF0ZSkmJmRrKGEsYil9XG5mdW5jdGlvbiBmayhhLGIsYyl7Yz1udWxsIT1jJiYhMD09PWMuaHlkcmF0ZTt2YXIgZD1uZXcgYWsoYSxiLGMpLGU9U2goMyxudWxsLG51bGwsMj09PWI/NzoxPT09Yj8zOjApO2QuY3VycmVudD1lO2Uuc3RhdGVOb2RlPWQ7dWcoZSk7YVtPZF09ZC5jdXJyZW50O2MmJjAhPT1iJiZKYyhhLDk9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50KTt0aGlzLl9pbnRlcm5hbFJvb3Q9ZH1may5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe2JrKGEsdGhpcy5faW50ZXJuYWxSb290LG51bGwsbnVsbCl9O2ZrLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5faW50ZXJuYWxSb290LGI9YS5jb250YWluZXJJbmZvO2JrKG51bGwsYSxudWxsLGZ1bmN0aW9uKCl7YltPZF09bnVsbH0pfTtcbmZ1bmN0aW9uIGdrKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlJiYoOCE9PWEubm9kZVR5cGV8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1mdW5jdGlvbiBoayhhLGIpe2J8fChiPWE/OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YS5maXJzdENoaWxkOm51bGwsYj0hKCFifHwxIT09Yi5ub2RlVHlwZXx8IWIuaGFzQXR0cmlidXRlKFwiZGF0YS1yZWFjdHJvb3RcIikpKTtpZighYilmb3IodmFyIGM7Yz1hLmxhc3RDaGlsZDspYS5yZW1vdmVDaGlsZChjKTtyZXR1cm4gbmV3IGZrKGEsMCxiP3toeWRyYXRlOiEwfTp2b2lkIDApfVxuZnVuY3Rpb24gaWsoYSxiLGMsZCxlKXt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZil7dmFyIGc9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1jayhnKTtoLmNhbGwoYSl9fWJrKGIsZyxhLGUpfWVsc2V7Zj1jLl9yZWFjdFJvb3RDb250YWluZXI9aGsoYyxkKTtnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGs9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9Y2soZyk7ay5jYWxsKGEpfX1OaihmdW5jdGlvbigpe2JrKGIsZyxhLGUpfSl9cmV0dXJuIGNrKGcpfWZ1bmN0aW9uIGprKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6c2Esa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319XG53Yz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1oZyhHZygpLDE1MCwxMDApO0lnKGEsYik7ZWsoYSxiKX19O3hjPWZ1bmN0aW9uKGEpezEzPT09YS50YWcmJihJZyhhLDMpLGVrKGEsMykpfTt5Yz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1HZygpO2I9SGcoYixhLG51bGwpO0lnKGEsYik7ZWsoYSxiKX19O1xuVWE9ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpDYihhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9Yy5wYXJlbnROb2RlO2M9Yy5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZT1cIitKU09OLnN0cmluZ2lmeShcIlwiK2IpKyddW3R5cGU9XCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9UWQoZCk7aWYoIWUpdGhyb3cgRXJyb3IodSg5MCkpO3liKGQpO0NiKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjpLYihhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmSGIoYSwhIWMubXVsdGlwbGUsYiwhMSl9fTskYT1NajtcbmFiPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9VztXfD00O3RyeXtyZXR1cm4gY2coOTgsYS5iaW5kKG51bGwsYixjLGQsZSkpfWZpbmFsbHl7Vz1mLFc9PT1WJiZnZygpfX07YmI9ZnVuY3Rpb24oKXsoVyYoMXxmanxnaikpPT09ViYmKExqKCksRGooKSl9O2NiPWZ1bmN0aW9uKGEsYil7dmFyIGM9VztXfD0yO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1c9YyxXPT09ViYmZ2coKX19O2Z1bmN0aW9uIGtrKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7aWYoIWdrKGIpKXRocm93IEVycm9yKHUoMjAwKSk7cmV0dXJuIGprKGEsYixudWxsLGMpfXZhciBsaz17RXZlbnRzOltOYyxQZCxRZCxTYSxPYSxYZCxmdW5jdGlvbihhKXtqYyhhLFdkKX0sWWEsWmEsaWQsbWMsRGose2N1cnJlbnQ6ITF9XX07XG4oZnVuY3Rpb24oYSl7dmFyIGI9YS5maW5kRmliZXJCeUhvc3RJbnN0YW5jZTtyZXR1cm4gWWoobih7fSxhLHtvdmVycmlkZUhvb2tTdGF0ZTpudWxsLG92ZXJyaWRlUHJvcHM6bnVsbCxzZXRTdXNwZW5zZUhhbmRsZXI6bnVsbCxzY2hlZHVsZVVwZGF0ZTpudWxsLGN1cnJlbnREaXNwYXRjaGVyUmVmOnBhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7YT1oYyhhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGI/YihhKTpudWxsfSxmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2g6bnVsbCxzY2hlZHVsZVJlZnJlc2g6bnVsbCxzY2hlZHVsZVJvb3Q6bnVsbCxzZXRSZWZyZXNoSGFuZGxlcjpudWxsLGdldEN1cnJlbnRGaWJlcjpudWxsfSkpfSkoe2ZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOnRjLGJ1bmRsZVR5cGU6MCx2ZXJzaW9uOlwiMTYuMTMuMFwiLFxucmVuZGVyZXJQYWNrYWdlTmFtZTpcInJlYWN0LWRvbVwifSk7ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD1saztleHBvcnRzLmNyZWF0ZVBvcnRhbD1raztleHBvcnRzLmZpbmRET01Ob2RlPWZ1bmN0aW9uKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoMT09PWEubm9kZVR5cGUpcmV0dXJuIGE7dmFyIGI9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO2lmKHZvaWQgMD09PWIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcil0aHJvdyBFcnJvcih1KDE4OCkpO3Rocm93IEVycm9yKHUoMjY4LE9iamVjdC5rZXlzKGEpKSk7fWE9aGMoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfTtcbmV4cG9ydHMuZmx1c2hTeW5jPWZ1bmN0aW9uKGEsYil7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMTg3KSk7dmFyIGM9VztXfD0xO3RyeXtyZXR1cm4gY2coOTksYS5iaW5kKG51bGwsYikpfWZpbmFsbHl7Vz1jLGdnKCl9fTtleHBvcnRzLmh5ZHJhdGU9ZnVuY3Rpb24oYSxiLGMpe2lmKCFnayhiKSl0aHJvdyBFcnJvcih1KDIwMCkpO3JldHVybiBpayhudWxsLGEsYiwhMCxjKX07ZXhwb3J0cy5yZW5kZXI9ZnVuY3Rpb24oYSxiLGMpe2lmKCFnayhiKSl0aHJvdyBFcnJvcih1KDIwMCkpO3JldHVybiBpayhudWxsLGEsYiwhMSxjKX07XG5leHBvcnRzLnVubW91bnRDb21wb25lbnRBdE5vZGU9ZnVuY3Rpb24oYSl7aWYoIWdrKGEpKXRocm93IEVycm9yKHUoNDApKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhOaihmdW5jdGlvbigpe2lrKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGw7YVtPZF09bnVsbH0pfSksITApOiExfTtleHBvcnRzLnVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzPU1qO2V4cG9ydHMudW5zdGFibGVfY3JlYXRlUG9ydGFsPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGtrKGEsYiwyPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbCl9O1xuZXhwb3J0cy51bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyxkKXtpZighZ2soYykpdGhyb3cgRXJyb3IodSgyMDApKTtpZihudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFsRmliZXIpdGhyb3cgRXJyb3IodSgzOCkpO3JldHVybiBpayhhLGIsYywhMSxkKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTYuMTMuMFwiO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MC4xOS4wXG4gKiBzY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGYsZyxoLGssbDtcbmlmKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgTWVzc2FnZUNoYW5uZWwpe3ZhciBwPW51bGwscT1udWxsLHQ9ZnVuY3Rpb24oKXtpZihudWxsIT09cCl0cnl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtwKCEwLGEpO3A9bnVsbH1jYXRjaChiKXt0aHJvdyBzZXRUaW1lb3V0KHQsMCksYjt9fSx1PURhdGUubm93KCk7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gRGF0ZS5ub3coKS11fTtmPWZ1bmN0aW9uKGEpe251bGwhPT1wP3NldFRpbWVvdXQoZiwwLGEpOihwPWEsc2V0VGltZW91dCh0LDApKX07Zz1mdW5jdGlvbihhLGIpe3E9c2V0VGltZW91dChhLGIpfTtoPWZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KHEpfTtrPWZ1bmN0aW9uKCl7cmV0dXJuITF9O2w9ZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbigpe319ZWxzZXt2YXIgdz13aW5kb3cucGVyZm9ybWFuY2UseD13aW5kb3cuRGF0ZSxcbnk9d2luZG93LnNldFRpbWVvdXQsej13aW5kb3cuY2xlYXJUaW1lb3V0O2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgY29uc29sZSl7dmFyIEE9d2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBBJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBjYW5jZWxBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIil9aWYoXCJvYmplY3RcIj09PVxudHlwZW9mIHcmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiB3Lm5vdylleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiB3Lm5vdygpfTtlbHNle3ZhciBCPXgubm93KCk7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4geC5ub3coKS1CfX12YXIgQz0hMSxEPW51bGwsRT0tMSxGPTUsRz0wO2s9ZnVuY3Rpb24oKXtyZXR1cm4gZXhwb3J0cy51bnN0YWJsZV9ub3coKT49R307bD1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbihhKXswPmF8fDEyNTxhP2NvbnNvbGUuZXJyb3IoXCJmb3JjZUZyYW1lUmF0ZSB0YWtlcyBhIHBvc2l0aXZlIGludCBiZXR3ZWVuIDAgYW5kIDEyNSwgZm9yY2luZyBmcmFtZXJhdGVzIGhpZ2hlciB0aGFuIDEyNSBmcHMgaXMgbm90IHVuc3VwcG9ydGVkXCIpOkY9MDxhP01hdGguZmxvb3IoMUUzL2EpOjV9O3ZhciBIPW5ldyBNZXNzYWdlQ2hhbm5lbCxJPUgucG9ydDI7SC5wb3J0MS5vbm1lc3NhZ2U9XG5mdW5jdGlvbigpe2lmKG51bGwhPT1EKXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO0c9YStGO3RyeXtEKCEwLGEpP0kucG9zdE1lc3NhZ2UobnVsbCk6KEM9ITEsRD1udWxsKX1jYXRjaChiKXt0aHJvdyBJLnBvc3RNZXNzYWdlKG51bGwpLGI7fX1lbHNlIEM9ITF9O2Y9ZnVuY3Rpb24oYSl7RD1hO0N8fChDPSEwLEkucG9zdE1lc3NhZ2UobnVsbCkpfTtnPWZ1bmN0aW9uKGEsYil7RT15KGZ1bmN0aW9uKCl7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sYil9O2g9ZnVuY3Rpb24oKXt6KEUpO0U9LTF9fWZ1bmN0aW9uIEooYSxiKXt2YXIgYz1hLmxlbmd0aDthLnB1c2goYik7YTpmb3IoOzspe3ZhciBkPWMtMT4+PjEsZT1hW2RdO2lmKHZvaWQgMCE9PWUmJjA8SyhlLGIpKWFbZF09YixhW2NdPWUsYz1kO2Vsc2UgYnJlYWsgYX19ZnVuY3Rpb24gTChhKXthPWFbMF07cmV0dXJuIHZvaWQgMD09PWE/bnVsbDphfVxuZnVuY3Rpb24gTShhKXt2YXIgYj1hWzBdO2lmKHZvaWQgMCE9PWIpe3ZhciBjPWEucG9wKCk7aWYoYyE9PWIpe2FbMF09YzthOmZvcih2YXIgZD0wLGU9YS5sZW5ndGg7ZDxlOyl7dmFyIG09MiooZCsxKS0xLG49YVttXSx2PW0rMSxyPWFbdl07aWYodm9pZCAwIT09biYmMD5LKG4sYykpdm9pZCAwIT09ciYmMD5LKHIsbik/KGFbZF09cixhW3ZdPWMsZD12KTooYVtkXT1uLGFbbV09YyxkPW0pO2Vsc2UgaWYodm9pZCAwIT09ciYmMD5LKHIsYykpYVtkXT1yLGFbdl09YyxkPXY7ZWxzZSBicmVhayBhfX1yZXR1cm4gYn1yZXR1cm4gbnVsbH1mdW5jdGlvbiBLKGEsYil7dmFyIGM9YS5zb3J0SW5kZXgtYi5zb3J0SW5kZXg7cmV0dXJuIDAhPT1jP2M6YS5pZC1iLmlkfXZhciBOPVtdLE89W10sUD0xLFE9bnVsbCxSPTMsUz0hMSxUPSExLFU9ITE7XG5mdW5jdGlvbiBWKGEpe2Zvcih2YXIgYj1MKE8pO251bGwhPT1iOyl7aWYobnVsbD09PWIuY2FsbGJhY2spTShPKTtlbHNlIGlmKGIuc3RhcnRUaW1lPD1hKU0oTyksYi5zb3J0SW5kZXg9Yi5leHBpcmF0aW9uVGltZSxKKE4sYik7ZWxzZSBicmVhaztiPUwoTyl9fWZ1bmN0aW9uIFcoYSl7VT0hMTtWKGEpO2lmKCFUKWlmKG51bGwhPT1MKE4pKVQ9ITAsZihYKTtlbHNle3ZhciBiPUwoTyk7bnVsbCE9PWImJmcoVyxiLnN0YXJ0VGltZS1hKX19XG5mdW5jdGlvbiBYKGEsYil7VD0hMTtVJiYoVT0hMSxoKCkpO1M9ITA7dmFyIGM9Ujt0cnl7VihiKTtmb3IoUT1MKE4pO251bGwhPT1RJiYoIShRLmV4cGlyYXRpb25UaW1lPmIpfHxhJiYhaygpKTspe3ZhciBkPVEuY2FsbGJhY2s7aWYobnVsbCE9PWQpe1EuY2FsbGJhY2s9bnVsbDtSPVEucHJpb3JpdHlMZXZlbDt2YXIgZT1kKFEuZXhwaXJhdGlvblRpbWU8PWIpO2I9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZT9RLmNhbGxiYWNrPWU6UT09PUwoTikmJk0oTik7VihiKX1lbHNlIE0oTik7UT1MKE4pfWlmKG51bGwhPT1RKXZhciBtPSEwO2Vsc2V7dmFyIG49TChPKTtudWxsIT09biYmZyhXLG4uc3RhcnRUaW1lLWIpO209ITF9cmV0dXJuIG19ZmluYWxseXtRPW51bGwsUj1jLFM9ITF9fVxuZnVuY3Rpb24gWShhKXtzd2l0Y2goYSl7Y2FzZSAxOnJldHVybi0xO2Nhc2UgMjpyZXR1cm4gMjUwO2Nhc2UgNTpyZXR1cm4gMTA3Mzc0MTgyMztjYXNlIDQ6cmV0dXJuIDFFNDtkZWZhdWx0OnJldHVybiA1RTN9fXZhciBaPWw7ZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtleHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Mb3dQcmlvcml0eT00O2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX1Byb2ZpbGluZz1udWxsO2V4cG9ydHMudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk9MjtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe2EuY2FsbGJhY2s9bnVsbH07ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe1R8fFN8fChUPSEwLGYoWCkpfTtcbmV4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gUn07ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBMKE4pfTtleHBvcnRzLnVuc3RhYmxlX25leHQ9ZnVuY3Rpb24oYSl7c3dpdGNoKFIpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOnZhciBiPTM7YnJlYWs7ZGVmYXVsdDpiPVJ9dmFyIGM9UjtSPWI7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtSPWN9fTtleHBvcnRzLnVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX3JlcXVlc3RQYWludD1aO2V4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9UjtSPWE7dHJ5e3JldHVybiBiKCl9ZmluYWxseXtSPWN9fTtcbmV4cG9ydHMudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXt2YXIgZT1jLmRlbGF5O2U9XCJudW1iZXJcIj09PXR5cGVvZiBlJiYwPGU/ZCtlOmQ7Yz1cIm51bWJlclwiPT09dHlwZW9mIGMudGltZW91dD9jLnRpbWVvdXQ6WShhKX1lbHNlIGM9WShhKSxlPWQ7Yz1lK2M7YT17aWQ6UCsrLGNhbGxiYWNrOmIscHJpb3JpdHlMZXZlbDphLHN0YXJ0VGltZTplLGV4cGlyYXRpb25UaW1lOmMsc29ydEluZGV4Oi0xfTtlPmQ/KGEuc29ydEluZGV4PWUsSihPLGEpLG51bGw9PT1MKE4pJiZhPT09TChPKSYmKFU/aCgpOlU9ITAsZyhXLGUtZCkpKTooYS5zb3J0SW5kZXg9YyxKKE4sYSksVHx8U3x8KFQ9ITAsZihYKSkpO3JldHVybiBhfTtcbmV4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO1YoYSk7dmFyIGI9TChOKTtyZXR1cm4gYiE9PVEmJm51bGwhPT1RJiZudWxsIT09YiYmbnVsbCE9PWIuY2FsbGJhY2smJmIuc3RhcnRUaW1lPD1hJiZiLmV4cGlyYXRpb25UaW1lPFEuZXhwaXJhdGlvblRpbWV8fGsoKX07ZXhwb3J0cy51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9UjtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz1SO1I9Yjt0cnl7cmV0dXJuIGEuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7Uj1jfX19O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb24oKSB7fVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgdGhyb3cgZXJyO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcblxuICAgIGFueTogc2hpbSxcbiAgICBhcnJheU9mOiBnZXRTaGltLFxuICAgIGVsZW1lbnQ6IHNoaW0sXG4gICAgaW5zdGFuY2VPZjogZ2V0U2hpbSxcbiAgICBub2RlOiBzaGltLFxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxuICAgIG9uZU9mOiBnZXRTaGltLFxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcbiAgICBzaGFwZTogZ2V0U2hpbSxcbiAgICBleGFjdDogZ2V0U2hpbVxuICB9O1xuXG4gIFJlYWN0UHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzID0gZW1wdHlGdW5jdGlvbjtcbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIiwidmFyIGc7XG5cbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXG5nID0gKGZ1bmN0aW9uKCkge1xuXHRyZXR1cm4gdGhpcztcbn0pKCk7XG5cbnRyeSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxuXHRnID0gZyB8fCBuZXcgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xufSBjYXRjaCAoZSkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcbn1cblxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3Ncbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cblxubW9kdWxlLmV4cG9ydHMgPSBnO1xuIiwibW9kdWxlLmV4cG9ydHMgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIChhcnIpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcnIpID09ICdbb2JqZWN0IEFycmF5XSc7XG59O1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4xMy4wXG4gKiByZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLGM9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxkPWI/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixlPWI/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGY9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsZz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxoPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGs9Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxsPWI/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEsbT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsbj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixwPWI/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLHE9Yj9cblN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpOjYwMTIwLHI9Yj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSx0PWI/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsdj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5ibG9ja1wiKTo2MDEyMSx3PWI/U3ltYm9sLmZvcihcInJlYWN0LmZ1bmRhbWVudGFsXCIpOjYwMTE3LHg9Yj9TeW1ib2wuZm9yKFwicmVhY3QucmVzcG9uZGVyXCIpOjYwMTE4LHk9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc2NvcGVcIik6NjAxMTk7XG5mdW5jdGlvbiB6KGEpe2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpe3ZhciB1PWEuJCR0eXBlb2Y7c3dpdGNoKHUpe2Nhc2UgYzpzd2l0Y2goYT1hLnR5cGUsYSl7Y2FzZSBsOmNhc2UgbTpjYXNlIGU6Y2FzZSBnOmNhc2UgZjpjYXNlIHA6cmV0dXJuIGE7ZGVmYXVsdDpzd2l0Y2goYT1hJiZhLiQkdHlwZW9mLGEpe2Nhc2UgazpjYXNlIG46Y2FzZSB0OmNhc2UgcjpjYXNlIGg6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm4gdX19Y2FzZSBkOnJldHVybiB1fX19ZnVuY3Rpb24gQShhKXtyZXR1cm4geihhKT09PW19ZXhwb3J0cy5Bc3luY01vZGU9bDtleHBvcnRzLkNvbmN1cnJlbnRNb2RlPW07ZXhwb3J0cy5Db250ZXh0Q29uc3VtZXI9aztleHBvcnRzLkNvbnRleHRQcm92aWRlcj1oO2V4cG9ydHMuRWxlbWVudD1jO2V4cG9ydHMuRm9yd2FyZFJlZj1uO2V4cG9ydHMuRnJhZ21lbnQ9ZTtleHBvcnRzLkxhenk9dDtleHBvcnRzLk1lbW89cjtleHBvcnRzLlBvcnRhbD1kO1xuZXhwb3J0cy5Qcm9maWxlcj1nO2V4cG9ydHMuU3RyaWN0TW9kZT1mO2V4cG9ydHMuU3VzcGVuc2U9cDtleHBvcnRzLmlzQXN5bmNNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiBBKGEpfHx6KGEpPT09bH07ZXhwb3J0cy5pc0NvbmN1cnJlbnRNb2RlPUE7ZXhwb3J0cy5pc0NvbnRleHRDb25zdW1lcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWt9O2V4cG9ydHMuaXNDb250ZXh0UHJvdmlkZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1ofTtleHBvcnRzLmlzRWxlbWVudD1mdW5jdGlvbihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09Y307ZXhwb3J0cy5pc0ZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1ufTtleHBvcnRzLmlzRnJhZ21lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1lfTtleHBvcnRzLmlzTGF6eT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXR9O1xuZXhwb3J0cy5pc01lbW89ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1yfTtleHBvcnRzLmlzUG9ydGFsPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09ZH07ZXhwb3J0cy5pc1Byb2ZpbGVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09Z307ZXhwb3J0cy5pc1N0cmljdE1vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1mfTtleHBvcnRzLmlzU3VzcGVuc2U9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1wfTtcbmV4cG9ydHMuaXNWYWxpZEVsZW1lbnRUeXBlPWZ1bmN0aW9uKGEpe3JldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGF8fGE9PT1lfHxhPT09bXx8YT09PWd8fGE9PT1mfHxhPT09cHx8YT09PXF8fFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJihhLiQkdHlwZW9mPT09dHx8YS4kJHR5cGVvZj09PXJ8fGEuJCR0eXBlb2Y9PT1ofHxhLiQkdHlwZW9mPT09a3x8YS4kJHR5cGVvZj09PW58fGEuJCR0eXBlb2Y9PT13fHxhLiQkdHlwZW9mPT09eHx8YS4kJHR5cGVvZj09PXl8fGEuJCR0eXBlb2Y9PT12KX07ZXhwb3J0cy50eXBlT2Y9ejtcbiIsIi8qIVxuICBDb3B5cmlnaHQgKGMpIDIwMTcgSmVkIFdhdHNvbi5cbiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlIChNSVQpLCBzZWVcbiAgaHR0cDovL2plZHdhdHNvbi5naXRodWIuaW8vY2xhc3NuYW1lc1xuKi9cbi8qIGdsb2JhbCBkZWZpbmUgKi9cblxuKGZ1bmN0aW9uICgpIHtcblx0J3VzZSBzdHJpY3QnO1xuXG5cdHZhciBoYXNPd24gPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxuXHRmdW5jdGlvbiBjbGFzc05hbWVzICgpIHtcblx0XHR2YXIgY2xhc3NlcyA9IFtdO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBhcmcgPSBhcmd1bWVudHNbaV07XG5cdFx0XHRpZiAoIWFyZykgY29udGludWU7XG5cblx0XHRcdHZhciBhcmdUeXBlID0gdHlwZW9mIGFyZztcblxuXHRcdFx0aWYgKGFyZ1R5cGUgPT09ICdzdHJpbmcnIHx8IGFyZ1R5cGUgPT09ICdudW1iZXInKSB7XG5cdFx0XHRcdGNsYXNzZXMucHVzaChhcmcpO1xuXHRcdFx0fSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGFyZykgJiYgYXJnLmxlbmd0aCkge1xuXHRcdFx0XHR2YXIgaW5uZXIgPSBjbGFzc05hbWVzLmFwcGx5KG51bGwsIGFyZyk7XG5cdFx0XHRcdGlmIChpbm5lcikge1xuXHRcdFx0XHRcdGNsYXNzZXMucHVzaChpbm5lcik7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSBpZiAoYXJnVHlwZSA9PT0gJ29iamVjdCcpIHtcblx0XHRcdFx0Zm9yICh2YXIga2V5IGluIGFyZykge1xuXHRcdFx0XHRcdGlmIChoYXNPd24uY2FsbChhcmcsIGtleSkgJiYgYXJnW2tleV0pIHtcblx0XHRcdFx0XHRcdGNsYXNzZXMucHVzaChrZXkpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBjbGFzc2VzLmpvaW4oJyAnKTtcblx0fVxuXG5cdGlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiBtb2R1bGUuZXhwb3J0cykge1xuXHRcdGNsYXNzTmFtZXMuZGVmYXVsdCA9IGNsYXNzTmFtZXM7XG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBjbGFzc05hbWVzO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGRlZmluZS5hbWQgPT09ICdvYmplY3QnICYmIGRlZmluZS5hbWQpIHtcblx0XHQvLyByZWdpc3RlciBhcyAnY2xhc3NuYW1lcycsIGNvbnNpc3RlbnQgd2l0aCBucG0gcGFja2FnZSBuYW1lXG5cdFx0ZGVmaW5lKCdjbGFzc25hbWVzJywgW10sIGZ1bmN0aW9uICgpIHtcblx0XHRcdHJldHVybiBjbGFzc05hbWVzO1xuXHRcdH0pO1xuXHR9IGVsc2Uge1xuXHRcdHdpbmRvdy5jbGFzc05hbWVzID0gY2xhc3NOYW1lcztcblx0fVxufSgpKTtcbiIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJpbmRleC5odG1sXCI7IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7XG4gIHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzO1xuICBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9leHRlbmRzKCkge1xuICBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH07XG5cbiAgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59IiwiZnVuY3Rpb24gaXNBYnNvbHV0ZShwYXRobmFtZSkge1xuICByZXR1cm4gcGF0aG5hbWUuY2hhckF0KDApID09PSAnLyc7XG59XG5cbi8vIEFib3V0IDEuNXggZmFzdGVyIHRoYW4gdGhlIHR3by1hcmcgdmVyc2lvbiBvZiBBcnJheSNzcGxpY2UoKVxuZnVuY3Rpb24gc3BsaWNlT25lKGxpc3QsIGluZGV4KSB7XG4gIGZvciAodmFyIGkgPSBpbmRleCwgayA9IGkgKyAxLCBuID0gbGlzdC5sZW5ndGg7IGsgPCBuOyBpICs9IDEsIGsgKz0gMSkge1xuICAgIGxpc3RbaV0gPSBsaXN0W2tdO1xuICB9XG5cbiAgbGlzdC5wb3AoKTtcbn1cblxuLy8gVGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBiYXNlZCBoZWF2aWx5IG9uIG5vZGUncyB1cmwucGFyc2VcbmZ1bmN0aW9uIHJlc29sdmVQYXRobmFtZSh0bywgZnJvbSkge1xuICBpZiAoZnJvbSA9PT0gdW5kZWZpbmVkKSBmcm9tID0gJyc7XG5cbiAgdmFyIHRvUGFydHMgPSAodG8gJiYgdG8uc3BsaXQoJy8nKSkgfHwgW107XG4gIHZhciBmcm9tUGFydHMgPSAoZnJvbSAmJiBmcm9tLnNwbGl0KCcvJykpIHx8IFtdO1xuXG4gIHZhciBpc1RvQWJzID0gdG8gJiYgaXNBYnNvbHV0ZSh0byk7XG4gIHZhciBpc0Zyb21BYnMgPSBmcm9tICYmIGlzQWJzb2x1dGUoZnJvbSk7XG4gIHZhciBtdXN0RW5kQWJzID0gaXNUb0FicyB8fCBpc0Zyb21BYnM7XG5cbiAgaWYgKHRvICYmIGlzQWJzb2x1dGUodG8pKSB7XG4gICAgLy8gdG8gaXMgYWJzb2x1dGVcbiAgICBmcm9tUGFydHMgPSB0b1BhcnRzO1xuICB9IGVsc2UgaWYgKHRvUGFydHMubGVuZ3RoKSB7XG4gICAgLy8gdG8gaXMgcmVsYXRpdmUsIGRyb3AgdGhlIGZpbGVuYW1lXG4gICAgZnJvbVBhcnRzLnBvcCgpO1xuICAgIGZyb21QYXJ0cyA9IGZyb21QYXJ0cy5jb25jYXQodG9QYXJ0cyk7XG4gIH1cblxuICBpZiAoIWZyb21QYXJ0cy5sZW5ndGgpIHJldHVybiAnLyc7XG5cbiAgdmFyIGhhc1RyYWlsaW5nU2xhc2g7XG4gIGlmIChmcm9tUGFydHMubGVuZ3RoKSB7XG4gICAgdmFyIGxhc3QgPSBmcm9tUGFydHNbZnJvbVBhcnRzLmxlbmd0aCAtIDFdO1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBsYXN0ID09PSAnLicgfHwgbGFzdCA9PT0gJy4uJyB8fCBsYXN0ID09PSAnJztcbiAgfSBlbHNlIHtcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gZmFsc2U7XG4gIH1cblxuICB2YXIgdXAgPSAwO1xuICBmb3IgKHZhciBpID0gZnJvbVBhcnRzLmxlbmd0aDsgaSA+PSAwOyBpLS0pIHtcbiAgICB2YXIgcGFydCA9IGZyb21QYXJ0c1tpXTtcblxuICAgIGlmIChwYXJ0ID09PSAnLicpIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgIH0gZWxzZSBpZiAocGFydCA9PT0gJy4uJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cCsrO1xuICAgIH0gZWxzZSBpZiAodXApIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgICAgdXAtLTtcbiAgICB9XG4gIH1cblxuICBpZiAoIW11c3RFbmRBYnMpIGZvciAoOyB1cC0tOyB1cCkgZnJvbVBhcnRzLnVuc2hpZnQoJy4uJyk7XG5cbiAgaWYgKFxuICAgIG11c3RFbmRBYnMgJiZcbiAgICBmcm9tUGFydHNbMF0gIT09ICcnICYmXG4gICAgKCFmcm9tUGFydHNbMF0gfHwgIWlzQWJzb2x1dGUoZnJvbVBhcnRzWzBdKSlcbiAgKVxuICAgIGZyb21QYXJ0cy51bnNoaWZ0KCcnKTtcblxuICB2YXIgcmVzdWx0ID0gZnJvbVBhcnRzLmpvaW4oJy8nKTtcblxuICBpZiAoaGFzVHJhaWxpbmdTbGFzaCAmJiByZXN1bHQuc3Vic3RyKC0xKSAhPT0gJy8nKSByZXN1bHQgKz0gJy8nO1xuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHJlc29sdmVQYXRobmFtZTtcbiIsInZhciBpc1Byb2R1Y3Rpb24gPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nO1xudmFyIHByZWZpeCA9ICdJbnZhcmlhbnQgZmFpbGVkJztcbmZ1bmN0aW9uIGludmFyaWFudChjb25kaXRpb24sIG1lc3NhZ2UpIHtcbiAgICBpZiAoY29uZGl0aW9uKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGlzUHJvZHVjdGlvbikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IocHJlZml4KTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKHByZWZpeCArIFwiOiBcIiArIChtZXNzYWdlIHx8ICcnKSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGludmFyaWFudDtcbiIsImltcG9ydCBfZXh0ZW5kcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcbmltcG9ydCByZXNvbHZlUGF0aG5hbWUgZnJvbSAncmVzb2x2ZS1wYXRobmFtZSc7XG5pbXBvcnQgdmFsdWVFcXVhbCBmcm9tICd2YWx1ZS1lcXVhbCc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XG5cbmZ1bmN0aW9uIGFkZExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aCA6ICcvJyArIHBhdGg7XG59XG5mdW5jdGlvbiBzdHJpcExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aC5zdWJzdHIoMSkgOiBwYXRoO1xufVxuZnVuY3Rpb24gaGFzQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBwYXRoLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihwcmVmaXgudG9Mb3dlckNhc2UoKSkgPT09IDAgJiYgJy8/IycuaW5kZXhPZihwYXRoLmNoYXJBdChwcmVmaXgubGVuZ3RoKSkgIT09IC0xO1xufVxuZnVuY3Rpb24gc3RyaXBCYXNlbmFtZShwYXRoLCBwcmVmaXgpIHtcbiAgcmV0dXJuIGhhc0Jhc2VuYW1lKHBhdGgsIHByZWZpeCkgPyBwYXRoLnN1YnN0cihwcmVmaXgubGVuZ3RoKSA6IHBhdGg7XG59XG5mdW5jdGlvbiBzdHJpcFRyYWlsaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQocGF0aC5sZW5ndGggLSAxKSA9PT0gJy8nID8gcGF0aC5zbGljZSgwLCAtMSkgOiBwYXRoO1xufVxuZnVuY3Rpb24gcGFyc2VQYXRoKHBhdGgpIHtcbiAgdmFyIHBhdGhuYW1lID0gcGF0aCB8fCAnLyc7XG4gIHZhciBzZWFyY2ggPSAnJztcbiAgdmFyIGhhc2ggPSAnJztcbiAgdmFyIGhhc2hJbmRleCA9IHBhdGhuYW1lLmluZGV4T2YoJyMnKTtcblxuICBpZiAoaGFzaEluZGV4ICE9PSAtMSkge1xuICAgIGhhc2ggPSBwYXRobmFtZS5zdWJzdHIoaGFzaEluZGV4KTtcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBoYXNoSW5kZXgpO1xuICB9XG5cbiAgdmFyIHNlYXJjaEluZGV4ID0gcGF0aG5hbWUuaW5kZXhPZignPycpO1xuXG4gIGlmIChzZWFyY2hJbmRleCAhPT0gLTEpIHtcbiAgICBzZWFyY2ggPSBwYXRobmFtZS5zdWJzdHIoc2VhcmNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIHNlYXJjaEluZGV4KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcGF0aG5hbWU6IHBhdGhuYW1lLFxuICAgIHNlYXJjaDogc2VhcmNoID09PSAnPycgPyAnJyA6IHNlYXJjaCxcbiAgICBoYXNoOiBoYXNoID09PSAnIycgPyAnJyA6IGhhc2hcbiAgfTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVBhdGgobG9jYXRpb24pIHtcbiAgdmFyIHBhdGhuYW1lID0gbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICBzZWFyY2ggPSBsb2NhdGlvbi5zZWFyY2gsXG4gICAgICBoYXNoID0gbG9jYXRpb24uaGFzaDtcbiAgdmFyIHBhdGggPSBwYXRobmFtZSB8fCAnLyc7XG4gIGlmIChzZWFyY2ggJiYgc2VhcmNoICE9PSAnPycpIHBhdGggKz0gc2VhcmNoLmNoYXJBdCgwKSA9PT0gJz8nID8gc2VhcmNoIDogXCI/XCIgKyBzZWFyY2g7XG4gIGlmIChoYXNoICYmIGhhc2ggIT09ICcjJykgcGF0aCArPSBoYXNoLmNoYXJBdCgwKSA9PT0gJyMnID8gaGFzaCA6IFwiI1wiICsgaGFzaDtcbiAgcmV0dXJuIHBhdGg7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXksIGN1cnJlbnRMb2NhdGlvbikge1xuICB2YXIgbG9jYXRpb247XG5cbiAgaWYgKHR5cGVvZiBwYXRoID09PSAnc3RyaW5nJykge1xuICAgIC8vIFR3by1hcmcgZm9ybTogcHVzaChwYXRoLCBzdGF0ZSlcbiAgICBsb2NhdGlvbiA9IHBhcnNlUGF0aChwYXRoKTtcbiAgICBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xuICB9IGVsc2Uge1xuICAgIC8vIE9uZS1hcmcgZm9ybTogcHVzaChsb2NhdGlvbilcbiAgICBsb2NhdGlvbiA9IF9leHRlbmRzKHt9LCBwYXRoKTtcbiAgICBpZiAobG9jYXRpb24ucGF0aG5hbWUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24ucGF0aG5hbWUgPSAnJztcblxuICAgIGlmIChsb2NhdGlvbi5zZWFyY2gpIHtcbiAgICAgIGlmIChsb2NhdGlvbi5zZWFyY2guY2hhckF0KDApICE9PSAnPycpIGxvY2F0aW9uLnNlYXJjaCA9ICc/JyArIGxvY2F0aW9uLnNlYXJjaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uc2VhcmNoID0gJyc7XG4gICAgfVxuXG4gICAgaWYgKGxvY2F0aW9uLmhhc2gpIHtcbiAgICAgIGlmIChsb2NhdGlvbi5oYXNoLmNoYXJBdCgwKSAhPT0gJyMnKSBsb2NhdGlvbi5oYXNoID0gJyMnICsgbG9jYXRpb24uaGFzaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uaGFzaCA9ICcnO1xuICAgIH1cblxuICAgIGlmIChzdGF0ZSAhPT0gdW5kZWZpbmVkICYmIGxvY2F0aW9uLnN0YXRlID09PSB1bmRlZmluZWQpIGxvY2F0aW9uLnN0YXRlID0gc3RhdGU7XG4gIH1cblxuICB0cnkge1xuICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gZGVjb2RlVVJJKGxvY2F0aW9uLnBhdGhuYW1lKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGlmIChlIGluc3RhbmNlb2YgVVJJRXJyb3IpIHtcbiAgICAgIHRocm93IG5ldyBVUklFcnJvcignUGF0aG5hbWUgXCInICsgbG9jYXRpb24ucGF0aG5hbWUgKyAnXCIgY291bGQgbm90IGJlIGRlY29kZWQuICcgKyAnVGhpcyBpcyBsaWtlbHkgY2F1c2VkIGJ5IGFuIGludmFsaWQgcGVyY2VudC1lbmNvZGluZy4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgZTtcbiAgICB9XG4gIH1cblxuICBpZiAoa2V5KSBsb2NhdGlvbi5rZXkgPSBrZXk7XG5cbiAgaWYgKGN1cnJlbnRMb2NhdGlvbikge1xuICAgIC8vIFJlc29sdmUgaW5jb21wbGV0ZS9yZWxhdGl2ZSBwYXRobmFtZSByZWxhdGl2ZSB0byBjdXJyZW50IGxvY2F0aW9uLlxuICAgIGlmICghbG9jYXRpb24ucGF0aG5hbWUpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gY3VycmVudExvY2F0aW9uLnBhdGhuYW1lO1xuICAgIH0gZWxzZSBpZiAobG9jYXRpb24ucGF0aG5hbWUuY2hhckF0KDApICE9PSAnLycpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gcmVzb2x2ZVBhdGhuYW1lKGxvY2F0aW9uLnBhdGhuYW1lLCBjdXJyZW50TG9jYXRpb24ucGF0aG5hbWUpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBXaGVuIHRoZXJlIGlzIG5vIHByaW9yIGxvY2F0aW9uIGFuZCBwYXRobmFtZSBpcyBlbXB0eSwgc2V0IGl0IHRvIC9cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9ICcvJztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbG9jYXRpb247XG59XG5mdW5jdGlvbiBsb2NhdGlvbnNBcmVFcXVhbChhLCBiKSB7XG4gIHJldHVybiBhLnBhdGhuYW1lID09PSBiLnBhdGhuYW1lICYmIGEuc2VhcmNoID09PSBiLnNlYXJjaCAmJiBhLmhhc2ggPT09IGIuaGFzaCAmJiBhLmtleSA9PT0gYi5rZXkgJiYgdmFsdWVFcXVhbChhLnN0YXRlLCBiLnN0YXRlKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKSB7XG4gIHZhciBwcm9tcHQgPSBudWxsO1xuXG4gIGZ1bmN0aW9uIHNldFByb21wdChuZXh0UHJvbXB0KSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhwcm9tcHQgPT0gbnVsbCwgJ0EgaGlzdG9yeSBzdXBwb3J0cyBvbmx5IG9uZSBwcm9tcHQgYXQgYSB0aW1lJykgOiB2b2lkIDA7XG4gICAgcHJvbXB0ID0gbmV4dFByb21wdDtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKHByb21wdCA9PT0gbmV4dFByb21wdCkgcHJvbXB0ID0gbnVsbDtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBjYWxsYmFjaykge1xuICAgIC8vIFRPRE86IElmIGFub3RoZXIgdHJhbnNpdGlvbiBzdGFydHMgd2hpbGUgd2UncmUgc3RpbGwgY29uZmlybWluZ1xuICAgIC8vIHRoZSBwcmV2aW91cyBvbmUsIHdlIG1heSBlbmQgdXAgaW4gYSB3ZWlyZCBzdGF0ZS4gRmlndXJlIG91dCB0aGVcbiAgICAvLyBiZXN0IHdheSB0byBoYW5kbGUgdGhpcy5cbiAgICBpZiAocHJvbXB0ICE9IG51bGwpIHtcbiAgICAgIHZhciByZXN1bHQgPSB0eXBlb2YgcHJvbXB0ID09PSAnZnVuY3Rpb24nID8gcHJvbXB0KGxvY2F0aW9uLCBhY3Rpb24pIDogcHJvbXB0O1xuXG4gICAgICBpZiAodHlwZW9mIHJlc3VsdCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBnZXRVc2VyQ29uZmlybWF0aW9uID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbihyZXN1bHQsIGNhbGxiYWNrKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCAnQSBoaXN0b3J5IG5lZWRzIGEgZ2V0VXNlckNvbmZpcm1hdGlvbiBmdW5jdGlvbiBpbiBvcmRlciB0byB1c2UgYSBwcm9tcHQgbWVzc2FnZScpIDogdm9pZCAwO1xuICAgICAgICAgIGNhbGxiYWNrKHRydWUpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBSZXR1cm4gZmFsc2UgZnJvbSBhIHRyYW5zaXRpb24gaG9vayB0byBjYW5jZWwgdGhlIHRyYW5zaXRpb24uXG4gICAgICAgIGNhbGxiYWNrKHJlc3VsdCAhPT0gZmFsc2UpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjYWxsYmFjayh0cnVlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgbGlzdGVuZXJzID0gW107XG5cbiAgZnVuY3Rpb24gYXBwZW5kTGlzdGVuZXIoZm4pIHtcbiAgICB2YXIgaXNBY3RpdmUgPSB0cnVlO1xuXG4gICAgZnVuY3Rpb24gbGlzdGVuZXIoKSB7XG4gICAgICBpZiAoaXNBY3RpdmUpIGZuLmFwcGx5KHZvaWQgMCwgYXJndW1lbnRzKTtcbiAgICB9XG5cbiAgICBsaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlzQWN0aXZlID0gZmFsc2U7XG4gICAgICBsaXN0ZW5lcnMgPSBsaXN0ZW5lcnMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgIHJldHVybiBpdGVtICE9PSBsaXN0ZW5lcjtcbiAgICAgIH0pO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBub3RpZnlMaXN0ZW5lcnMoKSB7XG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIGxpc3RlbmVycy5mb3JFYWNoKGZ1bmN0aW9uIChsaXN0ZW5lcikge1xuICAgICAgcmV0dXJuIGxpc3RlbmVyLmFwcGx5KHZvaWQgMCwgYXJncyk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHNldFByb21wdDogc2V0UHJvbXB0LFxuICAgIGNvbmZpcm1UcmFuc2l0aW9uVG86IGNvbmZpcm1UcmFuc2l0aW9uVG8sXG4gICAgYXBwZW5kTGlzdGVuZXI6IGFwcGVuZExpc3RlbmVyLFxuICAgIG5vdGlmeUxpc3RlbmVyczogbm90aWZ5TGlzdGVuZXJzXG4gIH07XG59XG5cbnZhciBjYW5Vc2VET00gPSAhISh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgJiYgd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xuZnVuY3Rpb24gZ2V0Q29uZmlybWF0aW9uKG1lc3NhZ2UsIGNhbGxiYWNrKSB7XG4gIGNhbGxiYWNrKHdpbmRvdy5jb25maXJtKG1lc3NhZ2UpKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1hbGVydFxufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGlzIHN1cHBvcnRlZC4gVGFrZW4gZnJvbSBNb2Rlcm5penIuXG4gKlxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvZmVhdHVyZS1kZXRlY3RzL2hpc3RvcnkuanNcbiAqIGNoYW5nZWQgdG8gYXZvaWQgZmFsc2UgbmVnYXRpdmVzIGZvciBXaW5kb3dzIFBob25lczogaHR0cHM6Ly9naXRodWIuY29tL3JlYWN0anMvcmVhY3Qtcm91dGVyL2lzc3Vlcy81ODZcbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c0hpc3RvcnkoKSB7XG4gIHZhciB1YSA9IHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50O1xuICBpZiAoKHVhLmluZGV4T2YoJ0FuZHJvaWQgMi4nKSAhPT0gLTEgfHwgdWEuaW5kZXhPZignQW5kcm9pZCA0LjAnKSAhPT0gLTEpICYmIHVhLmluZGV4T2YoJ01vYmlsZSBTYWZhcmknKSAhPT0gLTEgJiYgdWEuaW5kZXhPZignQ2hyb21lJykgPT09IC0xICYmIHVhLmluZGV4T2YoJ1dpbmRvd3MgUGhvbmUnKSA9PT0gLTEpIHJldHVybiBmYWxzZTtcbiAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5ICYmICdwdXNoU3RhdGUnIGluIHdpbmRvdy5oaXN0b3J5O1xufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYnJvd3NlciBmaXJlcyBwb3BzdGF0ZSBvbiBoYXNoIGNoYW5nZS5cbiAqIElFMTAgYW5kIElFMTEgZG8gbm90LlxuICovXG5cbmZ1bmN0aW9uIHN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UoKSB7XG4gIHJldHVybiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdUcmlkZW50JykgPT09IC0xO1xufVxuLyoqXG4gKiBSZXR1cm5zIGZhbHNlIGlmIHVzaW5nIGdvKG4pIHdpdGggaGFzaCBoaXN0b3J5IGNhdXNlcyBhIGZ1bGwgcGFnZSByZWxvYWQuXG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2goKSB7XG4gIHJldHVybiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdGaXJlZm94JykgPT09IC0xO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYSBnaXZlbiBwb3BzdGF0ZSBldmVudCBpcyBhbiBleHRyYW5lb3VzIFdlYktpdCBldmVudC5cbiAqIEFjY291bnRzIGZvciB0aGUgZmFjdCB0aGF0IENocm9tZSBvbiBpT1MgZmlyZXMgcmVhbCBwb3BzdGF0ZSBldmVudHNcbiAqIGNvbnRhaW5pbmcgdW5kZWZpbmVkIHN0YXRlIHdoZW4gcHJlc3NpbmcgdGhlIGJhY2sgYnV0dG9uLlxuICovXG5cbmZ1bmN0aW9uIGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQoZXZlbnQpIHtcbiAgcmV0dXJuIGV2ZW50LnN0YXRlID09PSB1bmRlZmluZWQgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdDcmlPUycpID09PSAtMTtcbn1cblxudmFyIFBvcFN0YXRlRXZlbnQgPSAncG9wc3RhdGUnO1xudmFyIEhhc2hDaGFuZ2VFdmVudCA9ICdoYXNoY2hhbmdlJztcblxuZnVuY3Rpb24gZ2V0SGlzdG9yeVN0YXRlKCkge1xuICB0cnkge1xuICAgIHJldHVybiB3aW5kb3cuaGlzdG9yeS5zdGF0ZSB8fCB7fTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vIElFIDExIHNvbWV0aW1lcyB0aHJvd3Mgd2hlbiBhY2Nlc3Npbmcgd2luZG93Lmhpc3Rvcnkuc3RhdGVcbiAgICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL1JlYWN0VHJhaW5pbmcvaGlzdG9yeS9wdWxsLzI4OVxuICAgIHJldHVybiB7fTtcbiAgfVxufVxuLyoqXG4gKiBDcmVhdGVzIGEgaGlzdG9yeSBvYmplY3QgdGhhdCB1c2VzIHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBpbmNsdWRpbmdcbiAqIHB1c2hTdGF0ZSwgcmVwbGFjZVN0YXRlLCBhbmQgdGhlIHBvcHN0YXRlIGV2ZW50LlxuICovXG5cblxuZnVuY3Rpb24gY3JlYXRlQnJvd3Nlckhpc3RvcnkocHJvcHMpIHtcbiAgaWYgKHByb3BzID09PSB2b2lkIDApIHtcbiAgICBwcm9wcyA9IHt9O1xuICB9XG5cbiAgIWNhblVzZURPTSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ0Jyb3dzZXIgaGlzdG9yeSBuZWVkcyBhIERPTScpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhblVzZUhpc3RvcnkgPSBzdXBwb3J0c0hpc3RvcnkoKTtcbiAgdmFyIG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyID0gIXN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UoKTtcbiAgdmFyIF9wcm9wcyA9IHByb3BzLFxuICAgICAgX3Byb3BzJGZvcmNlUmVmcmVzaCA9IF9wcm9wcy5mb3JjZVJlZnJlc2gsXG4gICAgICBmb3JjZVJlZnJlc2ggPSBfcHJvcHMkZm9yY2VSZWZyZXNoID09PSB2b2lkIDAgPyBmYWxzZSA6IF9wcm9wcyRmb3JjZVJlZnJlc2gsXG4gICAgICBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHZvaWQgMCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcbiAgICAgIF9wcm9wcyRrZXlMZW5ndGggPSBfcHJvcHMua2V5TGVuZ3RoLFxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdm9pZCAwID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gc3RyaXBUcmFpbGluZ1NsYXNoKGFkZExlYWRpbmdTbGFzaChwcm9wcy5iYXNlbmFtZSkpIDogJyc7XG5cbiAgZnVuY3Rpb24gZ2V0RE9NTG9jYXRpb24oaGlzdG9yeVN0YXRlKSB7XG4gICAgdmFyIF9yZWYgPSBoaXN0b3J5U3RhdGUgfHwge30sXG4gICAgICAgIGtleSA9IF9yZWYua2V5LFxuICAgICAgICBzdGF0ZSA9IF9yZWYuc3RhdGU7XG5cbiAgICB2YXIgX3dpbmRvdyRsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbixcbiAgICAgICAgcGF0aG5hbWUgPSBfd2luZG93JGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgICBzZWFyY2ggPSBfd2luZG93JGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgICAgaGFzaCA9IF93aW5kb3ckbG9jYXRpb24uaGFzaDtcbiAgICB2YXIgcGF0aCA9IHBhdGhuYW1lICsgc2VhcmNoICsgaGFzaDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpIDogdm9pZCAwO1xuICAgIGlmIChiYXNlbmFtZSkgcGF0aCA9IHN0cmlwQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpO1xuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XG4gIH1cblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGdsb2JhbEhpc3RvcnkubGVuZ3RoO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVQb3BTdGF0ZShldmVudCkge1xuICAgIC8vIElnbm9yZSBleHRyYW5lb3VzIHBvcHN0YXRlIGV2ZW50cyBpbiBXZWJLaXQuXG4gICAgaWYgKGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQoZXZlbnQpKSByZXR1cm47XG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGV2ZW50LnN0YXRlKSk7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xuICAgIGhhbmRsZVBvcChnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSkpO1xuICB9XG5cbiAgdmFyIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICAgICAgc2V0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgICAgaWYgKG9rKSB7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uOyAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIGtleXMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cbiAgICAvLyBJbnN0ZWFkLCB3ZSBqdXN0IGRlZmF1bHQgdG8gMCBmb3Iga2V5cyB3ZSBkb24ndCBrbm93LlxuXG4gICAgdmFyIHRvSW5kZXggPSBhbGxLZXlzLmluZGV4T2YodG9Mb2NhdGlvbi5rZXkpO1xuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XG4gICAgdmFyIGZyb21JbmRleCA9IGFsbEtleXMuaW5kZXhPZihmcm9tTG9jYXRpb24ua2V5KTtcbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSk7XG4gIHZhciBhbGxLZXlzID0gW2luaXRpYWxMb2NhdGlvbi5rZXldOyAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHJldHVybiBiYXNlbmFtZSArIGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcHVzaCB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBocmVmID0gY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XG5cbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucHVzaFN0YXRlKHtcbiAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICBzdGF0ZTogc3RhdGVcbiAgICAgICAgfSwgbnVsbCwgaHJlZik7XG5cbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcbiAgICAgICAgICB2YXIgbmV4dEtleXMgPSBhbGxLZXlzLnNsaWNlKDAsIHByZXZJbmRleCArIDEpO1xuICAgICAgICAgIG5leHRLZXlzLnB1c2gobG9jYXRpb24ua2V5KTtcbiAgICAgICAgICBhbGxLZXlzID0gbmV4dEtleXM7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnQnJvd3NlciBoaXN0b3J5IGNhbm5vdCBwdXNoIHN0YXRlIGluIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgSFRNTDUgaGlzdG9yeScpIDogdm9pZCAwO1xuICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGhyZWY7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byByZXBsYWNlIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICAgIHZhciBrZXkgPSBsb2NhdGlvbi5rZXksXG4gICAgICAgICAgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcblxuICAgICAgaWYgKGNhblVzZUhpc3RvcnkpIHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5yZXBsYWNlU3RhdGUoe1xuICAgICAgICAgIGtleToga2V5LFxuICAgICAgICAgIHN0YXRlOiBzdGF0ZVxuICAgICAgICB9LCBudWxsLCBocmVmKTtcblxuICAgICAgICBpZiAoZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbEtleXMuaW5kZXhPZihoaXN0b3J5LmxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgaWYgKHByZXZJbmRleCAhPT0gLTEpIGFsbEtleXNbcHJldkluZGV4XSA9IGxvY2F0aW9uLmtleTtcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHJlcGxhY2Ugc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5JykgOiB2b2lkIDA7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKGhyZWYpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ28obikge1xuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xuXG4gIGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcblxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxICYmIGRlbHRhID09PSAxKSB7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihQb3BTdGF0ZUV2ZW50LCBoYW5kbGVQb3BTdGF0ZSk7XG4gICAgICBpZiAobmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIpIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihQb3BTdGF0ZUV2ZW50LCBoYW5kbGVQb3BTdGF0ZSk7XG4gICAgICBpZiAobmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIpIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGJsb2NrKHByb21wdCkge1xuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xuICAgICAgcHJvbXB0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcblxuICAgIGlmICghaXNCbG9ja2VkKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICAgIGlzQmxvY2tlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuYmxvY2soKTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgdmFyIHVubGlzdGVuID0gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB1bmxpc3RlbigpO1xuICAgIH07XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGdsb2JhbEhpc3RvcnkubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGluaXRpYWxMb2NhdGlvbixcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuXG52YXIgSGFzaENoYW5nZUV2ZW50JDEgPSAnaGFzaGNoYW5nZSc7XG52YXIgSGFzaFBhdGhDb2RlcnMgPSB7XG4gIGhhc2hiYW5nOiB7XG4gICAgZW5jb2RlUGF0aDogZnVuY3Rpb24gZW5jb2RlUGF0aChwYXRoKSB7XG4gICAgICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICchJyA/IHBhdGggOiAnIS8nICsgc3RyaXBMZWFkaW5nU2xhc2gocGF0aCk7XG4gICAgfSxcbiAgICBkZWNvZGVQYXRoOiBmdW5jdGlvbiBkZWNvZGVQYXRoKHBhdGgpIHtcbiAgICAgIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJyEnID8gcGF0aC5zdWJzdHIoMSkgOiBwYXRoO1xuICAgIH1cbiAgfSxcbiAgbm9zbGFzaDoge1xuICAgIGVuY29kZVBhdGg6IHN0cmlwTGVhZGluZ1NsYXNoLFxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxuICB9LFxuICBzbGFzaDoge1xuICAgIGVuY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaCxcbiAgICBkZWNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2hcbiAgfVxufTtcblxuZnVuY3Rpb24gc3RyaXBIYXNoKHVybCkge1xuICB2YXIgaGFzaEluZGV4ID0gdXJsLmluZGV4T2YoJyMnKTtcbiAgcmV0dXJuIGhhc2hJbmRleCA9PT0gLTEgPyB1cmwgOiB1cmwuc2xpY2UoMCwgaGFzaEluZGV4KTtcbn1cblxuZnVuY3Rpb24gZ2V0SGFzaFBhdGgoKSB7XG4gIC8vIFdlIGNhbid0IHVzZSB3aW5kb3cubG9jYXRpb24uaGFzaCBoZXJlIGJlY2F1c2UgaXQncyBub3RcbiAgLy8gY29uc2lzdGVudCBhY3Jvc3MgYnJvd3NlcnMgLSBGaXJlZm94IHdpbGwgcHJlLWRlY29kZSBpdCFcbiAgdmFyIGhyZWYgPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcbiAgdmFyIGhhc2hJbmRleCA9IGhyZWYuaW5kZXhPZignIycpO1xuICByZXR1cm4gaGFzaEluZGV4ID09PSAtMSA/ICcnIDogaHJlZi5zdWJzdHJpbmcoaGFzaEluZGV4ICsgMSk7XG59XG5cbmZ1bmN0aW9uIHB1c2hIYXNoUGF0aChwYXRoKSB7XG4gIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gcGF0aDtcbn1cblxuZnVuY3Rpb24gcmVwbGFjZUhhc2hQYXRoKHBhdGgpIHtcbiAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2Uoc3RyaXBIYXNoKHdpbmRvdy5sb2NhdGlvbi5ocmVmKSArICcjJyArIHBhdGgpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVIYXNoSGlzdG9yeShwcm9wcykge1xuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xuICAgIHByb3BzID0ge307XG4gIH1cblxuICAhY2FuVXNlRE9NID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnSGFzaCBoaXN0b3J5IG5lZWRzIGEgRE9NJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB2YXIgZ2xvYmFsSGlzdG9yeSA9IHdpbmRvdy5oaXN0b3J5O1xuICB2YXIgY2FuR29XaXRob3V0UmVsb2FkID0gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2goKTtcbiAgdmFyIF9wcm9wcyA9IHByb3BzLFxuICAgICAgX3Byb3BzJGdldFVzZXJDb25maXJtID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzJGdldFVzZXJDb25maXJtID09PSB2b2lkIDAgPyBnZXRDb25maXJtYXRpb24gOiBfcHJvcHMkZ2V0VXNlckNvbmZpcm0sXG4gICAgICBfcHJvcHMkaGFzaFR5cGUgPSBfcHJvcHMuaGFzaFR5cGUsXG4gICAgICBoYXNoVHlwZSA9IF9wcm9wcyRoYXNoVHlwZSA9PT0gdm9pZCAwID8gJ3NsYXNoJyA6IF9wcm9wcyRoYXNoVHlwZTtcbiAgdmFyIGJhc2VuYW1lID0gcHJvcHMuYmFzZW5hbWUgPyBzdHJpcFRyYWlsaW5nU2xhc2goYWRkTGVhZGluZ1NsYXNoKHByb3BzLmJhc2VuYW1lKSkgOiAnJztcbiAgdmFyIF9IYXNoUGF0aENvZGVycyRoYXNoVCA9IEhhc2hQYXRoQ29kZXJzW2hhc2hUeXBlXSxcbiAgICAgIGVuY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZW5jb2RlUGF0aCxcbiAgICAgIGRlY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZGVjb2RlUGF0aDtcblxuICBmdW5jdGlvbiBnZXRET01Mb2NhdGlvbigpIHtcbiAgICB2YXIgcGF0aCA9IGRlY29kZVBhdGgoZ2V0SGFzaFBhdGgoKSk7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghYmFzZW5hbWUgfHwgaGFzQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpLCAnWW91IGFyZSBhdHRlbXB0aW5nIHRvIHVzZSBhIGJhc2VuYW1lIG9uIGEgcGFnZSB3aG9zZSBVUkwgcGF0aCBkb2VzIG5vdCBiZWdpbiAnICsgJ3dpdGggdGhlIGJhc2VuYW1lLiBFeHBlY3RlZCBwYXRoIFwiJyArIHBhdGggKyAnXCIgdG8gYmVnaW4gd2l0aCBcIicgKyBiYXNlbmFtZSArICdcIi4nKSA6IHZvaWQgMDtcbiAgICBpZiAoYmFzZW5hbWUpIHBhdGggPSBzdHJpcEJhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKTtcbiAgICByZXR1cm4gY3JlYXRlTG9jYXRpb24ocGF0aCk7XG4gIH1cblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGdsb2JhbEhpc3RvcnkubGVuZ3RoO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH1cblxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gIHZhciBpZ25vcmVQYXRoID0gbnVsbDtcblxuICBmdW5jdGlvbiBsb2NhdGlvbnNBcmVFcXVhbCQkMShhLCBiKSB7XG4gICAgcmV0dXJuIGEucGF0aG5hbWUgPT09IGIucGF0aG5hbWUgJiYgYS5zZWFyY2ggPT09IGIuc2VhcmNoICYmIGEuaGFzaCA9PT0gYi5oYXNoO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlSGFzaENoYW5nZSgpIHtcbiAgICB2YXIgcGF0aCA9IGdldEhhc2hQYXRoKCk7XG4gICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChwYXRoKTtcblxuICAgIGlmIChwYXRoICE9PSBlbmNvZGVkUGF0aCkge1xuICAgICAgLy8gRW5zdXJlIHdlIGFsd2F5cyBoYXZlIGEgcHJvcGVybHktZW5jb2RlZCBoYXNoLlxuICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGxvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcbiAgICAgIHZhciBwcmV2TG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uO1xuICAgICAgaWYgKCFmb3JjZU5leHRQb3AgJiYgbG9jYXRpb25zQXJlRXF1YWwkJDEocHJldkxvY2F0aW9uLCBsb2NhdGlvbikpIHJldHVybjsgLy8gQSBoYXNoY2hhbmdlIGRvZXNuJ3QgYWx3YXlzID09IGxvY2F0aW9uIGNoYW5nZS5cblxuICAgICAgaWYgKGlnbm9yZVBhdGggPT09IGNyZWF0ZVBhdGgobG9jYXRpb24pKSByZXR1cm47IC8vIElnbm9yZSB0aGlzIGNoYW5nZTsgd2UgYWxyZWFkeSBzZXRTdGF0ZSBpbiBwdXNoL3JlcGxhY2UuXG5cbiAgICAgIGlnbm9yZVBhdGggPSBudWxsO1xuICAgICAgaGFuZGxlUG9wKGxvY2F0aW9uKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVQb3AobG9jYXRpb24pIHtcbiAgICBpZiAoZm9yY2VOZXh0UG9wKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgICAgIHNldFN0YXRlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhY3Rpb24gPSAnUE9QJztcbiAgICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICAgIGlmIChvaykge1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmV2ZXJ0UG9wKGZyb21Mb2NhdGlvbikge1xuICAgIHZhciB0b0xvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjsgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcbiAgICAvLyBrZWVwaW5nIGEgbGlzdCBvZiBwYXRocyB3ZSd2ZSBzZWVuIGluIHNlc3Npb25TdG9yYWdlLlxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBwYXRocyB3ZSBkb24ndCBrbm93LlxuXG4gICAgdmFyIHRvSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKHRvTG9jYXRpb24pKTtcbiAgICBpZiAodG9JbmRleCA9PT0gLTEpIHRvSW5kZXggPSAwO1xuICAgIHZhciBmcm9tSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGZyb21Mb2NhdGlvbikpO1xuICAgIGlmIChmcm9tSW5kZXggPT09IC0xKSBmcm9tSW5kZXggPSAwO1xuICAgIHZhciBkZWx0YSA9IHRvSW5kZXggLSBmcm9tSW5kZXg7XG5cbiAgICBpZiAoZGVsdGEpIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IHRydWU7XG4gICAgICBnbyhkZWx0YSk7XG4gICAgfVxuICB9IC8vIEVuc3VyZSB0aGUgaGFzaCBpcyBlbmNvZGVkIHByb3Blcmx5IGJlZm9yZSBkb2luZyBhbnl0aGluZyBlbHNlLlxuXG5cbiAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xuICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbigpO1xuICB2YXIgYWxsUGF0aHMgPSBbY3JlYXRlUGF0aChpbml0aWFsTG9jYXRpb24pXTsgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUhyZWYobG9jYXRpb24pIHtcbiAgICB2YXIgYmFzZVRhZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2Jhc2UnKTtcbiAgICB2YXIgaHJlZiA9ICcnO1xuXG4gICAgaWYgKGJhc2VUYWcgJiYgYmFzZVRhZy5nZXRBdHRyaWJ1dGUoJ2hyZWYnKSkge1xuICAgICAgaHJlZiA9IHN0cmlwSGFzaCh3aW5kb3cubG9jYXRpb24uaHJlZik7XG4gICAgfVxuXG4gICAgcmV0dXJuIGhyZWYgKyAnIycgKyBlbmNvZGVQYXRoKGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbikpO1xuICB9XG5cbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcHVzaCBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgcGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XG5cbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFBVU0gsIHNvIHdlJ2RcbiAgICAgICAgLy8gcmF0aGVyIHNldFN0YXRlIGhlcmUgYW5kIGlnbm9yZSB0aGUgaGFzaGNoYW5nZS4gVGhlIGNhdmVhdCBoZXJlXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XG4gICAgICAgIHB1c2hIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGhpc3RvcnkubG9jYXRpb24pKTtcbiAgICAgICAgdmFyIG5leHRQYXRocyA9IGFsbFBhdGhzLnNsaWNlKDAsIHByZXZJbmRleCArIDEpO1xuICAgICAgICBuZXh0UGF0aHMucHVzaChwYXRoKTtcbiAgICAgICAgYWxsUGF0aHMgPSBuZXh0UGF0aHM7XG4gICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCBQVVNIIHRoZSBzYW1lIHBhdGg7IGEgbmV3IGVudHJ5IHdpbGwgbm90IGJlIGFkZGVkIHRvIHRoZSBoaXN0b3J5IHN0YWNrJykgOiB2b2lkIDA7XG4gICAgICAgIHNldFN0YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCByZXBsYWNlIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBwYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcblxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUkVQTEFDRSwgc28gd2UnZFxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcbiAgICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmluZGV4T2YoY3JlYXRlUGF0aChoaXN0b3J5LmxvY2F0aW9uKSk7XG4gICAgICBpZiAocHJldkluZGV4ICE9PSAtMSkgYWxsUGF0aHNbcHJldkluZGV4XSA9IHBhdGg7XG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ28obikge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoY2FuR29XaXRob3V0UmVsb2FkLCAnSGFzaCBoaXN0b3J5IGdvKG4pIGNhdXNlcyBhIGZ1bGwgcGFnZSByZWxvYWQgaW4gdGhpcyBicm93c2VyJykgOiB2b2lkIDA7XG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICB2YXIgbGlzdGVuZXJDb3VudCA9IDA7XG5cbiAgZnVuY3Rpb24gY2hlY2tET01MaXN0ZW5lcnMoZGVsdGEpIHtcbiAgICBsaXN0ZW5lckNvdW50ICs9IGRlbHRhO1xuXG4gICAgaWYgKGxpc3RlbmVyQ291bnQgPT09IDEgJiYgZGVsdGEgPT09IDEpIHtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCQxLCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCQxLCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaXNCbG9ja2VkID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuXG4gICAgaWYgKCFpc0Jsb2NrZWQpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGlzQmxvY2tlZCkge1xuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIHVubGlzdGVuKCk7XG4gICAgfTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbmZ1bmN0aW9uIGNsYW1wKG4sIGxvd2VyQm91bmQsIHVwcGVyQm91bmQpIHtcbiAgcmV0dXJuIE1hdGgubWluKE1hdGgubWF4KG4sIGxvd2VyQm91bmQpLCB1cHBlckJvdW5kKTtcbn1cbi8qKlxuICogQ3JlYXRlcyBhIGhpc3Rvcnkgb2JqZWN0IHRoYXQgc3RvcmVzIGxvY2F0aW9ucyBpbiBtZW1vcnkuXG4gKi9cblxuXG5mdW5jdGlvbiBjcmVhdGVNZW1vcnlIaXN0b3J5KHByb3BzKSB7XG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcHJvcHMgPSB7fTtcbiAgfVxuXG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIF9wcm9wcyRpbml0aWFsRW50cmllcyA9IF9wcm9wcy5pbml0aWFsRW50cmllcyxcbiAgICAgIGluaXRpYWxFbnRyaWVzID0gX3Byb3BzJGluaXRpYWxFbnRyaWVzID09PSB2b2lkIDAgPyBbJy8nXSA6IF9wcm9wcyRpbml0aWFsRW50cmllcyxcbiAgICAgIF9wcm9wcyRpbml0aWFsSW5kZXggPSBfcHJvcHMuaW5pdGlhbEluZGV4LFxuICAgICAgaW5pdGlhbEluZGV4ID0gX3Byb3BzJGluaXRpYWxJbmRleCA9PT0gdm9pZCAwID8gMCA6IF9wcm9wcyRpbml0aWFsSW5kZXgsXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gX3Byb3BzLmtleUxlbmd0aCxcbiAgICAgIGtleUxlbmd0aCA9IF9wcm9wcyRrZXlMZW5ndGggPT09IHZvaWQgMCA/IDYgOiBfcHJvcHMka2V5TGVuZ3RoO1xuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGhpc3RvcnkuZW50cmllcy5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XG4gIH1cblxuICB2YXIgaW5kZXggPSBjbGFtcChpbml0aWFsSW5kZXgsIDAsIGluaXRpYWxFbnRyaWVzLmxlbmd0aCAtIDEpO1xuICB2YXIgZW50cmllcyA9IGluaXRpYWxFbnRyaWVzLm1hcChmdW5jdGlvbiAoZW50cnkpIHtcbiAgICByZXR1cm4gdHlwZW9mIGVudHJ5ID09PSAnc3RyaW5nJyA/IGNyZWF0ZUxvY2F0aW9uKGVudHJ5LCB1bmRlZmluZWQsIGNyZWF0ZUtleSgpKSA6IGNyZWF0ZUxvY2F0aW9uKGVudHJ5LCB1bmRlZmluZWQsIGVudHJ5LmtleSB8fCBjcmVhdGVLZXkoKSk7XG4gIH0pOyAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgdmFyIGNyZWF0ZUhyZWYgPSBjcmVhdGVQYXRoO1xuXG4gIGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgcHJldkluZGV4ID0gaGlzdG9yeS5pbmRleDtcbiAgICAgIHZhciBuZXh0SW5kZXggPSBwcmV2SW5kZXggKyAxO1xuICAgICAgdmFyIG5leHRFbnRyaWVzID0gaGlzdG9yeS5lbnRyaWVzLnNsaWNlKDApO1xuXG4gICAgICBpZiAobmV4dEVudHJpZXMubGVuZ3RoID4gbmV4dEluZGV4KSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnNwbGljZShuZXh0SW5kZXgsIG5leHRFbnRyaWVzLmxlbmd0aCAtIG5leHRJbmRleCwgbG9jYXRpb24pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV4dEVudHJpZXMucHVzaChsb2NhdGlvbik7XG4gICAgICB9XG5cbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgaW5kZXg6IG5leHRJbmRleCxcbiAgICAgICAgZW50cmllczogbmV4dEVudHJpZXNcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIGhpc3RvcnkuZW50cmllc1toaXN0b3J5LmluZGV4XSA9IGxvY2F0aW9uO1xuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKG4pIHtcbiAgICB2YXIgbmV4dEluZGV4ID0gY2xhbXAoaGlzdG9yeS5pbmRleCArIG4sIDAsIGhpc3RvcnkuZW50cmllcy5sZW5ndGggLSAxKTtcbiAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgdmFyIGxvY2F0aW9uID0gaGlzdG9yeS5lbnRyaWVzW25leHRJbmRleF07XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmIChvaykge1xuICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICAgIGluZGV4OiBuZXh0SW5kZXhcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBNaW1pYyB0aGUgYmVoYXZpb3Igb2YgRE9NIGhpc3RvcmllcyBieVxuICAgICAgICAvLyBjYXVzaW5nIGEgcmVuZGVyIGFmdGVyIGEgY2FuY2VsbGVkIFBPUC5cbiAgICAgICAgc2V0U3RhdGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICBmdW5jdGlvbiBjYW5HbyhuKSB7XG4gICAgdmFyIG5leHRJbmRleCA9IGhpc3RvcnkuaW5kZXggKyBuO1xuICAgIHJldHVybiBuZXh0SW5kZXggPj0gMCAmJiBuZXh0SW5kZXggPCBoaXN0b3J5LmVudHJpZXMubGVuZ3RoO1xuICB9XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBlbnRyaWVzLmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBlbnRyaWVzW2luZGV4XSxcbiAgICBpbmRleDogaW5kZXgsXG4gICAgZW50cmllczogZW50cmllcyxcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgY2FuR286IGNhbkdvLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cblxuZXhwb3J0IHsgY3JlYXRlQnJvd3Nlckhpc3RvcnksIGNyZWF0ZUhhc2hIaXN0b3J5LCBjcmVhdGVNZW1vcnlIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiwgbG9jYXRpb25zQXJlRXF1YWwsIHBhcnNlUGF0aCwgY3JlYXRlUGF0aCB9O1xuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzTG9vc2UnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBndWQgZnJvbSAnZ3VkJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5cbnZhciBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgPSAxMDczNzQxODIzO1xuXG5mdW5jdGlvbiBvYmplY3RJcyh4LCB5KSB7XG4gIGlmICh4ID09PSB5KSB7XG4gICAgcmV0dXJuIHggIT09IDAgfHwgMSAvIHggPT09IDEgLyB5O1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB4ICE9PSB4ICYmIHkgIT09IHk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlRXZlbnRFbWl0dGVyKHZhbHVlKSB7XG4gIHZhciBoYW5kbGVycyA9IFtdO1xuICByZXR1cm4ge1xuICAgIG9uOiBmdW5jdGlvbiBvbihoYW5kbGVyKSB7XG4gICAgICBoYW5kbGVycy5wdXNoKGhhbmRsZXIpO1xuICAgIH0sXG4gICAgb2ZmOiBmdW5jdGlvbiBvZmYoaGFuZGxlcikge1xuICAgICAgaGFuZGxlcnMgPSBoYW5kbGVycy5maWx0ZXIoZnVuY3Rpb24gKGgpIHtcbiAgICAgICAgcmV0dXJuIGggIT09IGhhbmRsZXI7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0sXG4gICAgc2V0OiBmdW5jdGlvbiBzZXQobmV3VmFsdWUsIGNoYW5nZWRCaXRzKSB7XG4gICAgICB2YWx1ZSA9IG5ld1ZhbHVlO1xuICAgICAgaGFuZGxlcnMuZm9yRWFjaChmdW5jdGlvbiAoaGFuZGxlcikge1xuICAgICAgICByZXR1cm4gaGFuZGxlcih2YWx1ZSwgY2hhbmdlZEJpdHMpO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBvbmx5Q2hpbGQoY2hpbGRyZW4pIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW5bMF0gOiBjaGlsZHJlbjtcbn1cblxuZnVuY3Rpb24gY3JlYXRlUmVhY3RDb250ZXh0KGRlZmF1bHRWYWx1ZSwgY2FsY3VsYXRlQ2hhbmdlZEJpdHMpIHtcbiAgdmFyIF9Qcm92aWRlciRjaGlsZENvbnRleCwgX0NvbnN1bWVyJGNvbnRleHRUeXBlO1xuXG4gIHZhciBjb250ZXh0UHJvcCA9ICdfX2NyZWF0ZS1yZWFjdC1jb250ZXh0LScgKyBndWQoKSArICdfXyc7XG5cbiAgdmFyIFByb3ZpZGVyID1cbiAgLyojX19QVVJFX18qL1xuICBmdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICAgIF9pbmhlcml0c0xvb3NlKFByb3ZpZGVyLCBfQ29tcG9uZW50KTtcblxuICAgIGZ1bmN0aW9uIFByb3ZpZGVyKCkge1xuICAgICAgdmFyIF90aGlzO1xuXG4gICAgICBfdGhpcyA9IF9Db21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgICAgX3RoaXMuZW1pdHRlciA9IGNyZWF0ZUV2ZW50RW1pdHRlcihfdGhpcy5wcm9wcy52YWx1ZSk7XG4gICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgdmFyIF9wcm90byA9IFByb3ZpZGVyLnByb3RvdHlwZTtcblxuICAgIF9wcm90by5nZXRDaGlsZENvbnRleHQgPSBmdW5jdGlvbiBnZXRDaGlsZENvbnRleHQoKSB7XG4gICAgICB2YXIgX3JlZjtcblxuICAgICAgcmV0dXJuIF9yZWYgPSB7fSwgX3JlZltjb250ZXh0UHJvcF0gPSB0aGlzLmVtaXR0ZXIsIF9yZWY7XG4gICAgfTtcblxuICAgIF9wcm90by5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgIGlmICh0aGlzLnByb3BzLnZhbHVlICE9PSBuZXh0UHJvcHMudmFsdWUpIHtcbiAgICAgICAgdmFyIG9sZFZhbHVlID0gdGhpcy5wcm9wcy52YWx1ZTtcbiAgICAgICAgdmFyIG5ld1ZhbHVlID0gbmV4dFByb3BzLnZhbHVlO1xuICAgICAgICB2YXIgY2hhbmdlZEJpdHM7XG5cbiAgICAgICAgaWYgKG9iamVjdElzKG9sZFZhbHVlLCBuZXdWYWx1ZSkpIHtcbiAgICAgICAgICBjaGFuZ2VkQml0cyA9IDA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2hhbmdlZEJpdHMgPSB0eXBlb2YgY2FsY3VsYXRlQ2hhbmdlZEJpdHMgPT09ICdmdW5jdGlvbicgPyBjYWxjdWxhdGVDaGFuZ2VkQml0cyhvbGRWYWx1ZSwgbmV3VmFsdWUpIDogTUFYX1NJR05FRF8zMV9CSVRfSU5UO1xuXG4gICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgIHdhcm5pbmcoKGNoYW5nZWRCaXRzICYgTUFYX1NJR05FRF8zMV9CSVRfSU5UKSA9PT0gY2hhbmdlZEJpdHMsICdjYWxjdWxhdGVDaGFuZ2VkQml0czogRXhwZWN0ZWQgdGhlIHJldHVybiB2YWx1ZSB0byBiZSBhICcgKyAnMzEtYml0IGludGVnZXIuIEluc3RlYWQgcmVjZWl2ZWQ6ICcgKyBjaGFuZ2VkQml0cyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY2hhbmdlZEJpdHMgfD0gMDtcblxuICAgICAgICAgIGlmIChjaGFuZ2VkQml0cyAhPT0gMCkge1xuICAgICAgICAgICAgdGhpcy5lbWl0dGVyLnNldChuZXh0UHJvcHMudmFsdWUsIGNoYW5nZWRCaXRzKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiB0aGlzLnByb3BzLmNoaWxkcmVuO1xuICAgIH07XG5cbiAgICByZXR1cm4gUHJvdmlkZXI7XG4gIH0oQ29tcG9uZW50KTtcblxuICBQcm92aWRlci5jaGlsZENvbnRleHRUeXBlcyA9IChfUHJvdmlkZXIkY2hpbGRDb250ZXggPSB7fSwgX1Byb3ZpZGVyJGNoaWxkQ29udGV4W2NvbnRleHRQcm9wXSA9IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCwgX1Byb3ZpZGVyJGNoaWxkQ29udGV4KTtcblxuICB2YXIgQ29uc3VtZXIgPVxuICAvKiNfX1BVUkVfXyovXG4gIGZ1bmN0aW9uIChfQ29tcG9uZW50Mikge1xuICAgIF9pbmhlcml0c0xvb3NlKENvbnN1bWVyLCBfQ29tcG9uZW50Mik7XG5cbiAgICBmdW5jdGlvbiBDb25zdW1lcigpIHtcbiAgICAgIHZhciBfdGhpczI7XG5cbiAgICAgIF90aGlzMiA9IF9Db21wb25lbnQyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgIF90aGlzMi5zdGF0ZSA9IHtcbiAgICAgICAgdmFsdWU6IF90aGlzMi5nZXRWYWx1ZSgpXG4gICAgICB9O1xuXG4gICAgICBfdGhpczIub25VcGRhdGUgPSBmdW5jdGlvbiAobmV3VmFsdWUsIGNoYW5nZWRCaXRzKSB7XG4gICAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSBfdGhpczIub2JzZXJ2ZWRCaXRzIHwgMDtcblxuICAgICAgICBpZiAoKG9ic2VydmVkQml0cyAmIGNoYW5nZWRCaXRzKSAhPT0gMCkge1xuICAgICAgICAgIF90aGlzMi5zZXRTdGF0ZSh7XG4gICAgICAgICAgICB2YWx1ZTogX3RoaXMyLmdldFZhbHVlKClcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgcmV0dXJuIF90aGlzMjtcbiAgICB9XG5cbiAgICB2YXIgX3Byb3RvMiA9IENvbnN1bWVyLnByb3RvdHlwZTtcblxuICAgIF9wcm90bzIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gbmV4dFByb3BzLm9ic2VydmVkQml0cztcbiAgICAgIHRoaXMub2JzZXJ2ZWRCaXRzID0gb2JzZXJ2ZWRCaXRzID09PSB1bmRlZmluZWQgfHwgb2JzZXJ2ZWRCaXRzID09PSBudWxsID8gTUFYX1NJR05FRF8zMV9CSVRfSU5UIDogb2JzZXJ2ZWRCaXRzO1xuICAgIH07XG5cbiAgICBfcHJvdG8yLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xuICAgICAgICB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLm9uKHRoaXMub25VcGRhdGUpO1xuICAgICAgfVxuXG4gICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gdGhpcy5wcm9wcy5vYnNlcnZlZEJpdHM7XG4gICAgICB0aGlzLm9ic2VydmVkQml0cyA9IG9ic2VydmVkQml0cyA9PT0gdW5kZWZpbmVkIHx8IG9ic2VydmVkQml0cyA9PT0gbnVsbCA/IE1BWF9TSUdORURfMzFfQklUX0lOVCA6IG9ic2VydmVkQml0cztcbiAgICB9O1xuXG4gICAgX3Byb3RvMi5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcbiAgICAgICAgdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5vZmYodGhpcy5vblVwZGF0ZSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90bzIuZ2V0VmFsdWUgPSBmdW5jdGlvbiBnZXRWYWx1ZSgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLmdldCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGRlZmF1bHRWYWx1ZTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvMi5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gb25seUNoaWxkKHRoaXMucHJvcHMuY2hpbGRyZW4pKHRoaXMuc3RhdGUudmFsdWUpO1xuICAgIH07XG5cbiAgICByZXR1cm4gQ29uc3VtZXI7XG4gIH0oQ29tcG9uZW50KTtcblxuICBDb25zdW1lci5jb250ZXh0VHlwZXMgPSAoX0NvbnN1bWVyJGNvbnRleHRUeXBlID0ge30sIF9Db25zdW1lciRjb250ZXh0VHlwZVtjb250ZXh0UHJvcF0gPSBQcm9wVHlwZXMub2JqZWN0LCBfQ29uc3VtZXIkY29udGV4dFR5cGUpO1xuICByZXR1cm4ge1xuICAgIFByb3ZpZGVyOiBQcm92aWRlcixcbiAgICBDb25zdW1lcjogQ29uc3VtZXJcbiAgfTtcbn1cblxudmFyIGluZGV4ID0gUmVhY3QuY3JlYXRlQ29udGV4dCB8fCBjcmVhdGVSZWFjdENvbnRleHQ7XG5cbmV4cG9ydCBkZWZhdWx0IGluZGV4O1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkge1xuICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTtcbiAgdmFyIHRhcmdldCA9IHt9O1xuICB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG4gIHZhciBrZXksIGk7XG5cbiAgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHtcbiAgICBrZXkgPSBzb3VyY2VLZXlzW2ldO1xuICAgIGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7XG4gICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59IiwiaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBjcmVhdGVNZW1vcnlIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiwgbG9jYXRpb25zQXJlRXF1YWwsIGNyZWF0ZVBhdGggfSBmcm9tICdoaXN0b3J5JztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5pbXBvcnQgY3JlYXRlQ29udGV4dCBmcm9tICdtaW5pLWNyZWF0ZS1yZWFjdC1jb250ZXh0JztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAndGlueS1pbnZhcmlhbnQnO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IHBhdGhUb1JlZ2V4cCBmcm9tICdwYXRoLXRvLXJlZ2V4cCc7XG5pbXBvcnQgeyBpc1ZhbGlkRWxlbWVudFR5cGUgfSBmcm9tICdyZWFjdC1pcyc7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSc7XG5pbXBvcnQgaG9pc3RTdGF0aWNzIGZyb20gJ2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzJztcblxuLy8gVE9ETzogUmVwbGFjZSB3aXRoIFJlYWN0LmNyZWF0ZUNvbnRleHQgb25jZSB3ZSBjYW4gYXNzdW1lIFJlYWN0IDE2K1xuXG52YXIgY3JlYXRlTmFtZWRDb250ZXh0ID0gZnVuY3Rpb24gY3JlYXRlTmFtZWRDb250ZXh0KG5hbWUpIHtcbiAgdmFyIGNvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XG4gIGNvbnRleHQuZGlzcGxheU5hbWUgPSBuYW1lO1xuICByZXR1cm4gY29udGV4dDtcbn07XG5cbnZhciBjb250ZXh0ID1cbi8qI19fUFVSRV9fKi9cbmNyZWF0ZU5hbWVkQ29udGV4dChcIlJvdXRlclwiKTtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcHV0dGluZyBoaXN0b3J5IG9uIGNvbnRleHQuXG4gKi9cblxudmFyIFJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIFJvdXRlci5jb21wdXRlUm9vdE1hdGNoID0gZnVuY3Rpb24gY29tcHV0ZVJvb3RNYXRjaChwYXRobmFtZSkge1xuICAgIHJldHVybiB7XG4gICAgICBwYXRoOiBcIi9cIixcbiAgICAgIHVybDogXCIvXCIsXG4gICAgICBwYXJhbXM6IHt9LFxuICAgICAgaXNFeGFjdDogcGF0aG5hbWUgPT09IFwiL1wiXG4gICAgfTtcbiAgfTtcblxuICBmdW5jdGlvbiBSb3V0ZXIocHJvcHMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbCh0aGlzLCBwcm9wcykgfHwgdGhpcztcbiAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGxvY2F0aW9uOiBwcm9wcy5oaXN0b3J5LmxvY2F0aW9uXG4gICAgfTsgLy8gVGhpcyBpcyBhIGJpdCBvZiBhIGhhY2suIFdlIGhhdmUgdG8gc3RhcnQgbGlzdGVuaW5nIGZvciBsb2NhdGlvblxuICAgIC8vIGNoYW5nZXMgaGVyZSBpbiB0aGUgY29uc3RydWN0b3IgaW4gY2FzZSB0aGVyZSBhcmUgYW55IDxSZWRpcmVjdD5zXG4gICAgLy8gb24gdGhlIGluaXRpYWwgcmVuZGVyLiBJZiB0aGVyZSBhcmUsIHRoZXkgd2lsbCByZXBsYWNlL3B1c2ggd2hlblxuICAgIC8vIHRoZXkgbW91bnQgYW5kIHNpbmNlIGNETSBmaXJlcyBpbiBjaGlsZHJlbiBiZWZvcmUgcGFyZW50cywgd2UgbWF5XG4gICAgLy8gZ2V0IGEgbmV3IGxvY2F0aW9uIGJlZm9yZSB0aGUgPFJvdXRlcj4gaXMgbW91bnRlZC5cblxuICAgIF90aGlzLl9pc01vdW50ZWQgPSBmYWxzZTtcbiAgICBfdGhpcy5fcGVuZGluZ0xvY2F0aW9uID0gbnVsbDtcblxuICAgIGlmICghcHJvcHMuc3RhdGljQ29udGV4dCkge1xuICAgICAgX3RoaXMudW5saXN0ZW4gPSBwcm9wcy5oaXN0b3J5Lmxpc3RlbihmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgICAgICAgaWYgKF90aGlzLl9pc01vdW50ZWQpIHtcbiAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfdGhpcy5fcGVuZGluZ0xvY2F0aW9uID0gbG9jYXRpb247XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMuX2lzTW91bnRlZCA9IHRydWU7XG5cbiAgICBpZiAodGhpcy5fcGVuZGluZ0xvY2F0aW9uKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgbG9jYXRpb246IHRoaXMuX3BlbmRpbmdMb2NhdGlvblxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGlmICh0aGlzLnVubGlzdGVuKSB0aGlzLnVubGlzdGVuKCk7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlbiB8fCBudWxsLFxuICAgICAgdmFsdWU6IHtcbiAgICAgICAgaGlzdG9yeTogdGhpcy5wcm9wcy5oaXN0b3J5LFxuICAgICAgICBsb2NhdGlvbjogdGhpcy5zdGF0ZS5sb2NhdGlvbixcbiAgICAgICAgbWF0Y2g6IFJvdXRlci5jb21wdXRlUm9vdE1hdGNoKHRoaXMuc3RhdGUubG9jYXRpb24ucGF0aG5hbWUpLFxuICAgICAgICBzdGF0aWNDb250ZXh0OiB0aGlzLnByb3BzLnN0YXRpY0NvbnRleHRcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGhpc3Rvcnk6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICBzdGF0aWNDb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0XG4gIH07XG5cbiAgUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAocHJldlByb3BzKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhwcmV2UHJvcHMuaGlzdG9yeSA9PT0gdGhpcy5wcm9wcy5oaXN0b3J5LCBcIllvdSBjYW5ub3QgY2hhbmdlIDxSb3V0ZXIgaGlzdG9yeT5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCBzdG9yZXMgbG9jYXRpb24gaW4gbWVtb3J5LlxuICovXG5cbnZhciBNZW1vcnlSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoTWVtb3J5Um91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBNZW1vcnlSb3V0ZXIoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XG4gICAgX3RoaXMuaGlzdG9yeSA9IGNyZWF0ZU1lbW9yeUhpc3RvcnkoX3RoaXMucHJvcHMpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBNZW1vcnlSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XG4gICAgICBoaXN0b3J5OiB0aGlzLmhpc3RvcnksXG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlblxuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBNZW1vcnlSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgTWVtb3J5Um91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBpbml0aWFsRW50cmllczogUHJvcFR5cGVzLmFycmF5LFxuICAgIGluaXRpYWxJbmRleDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBrZXlMZW5ndGg6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlXG4gIH07XG5cbiAgTWVtb3J5Um91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPE1lbW9yeVJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IE1lbW9yeVJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG52YXIgTGlmZWN5Y2xlID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKExpZmVjeWNsZSwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gTGlmZWN5Y2xlKCkge1xuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBMaWZlY3ljbGUucHJvdG90eXBlO1xuXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGlmICh0aGlzLnByb3BzLm9uTW91bnQpIHRoaXMucHJvcHMub25Nb3VudC5jYWxsKHRoaXMsIHRoaXMpO1xuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25VcGRhdGUpIHRoaXMucHJvcHMub25VcGRhdGUuY2FsbCh0aGlzLCB0aGlzLCBwcmV2UHJvcHMpO1xuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGlmICh0aGlzLnByb3BzLm9uVW5tb3VudCkgdGhpcy5wcm9wcy5vblVubW91bnQuY2FsbCh0aGlzLCB0aGlzKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBudWxsO1xuICB9O1xuXG4gIHJldHVybiBMaWZlY3ljbGU7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHByb21wdGluZyB0aGUgdXNlciBiZWZvcmUgbmF2aWdhdGluZyBhd2F5IGZyb20gYSBzY3JlZW4uXG4gKi9cblxuZnVuY3Rpb24gUHJvbXB0KF9yZWYpIHtcbiAgdmFyIG1lc3NhZ2UgPSBfcmVmLm1lc3NhZ2UsXG4gICAgICBfcmVmJHdoZW4gPSBfcmVmLndoZW4sXG4gICAgICB3aGVuID0gX3JlZiR3aGVuID09PSB2b2lkIDAgPyB0cnVlIDogX3JlZiR3aGVuO1xuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8UHJvbXB0PiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIGlmICghd2hlbiB8fCBjb250ZXh0LnN0YXRpY0NvbnRleHQpIHJldHVybiBudWxsO1xuICAgIHZhciBtZXRob2QgPSBjb250ZXh0Lmhpc3RvcnkuYmxvY2s7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGlmZWN5Y2xlLCB7XG4gICAgICBvbk1vdW50OiBmdW5jdGlvbiBvbk1vdW50KHNlbGYpIHtcbiAgICAgICAgc2VsZi5yZWxlYXNlID0gbWV0aG9kKG1lc3NhZ2UpO1xuICAgICAgfSxcbiAgICAgIG9uVXBkYXRlOiBmdW5jdGlvbiBvblVwZGF0ZShzZWxmLCBwcmV2UHJvcHMpIHtcbiAgICAgICAgaWYgKHByZXZQcm9wcy5tZXNzYWdlICE9PSBtZXNzYWdlKSB7XG4gICAgICAgICAgc2VsZi5yZWxlYXNlKCk7XG4gICAgICAgICAgc2VsZi5yZWxlYXNlID0gbWV0aG9kKG1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgb25Vbm1vdW50OiBmdW5jdGlvbiBvblVubW91bnQoc2VsZikge1xuICAgICAgICBzZWxmLnJlbGVhc2UoKTtcbiAgICAgIH0sXG4gICAgICBtZXNzYWdlOiBtZXNzYWdlXG4gICAgfSk7XG4gIH0pO1xufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIHZhciBtZXNzYWdlVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMuc3RyaW5nXSk7XG4gIFByb21wdC5wcm9wVHlwZXMgPSB7XG4gICAgd2hlbjogUHJvcFR5cGVzLmJvb2wsXG4gICAgbWVzc2FnZTogbWVzc2FnZVR5cGUuaXNSZXF1aXJlZFxuICB9O1xufVxuXG52YXIgY2FjaGUgPSB7fTtcbnZhciBjYWNoZUxpbWl0ID0gMTAwMDA7XG52YXIgY2FjaGVDb3VudCA9IDA7XG5cbmZ1bmN0aW9uIGNvbXBpbGVQYXRoKHBhdGgpIHtcbiAgaWYgKGNhY2hlW3BhdGhdKSByZXR1cm4gY2FjaGVbcGF0aF07XG4gIHZhciBnZW5lcmF0b3IgPSBwYXRoVG9SZWdleHAuY29tcGlsZShwYXRoKTtcblxuICBpZiAoY2FjaGVDb3VudCA8IGNhY2hlTGltaXQpIHtcbiAgICBjYWNoZVtwYXRoXSA9IGdlbmVyYXRvcjtcbiAgICBjYWNoZUNvdW50Kys7XG4gIH1cblxuICByZXR1cm4gZ2VuZXJhdG9yO1xufVxuLyoqXG4gKiBQdWJsaWMgQVBJIGZvciBnZW5lcmF0aW5nIGEgVVJMIHBhdGhuYW1lIGZyb20gYSBwYXRoIGFuZCBwYXJhbWV0ZXJzLlxuICovXG5cblxuZnVuY3Rpb24gZ2VuZXJhdGVQYXRoKHBhdGgsIHBhcmFtcykge1xuICBpZiAocGF0aCA9PT0gdm9pZCAwKSB7XG4gICAgcGF0aCA9IFwiL1wiO1xuICB9XG5cbiAgaWYgKHBhcmFtcyA9PT0gdm9pZCAwKSB7XG4gICAgcGFyYW1zID0ge307XG4gIH1cblxuICByZXR1cm4gcGF0aCA9PT0gXCIvXCIgPyBwYXRoIDogY29tcGlsZVBhdGgocGF0aCkocGFyYW1zLCB7XG4gICAgcHJldHR5OiB0cnVlXG4gIH0pO1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBuYXZpZ2F0aW5nIHByb2dyYW1tYXRpY2FsbHkgd2l0aCBhIGNvbXBvbmVudC5cbiAqL1xuXG5mdW5jdGlvbiBSZWRpcmVjdChfcmVmKSB7XG4gIHZhciBjb21wdXRlZE1hdGNoID0gX3JlZi5jb21wdXRlZE1hdGNoLFxuICAgICAgdG8gPSBfcmVmLnRvLFxuICAgICAgX3JlZiRwdXNoID0gX3JlZi5wdXNoLFxuICAgICAgcHVzaCA9IF9yZWYkcHVzaCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcmVmJHB1c2g7XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSZWRpcmVjdD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICB2YXIgaGlzdG9yeSA9IGNvbnRleHQuaGlzdG9yeSxcbiAgICAgICAgc3RhdGljQ29udGV4dCA9IGNvbnRleHQuc3RhdGljQ29udGV4dDtcbiAgICB2YXIgbWV0aG9kID0gcHVzaCA/IGhpc3RvcnkucHVzaCA6IGhpc3RvcnkucmVwbGFjZTtcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihjb21wdXRlZE1hdGNoID8gdHlwZW9mIHRvID09PSBcInN0cmluZ1wiID8gZ2VuZXJhdGVQYXRoKHRvLCBjb21wdXRlZE1hdGNoLnBhcmFtcykgOiBfZXh0ZW5kcyh7fSwgdG8sIHtcbiAgICAgIHBhdGhuYW1lOiBnZW5lcmF0ZVBhdGgodG8ucGF0aG5hbWUsIGNvbXB1dGVkTWF0Y2gucGFyYW1zKVxuICAgIH0pIDogdG8pOyAvLyBXaGVuIHJlbmRlcmluZyBpbiBhIHN0YXRpYyBjb250ZXh0LFxuICAgIC8vIHNldCB0aGUgbmV3IGxvY2F0aW9uIGltbWVkaWF0ZWx5LlxuXG4gICAgaWYgKHN0YXRpY0NvbnRleHQpIHtcbiAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChMaWZlY3ljbGUsIHtcbiAgICAgIG9uTW91bnQ6IGZ1bmN0aW9uIG9uTW91bnQoKSB7XG4gICAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICB9LFxuICAgICAgb25VcGRhdGU6IGZ1bmN0aW9uIG9uVXBkYXRlKHNlbGYsIHByZXZQcm9wcykge1xuICAgICAgICB2YXIgcHJldkxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocHJldlByb3BzLnRvKTtcblxuICAgICAgICBpZiAoIWxvY2F0aW9uc0FyZUVxdWFsKHByZXZMb2NhdGlvbiwgX2V4dGVuZHMoe30sIGxvY2F0aW9uLCB7XG4gICAgICAgICAga2V5OiBwcmV2TG9jYXRpb24ua2V5XG4gICAgICAgIH0pKSkge1xuICAgICAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB0bzogdG9cbiAgICB9KTtcbiAgfSk7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgUmVkaXJlY3QucHJvcFR5cGVzID0ge1xuICAgIHB1c2g6IFByb3BUeXBlcy5ib29sLFxuICAgIGZyb206IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgdG86IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3RdKS5pc1JlcXVpcmVkXG4gIH07XG59XG5cbnZhciBjYWNoZSQxID0ge307XG52YXIgY2FjaGVMaW1pdCQxID0gMTAwMDA7XG52YXIgY2FjaGVDb3VudCQxID0gMDtcblxuZnVuY3Rpb24gY29tcGlsZVBhdGgkMShwYXRoLCBvcHRpb25zKSB7XG4gIHZhciBjYWNoZUtleSA9IFwiXCIgKyBvcHRpb25zLmVuZCArIG9wdGlvbnMuc3RyaWN0ICsgb3B0aW9ucy5zZW5zaXRpdmU7XG4gIHZhciBwYXRoQ2FjaGUgPSBjYWNoZSQxW2NhY2hlS2V5XSB8fCAoY2FjaGUkMVtjYWNoZUtleV0gPSB7fSk7XG4gIGlmIChwYXRoQ2FjaGVbcGF0aF0pIHJldHVybiBwYXRoQ2FjaGVbcGF0aF07XG4gIHZhciBrZXlzID0gW107XG4gIHZhciByZWdleHAgPSBwYXRoVG9SZWdleHAocGF0aCwga2V5cywgb3B0aW9ucyk7XG4gIHZhciByZXN1bHQgPSB7XG4gICAgcmVnZXhwOiByZWdleHAsXG4gICAga2V5czoga2V5c1xuICB9O1xuXG4gIGlmIChjYWNoZUNvdW50JDEgPCBjYWNoZUxpbWl0JDEpIHtcbiAgICBwYXRoQ2FjaGVbcGF0aF0gPSByZXN1bHQ7XG4gICAgY2FjaGVDb3VudCQxKys7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuLyoqXG4gKiBQdWJsaWMgQVBJIGZvciBtYXRjaGluZyBhIFVSTCBwYXRobmFtZSB0byBhIHBhdGguXG4gKi9cblxuXG5mdW5jdGlvbiBtYXRjaFBhdGgocGF0aG5hbWUsIG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gXCJzdHJpbmdcIiB8fCBBcnJheS5pc0FycmF5KG9wdGlvbnMpKSB7XG4gICAgb3B0aW9ucyA9IHtcbiAgICAgIHBhdGg6IG9wdGlvbnNcbiAgICB9O1xuICB9XG5cbiAgdmFyIF9vcHRpb25zID0gb3B0aW9ucyxcbiAgICAgIHBhdGggPSBfb3B0aW9ucy5wYXRoLFxuICAgICAgX29wdGlvbnMkZXhhY3QgPSBfb3B0aW9ucy5leGFjdCxcbiAgICAgIGV4YWN0ID0gX29wdGlvbnMkZXhhY3QgPT09IHZvaWQgMCA/IGZhbHNlIDogX29wdGlvbnMkZXhhY3QsXG4gICAgICBfb3B0aW9ucyRzdHJpY3QgPSBfb3B0aW9ucy5zdHJpY3QsXG4gICAgICBzdHJpY3QgPSBfb3B0aW9ucyRzdHJpY3QgPT09IHZvaWQgMCA/IGZhbHNlIDogX29wdGlvbnMkc3RyaWN0LFxuICAgICAgX29wdGlvbnMkc2Vuc2l0aXZlID0gX29wdGlvbnMuc2Vuc2l0aXZlLFxuICAgICAgc2Vuc2l0aXZlID0gX29wdGlvbnMkc2Vuc2l0aXZlID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJHNlbnNpdGl2ZTtcbiAgdmFyIHBhdGhzID0gW10uY29uY2F0KHBhdGgpO1xuICByZXR1cm4gcGF0aHMucmVkdWNlKGZ1bmN0aW9uIChtYXRjaGVkLCBwYXRoKSB7XG4gICAgaWYgKCFwYXRoICYmIHBhdGggIT09IFwiXCIpIHJldHVybiBudWxsO1xuICAgIGlmIChtYXRjaGVkKSByZXR1cm4gbWF0Y2hlZDtcblxuICAgIHZhciBfY29tcGlsZVBhdGggPSBjb21waWxlUGF0aCQxKHBhdGgsIHtcbiAgICAgIGVuZDogZXhhY3QsXG4gICAgICBzdHJpY3Q6IHN0cmljdCxcbiAgICAgIHNlbnNpdGl2ZTogc2Vuc2l0aXZlXG4gICAgfSksXG4gICAgICAgIHJlZ2V4cCA9IF9jb21waWxlUGF0aC5yZWdleHAsXG4gICAgICAgIGtleXMgPSBfY29tcGlsZVBhdGgua2V5cztcblxuICAgIHZhciBtYXRjaCA9IHJlZ2V4cC5leGVjKHBhdGhuYW1lKTtcbiAgICBpZiAoIW1hdGNoKSByZXR1cm4gbnVsbDtcbiAgICB2YXIgdXJsID0gbWF0Y2hbMF0sXG4gICAgICAgIHZhbHVlcyA9IG1hdGNoLnNsaWNlKDEpO1xuICAgIHZhciBpc0V4YWN0ID0gcGF0aG5hbWUgPT09IHVybDtcbiAgICBpZiAoZXhhY3QgJiYgIWlzRXhhY3QpIHJldHVybiBudWxsO1xuICAgIHJldHVybiB7XG4gICAgICBwYXRoOiBwYXRoLFxuICAgICAgLy8gdGhlIHBhdGggdXNlZCB0byBtYXRjaFxuICAgICAgdXJsOiBwYXRoID09PSBcIi9cIiAmJiB1cmwgPT09IFwiXCIgPyBcIi9cIiA6IHVybCxcbiAgICAgIC8vIHRoZSBtYXRjaGVkIHBvcnRpb24gb2YgdGhlIFVSTFxuICAgICAgaXNFeGFjdDogaXNFeGFjdCxcbiAgICAgIC8vIHdoZXRoZXIgb3Igbm90IHdlIG1hdGNoZWQgZXhhY3RseVxuICAgICAgcGFyYW1zOiBrZXlzLnJlZHVjZShmdW5jdGlvbiAobWVtbywga2V5LCBpbmRleCkge1xuICAgICAgICBtZW1vW2tleS5uYW1lXSA9IHZhbHVlc1tpbmRleF07XG4gICAgICAgIHJldHVybiBtZW1vO1xuICAgICAgfSwge30pXG4gICAgfTtcbiAgfSwgbnVsbCk7XG59XG5cbmZ1bmN0aW9uIGlzRW1wdHlDaGlsZHJlbihjaGlsZHJlbikge1xuICByZXR1cm4gUmVhY3QuQ2hpbGRyZW4uY291bnQoY2hpbGRyZW4pID09PSAwO1xufVxuXG5mdW5jdGlvbiBldmFsQ2hpbGRyZW5EZXYoY2hpbGRyZW4sIHByb3BzLCBwYXRoKSB7XG4gIHZhciB2YWx1ZSA9IGNoaWxkcmVuKHByb3BzKTtcbiAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyh2YWx1ZSAhPT0gdW5kZWZpbmVkLCBcIllvdSByZXR1cm5lZCBgdW5kZWZpbmVkYCBmcm9tIHRoZSBgY2hpbGRyZW5gIGZ1bmN0aW9uIG9mIFwiICsgKFwiPFJvdXRlXCIgKyAocGF0aCA/IFwiIHBhdGg9XFxcIlwiICsgcGF0aCArIFwiXFxcIlwiIDogXCJcIikgKyBcIj4sIGJ1dCB5b3UgXCIpICsgXCJzaG91bGQgaGF2ZSByZXR1cm5lZCBhIFJlYWN0IGVsZW1lbnQgb3IgYG51bGxgXCIpIDogdm9pZCAwO1xuICByZXR1cm4gdmFsdWUgfHwgbnVsbDtcbn1cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgc2luZ2xlIHBhdGggYW5kIHJlbmRlcmluZy5cbiAqL1xuXG5cbnZhciBSb3V0ZSA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShSb3V0ZSwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gUm91dGUoKSB7XG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFJvdXRlLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCQxKSB7XG4gICAgICAhY29udGV4dCQxID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGU+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgICB2YXIgbG9jYXRpb24gPSBfdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCBjb250ZXh0JDEubG9jYXRpb247XG4gICAgICB2YXIgbWF0Y2ggPSBfdGhpcy5wcm9wcy5jb21wdXRlZE1hdGNoID8gX3RoaXMucHJvcHMuY29tcHV0ZWRNYXRjaCAvLyA8U3dpdGNoPiBhbHJlYWR5IGNvbXB1dGVkIHRoZSBtYXRjaCBmb3IgdXNcbiAgICAgIDogX3RoaXMucHJvcHMucGF0aCA/IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgX3RoaXMucHJvcHMpIDogY29udGV4dCQxLm1hdGNoO1xuXG4gICAgICB2YXIgcHJvcHMgPSBfZXh0ZW5kcyh7fSwgY29udGV4dCQxLCB7XG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgbWF0Y2g6IG1hdGNoXG4gICAgICB9KTtcblxuICAgICAgdmFyIF90aGlzJHByb3BzID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgY2hpbGRyZW4gPSBfdGhpcyRwcm9wcy5jaGlsZHJlbixcbiAgICAgICAgICBjb21wb25lbnQgPSBfdGhpcyRwcm9wcy5jb21wb25lbnQsXG4gICAgICAgICAgcmVuZGVyID0gX3RoaXMkcHJvcHMucmVuZGVyOyAvLyBQcmVhY3QgdXNlcyBhbiBlbXB0eSBhcnJheSBhcyBjaGlsZHJlbiBieVxuICAgICAgLy8gZGVmYXVsdCwgc28gdXNlIG51bGwgaWYgdGhhdCdzIHRoZSBjYXNlLlxuXG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZHJlbikgJiYgY2hpbGRyZW4ubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGNoaWxkcmVuID0gbnVsbDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Qcm92aWRlciwge1xuICAgICAgICB2YWx1ZTogcHJvcHNcbiAgICAgIH0sIHByb3BzLm1hdGNoID8gY2hpbGRyZW4gPyB0eXBlb2YgY2hpbGRyZW4gPT09IFwiZnVuY3Rpb25cIiA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGV2YWxDaGlsZHJlbkRldihjaGlsZHJlbiwgcHJvcHMsIF90aGlzLnByb3BzLnBhdGgpIDogY2hpbGRyZW4ocHJvcHMpIDogY2hpbGRyZW4gOiBjb21wb25lbnQgPyBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbXBvbmVudCwgcHJvcHMpIDogcmVuZGVyID8gcmVuZGVyKHByb3BzKSA6IG51bGwgOiB0eXBlb2YgY2hpbGRyZW4gPT09IFwiZnVuY3Rpb25cIiA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGV2YWxDaGlsZHJlbkRldihjaGlsZHJlbiwgcHJvcHMsIF90aGlzLnByb3BzLnBhdGgpIDogY2hpbGRyZW4ocHJvcHMpIDogbnVsbCk7XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIFJvdXRlO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFJvdXRlLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5ub2RlXSksXG4gICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQocHJvcHMsIHByb3BOYW1lKSB7XG4gICAgICBpZiAocHJvcHNbcHJvcE5hbWVdICYmICFpc1ZhbGlkRWxlbWVudFR5cGUocHJvcHNbcHJvcE5hbWVdKSkge1xuICAgICAgICByZXR1cm4gbmV3IEVycm9yKFwiSW52YWxpZCBwcm9wICdjb21wb25lbnQnIHN1cHBsaWVkIHRvICdSb3V0ZSc6IHRoZSBwcm9wIGlzIG5vdCBhIHZhbGlkIFJlYWN0IGNvbXBvbmVudFwiKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGV4YWN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBwYXRoOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuc3RyaW5nKV0pLFxuICAgIHJlbmRlcjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgc2Vuc2l0aXZlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBzdHJpY3Q6IFByb3BUeXBlcy5ib29sXG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikgJiYgdGhpcy5wcm9wcy5jb21wb25lbnQpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgY29tcG9uZW50PiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIGNvbXBvbmVudD4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikgJiYgdGhpcy5wcm9wcy5yZW5kZXIpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgcmVuZGVyPiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIHJlbmRlcj4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNvbXBvbmVudCAmJiB0aGlzLnByb3BzLnJlbmRlciksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSBjb21wb25lbnQ+IGFuZCA8Um91dGUgcmVuZGVyPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIHJlbmRlcj4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAocHJldlByb3BzKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMubG9jYXRpb24gJiYgIXByZXZQcm9wcy5sb2NhdGlvbiksICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgaW5pdGlhbGx5IHVzZWQgbm8gXCJsb2NhdGlvblwiIHByb3AgYW5kIHRoZW4gcHJvdmlkZWQgb25lIG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKCF0aGlzLnByb3BzLmxvY2F0aW9uICYmIHByZXZQcm9wcy5sb2NhdGlvbiksICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYWRkTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSBcIi9cIiA/IHBhdGggOiBcIi9cIiArIHBhdGg7XG59XG5cbmZ1bmN0aW9uIGFkZEJhc2VuYW1lKGJhc2VuYW1lLCBsb2NhdGlvbikge1xuICBpZiAoIWJhc2VuYW1lKSByZXR1cm4gbG9jYXRpb247XG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHtcbiAgICBwYXRobmFtZTogYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lKSArIGxvY2F0aW9uLnBhdGhuYW1lXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBzdHJpcEJhc2VuYW1lKGJhc2VuYW1lLCBsb2NhdGlvbikge1xuICBpZiAoIWJhc2VuYW1lKSByZXR1cm4gbG9jYXRpb247XG4gIHZhciBiYXNlID0gYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lKTtcbiAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLmluZGV4T2YoYmFzZSkgIT09IDApIHJldHVybiBsb2NhdGlvbjtcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xuICAgIHBhdGhuYW1lOiBsb2NhdGlvbi5wYXRobmFtZS5zdWJzdHIoYmFzZS5sZW5ndGgpXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVVUkwobG9jYXRpb24pIHtcbiAgcmV0dXJuIHR5cGVvZiBsb2NhdGlvbiA9PT0gXCJzdHJpbmdcIiA/IGxvY2F0aW9uIDogY3JlYXRlUGF0aChsb2NhdGlvbik7XG59XG5cbmZ1bmN0aW9uIHN0YXRpY0hhbmRsZXIobWV0aG9kTmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IGNhbm5vdCAlcyB3aXRoIDxTdGF0aWNSb3V0ZXI+XCIsIG1ldGhvZE5hbWUpIDogaW52YXJpYW50KGZhbHNlKSA7XG4gIH07XG59XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuLyoqXG4gKiBUaGUgcHVibGljIHRvcC1sZXZlbCBBUEkgZm9yIGEgXCJzdGF0aWNcIiA8Um91dGVyPiwgc28tY2FsbGVkIGJlY2F1c2UgaXRcbiAqIGNhbid0IGFjdHVhbGx5IGNoYW5nZSB0aGUgY3VycmVudCBsb2NhdGlvbi4gSW5zdGVhZCwgaXQganVzdCByZWNvcmRzXG4gKiBsb2NhdGlvbiBjaGFuZ2VzIGluIGEgY29udGV4dCBvYmplY3QuIFVzZWZ1bCBtYWlubHkgaW4gdGVzdGluZyBhbmRcbiAqIHNlcnZlci1yZW5kZXJpbmcgc2NlbmFyaW9zLlxuICovXG5cblxudmFyIFN0YXRpY1JvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShTdGF0aWNSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFN0YXRpY1JvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcblxuICAgIF90aGlzLmhhbmRsZVB1c2ggPSBmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgICAgIHJldHVybiBfdGhpcy5uYXZpZ2F0ZVRvKGxvY2F0aW9uLCBcIlBVU0hcIik7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZVJlcGxhY2UgPSBmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgICAgIHJldHVybiBfdGhpcy5uYXZpZ2F0ZVRvKGxvY2F0aW9uLCBcIlJFUExBQ0VcIik7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZUxpc3RlbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBub29wO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVCbG9jayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBub29wO1xuICAgIH07XG5cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gU3RhdGljUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ubmF2aWdhdGVUbyA9IGZ1bmN0aW9uIG5hdmlnYXRlVG8obG9jYXRpb24sIGFjdGlvbikge1xuICAgIHZhciBfdGhpcyRwcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIF90aGlzJHByb3BzJGJhc2VuYW1lID0gX3RoaXMkcHJvcHMuYmFzZW5hbWUsXG4gICAgICAgIGJhc2VuYW1lID0gX3RoaXMkcHJvcHMkYmFzZW5hbWUgPT09IHZvaWQgMCA/IFwiXCIgOiBfdGhpcyRwcm9wcyRiYXNlbmFtZSxcbiAgICAgICAgX3RoaXMkcHJvcHMkY29udGV4dCA9IF90aGlzJHByb3BzLmNvbnRleHQsXG4gICAgICAgIGNvbnRleHQgPSBfdGhpcyRwcm9wcyRjb250ZXh0ID09PSB2b2lkIDAgPyB7fSA6IF90aGlzJHByb3BzJGNvbnRleHQ7XG4gICAgY29udGV4dC5hY3Rpb24gPSBhY3Rpb247XG4gICAgY29udGV4dC5sb2NhdGlvbiA9IGFkZEJhc2VuYW1lKGJhc2VuYW1lLCBjcmVhdGVMb2NhdGlvbihsb2NhdGlvbikpO1xuICAgIGNvbnRleHQudXJsID0gY3JlYXRlVVJMKGNvbnRleHQubG9jYXRpb24pO1xuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzJHByb3BzMiA9IHRoaXMucHJvcHMsXG4gICAgICAgIF90aGlzJHByb3BzMiRiYXNlbmFtZSA9IF90aGlzJHByb3BzMi5iYXNlbmFtZSxcbiAgICAgICAgYmFzZW5hbWUgPSBfdGhpcyRwcm9wczIkYmFzZW5hbWUgPT09IHZvaWQgMCA/IFwiXCIgOiBfdGhpcyRwcm9wczIkYmFzZW5hbWUsXG4gICAgICAgIF90aGlzJHByb3BzMiRjb250ZXh0ID0gX3RoaXMkcHJvcHMyLmNvbnRleHQsXG4gICAgICAgIGNvbnRleHQgPSBfdGhpcyRwcm9wczIkY29udGV4dCA9PT0gdm9pZCAwID8ge30gOiBfdGhpcyRwcm9wczIkY29udGV4dCxcbiAgICAgICAgX3RoaXMkcHJvcHMyJGxvY2F0aW9uID0gX3RoaXMkcHJvcHMyLmxvY2F0aW9uLFxuICAgICAgICBsb2NhdGlvbiA9IF90aGlzJHByb3BzMiRsb2NhdGlvbiA9PT0gdm9pZCAwID8gXCIvXCIgOiBfdGhpcyRwcm9wczIkbG9jYXRpb24sXG4gICAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfdGhpcyRwcm9wczIsIFtcImJhc2VuYW1lXCIsIFwiY29udGV4dFwiLCBcImxvY2F0aW9uXCJdKTtcblxuICAgIHZhciBoaXN0b3J5ID0ge1xuICAgICAgY3JlYXRlSHJlZjogZnVuY3Rpb24gY3JlYXRlSHJlZihwYXRoKSB7XG4gICAgICAgIHJldHVybiBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUgKyBjcmVhdGVVUkwocGF0aCkpO1xuICAgICAgfSxcbiAgICAgIGFjdGlvbjogXCJQT1BcIixcbiAgICAgIGxvY2F0aW9uOiBzdHJpcEJhc2VuYW1lKGJhc2VuYW1lLCBjcmVhdGVMb2NhdGlvbihsb2NhdGlvbikpLFxuICAgICAgcHVzaDogdGhpcy5oYW5kbGVQdXNoLFxuICAgICAgcmVwbGFjZTogdGhpcy5oYW5kbGVSZXBsYWNlLFxuICAgICAgZ286IHN0YXRpY0hhbmRsZXIoXCJnb1wiKSxcbiAgICAgIGdvQmFjazogc3RhdGljSGFuZGxlcihcImdvQmFja1wiKSxcbiAgICAgIGdvRm9yd2FyZDogc3RhdGljSGFuZGxlcihcImdvRm9yd2FyZFwiKSxcbiAgICAgIGxpc3RlbjogdGhpcy5oYW5kbGVMaXN0ZW4sXG4gICAgICBibG9jazogdGhpcy5oYW5kbGVCbG9ja1xuICAgIH07XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCBfZXh0ZW5kcyh7fSwgcmVzdCwge1xuICAgICAgaGlzdG9yeTogaGlzdG9yeSxcbiAgICAgIHN0YXRpY0NvbnRleHQ6IGNvbnRleHRcbiAgICB9KSk7XG4gIH07XG5cbiAgcmV0dXJuIFN0YXRpY1JvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBTdGF0aWNSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNvbnRleHQ6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3RdKVxuICB9O1xuXG4gIFN0YXRpY1JvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxTdGF0aWNSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBTdGF0aWNSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcmVuZGVyaW5nIHRoZSBmaXJzdCA8Um91dGU+IHRoYXQgbWF0Y2hlcy5cbiAqL1xuXG52YXIgU3dpdGNoID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFN3aXRjaCwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gU3dpdGNoKCkge1xuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBTd2l0Y2gucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFN3aXRjaD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIHZhciBsb2NhdGlvbiA9IF90aGlzLnByb3BzLmxvY2F0aW9uIHx8IGNvbnRleHQubG9jYXRpb247XG4gICAgICB2YXIgZWxlbWVudCwgbWF0Y2g7IC8vIFdlIHVzZSBSZWFjdC5DaGlsZHJlbi5mb3JFYWNoIGluc3RlYWQgb2YgUmVhY3QuQ2hpbGRyZW4udG9BcnJheSgpLmZpbmQoKVxuICAgICAgLy8gaGVyZSBiZWNhdXNlIHRvQXJyYXkgYWRkcyBrZXlzIHRvIGFsbCBjaGlsZCBlbGVtZW50cyBhbmQgd2UgZG8gbm90IHdhbnRcbiAgICAgIC8vIHRvIHRyaWdnZXIgYW4gdW5tb3VudC9yZW1vdW50IGZvciB0d28gPFJvdXRlPnMgdGhhdCByZW5kZXIgdGhlIHNhbWVcbiAgICAgIC8vIGNvbXBvbmVudCBhdCBkaWZmZXJlbnQgVVJMcy5cblxuICAgICAgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaChfdGhpcy5wcm9wcy5jaGlsZHJlbiwgZnVuY3Rpb24gKGNoaWxkKSB7XG4gICAgICAgIGlmIChtYXRjaCA9PSBudWxsICYmIFJlYWN0LmlzVmFsaWRFbGVtZW50KGNoaWxkKSkge1xuICAgICAgICAgIGVsZW1lbnQgPSBjaGlsZDtcbiAgICAgICAgICB2YXIgcGF0aCA9IGNoaWxkLnByb3BzLnBhdGggfHwgY2hpbGQucHJvcHMuZnJvbTtcbiAgICAgICAgICBtYXRjaCA9IHBhdGggPyBtYXRjaFBhdGgobG9jYXRpb24ucGF0aG5hbWUsIF9leHRlbmRzKHt9LCBjaGlsZC5wcm9wcywge1xuICAgICAgICAgICAgcGF0aDogcGF0aFxuICAgICAgICAgIH0pKSA6IGNvbnRleHQubWF0Y2g7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIG1hdGNoID8gUmVhY3QuY2xvbmVFbGVtZW50KGVsZW1lbnQsIHtcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICBjb21wdXRlZE1hdGNoOiBtYXRjaFxuICAgICAgfSkgOiBudWxsO1xuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBTd2l0Y2g7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgU3dpdGNoLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3RcbiAgfTtcblxuICBTd2l0Y2gucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5sb2NhdGlvbiAmJiAhcHJldlByb3BzLmxvY2F0aW9uKSwgJzxTd2l0Y2g+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgaW5pdGlhbGx5IHVzZWQgbm8gXCJsb2NhdGlvblwiIHByb3AgYW5kIHRoZW4gcHJvdmlkZWQgb25lIG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKCF0aGlzLnByb3BzLmxvY2F0aW9uICYmIHByZXZQcm9wcy5sb2NhdGlvbiksICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIGNvbnRyb2xsZWQgdG8gdW5jb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IHByb3ZpZGVkIGEgXCJsb2NhdGlvblwiIHByb3AgaW5pdGlhbGx5IGJ1dCBvbWl0dGVkIGl0IG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogQSBwdWJsaWMgaGlnaGVyLW9yZGVyIGNvbXBvbmVudCB0byBhY2Nlc3MgdGhlIGltcGVyYXRpdmUgQVBJXG4gKi9cblxuZnVuY3Rpb24gd2l0aFJvdXRlcihDb21wb25lbnQpIHtcbiAgdmFyIGRpc3BsYXlOYW1lID0gXCJ3aXRoUm91dGVyKFwiICsgKENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBDb21wb25lbnQubmFtZSkgKyBcIilcIjtcblxuICB2YXIgQyA9IGZ1bmN0aW9uIEMocHJvcHMpIHtcbiAgICB2YXIgd3JhcHBlZENvbXBvbmVudFJlZiA9IHByb3BzLndyYXBwZWRDb21wb25lbnRSZWYsXG4gICAgICAgIHJlbWFpbmluZ1Byb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIFtcIndyYXBwZWRDb21wb25lbnRSZWZcIl0pO1xuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8XCIgKyBkaXNwbGF5TmFtZSArIFwiIC8+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDb21wb25lbnQsIF9leHRlbmRzKHt9LCByZW1haW5pbmdQcm9wcywgY29udGV4dCwge1xuICAgICAgICByZWY6IHdyYXBwZWRDb21wb25lbnRSZWZcbiAgICAgIH0pKTtcbiAgICB9KTtcbiAgfTtcblxuICBDLmRpc3BsYXlOYW1lID0gZGlzcGxheU5hbWU7XG4gIEMuV3JhcHBlZENvbXBvbmVudCA9IENvbXBvbmVudDtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgQy5wcm9wVHlwZXMgPSB7XG4gICAgICB3cmFwcGVkQ29tcG9uZW50UmVmOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm9iamVjdF0pXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBob2lzdFN0YXRpY3MoQywgQ29tcG9uZW50KTtcbn1cblxudmFyIHVzZUNvbnRleHQgPSBSZWFjdC51c2VDb250ZXh0O1xuZnVuY3Rpb24gdXNlSGlzdG9yeSgpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICEodHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZUhpc3RvcnkoKVwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIH1cblxuICByZXR1cm4gdXNlQ29udGV4dChjb250ZXh0KS5oaXN0b3J5O1xufVxuZnVuY3Rpb24gdXNlTG9jYXRpb24oKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAhKHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VMb2NhdGlvbigpXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgfVxuXG4gIHJldHVybiB1c2VDb250ZXh0KGNvbnRleHQpLmxvY2F0aW9uO1xufVxuZnVuY3Rpb24gdXNlUGFyYW1zKCkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgISh0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlUGFyYW1zKClcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB9XG5cbiAgdmFyIG1hdGNoID0gdXNlQ29udGV4dChjb250ZXh0KS5tYXRjaDtcbiAgcmV0dXJuIG1hdGNoID8gbWF0Y2gucGFyYW1zIDoge307XG59XG5mdW5jdGlvbiB1c2VSb3V0ZU1hdGNoKHBhdGgpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICEodHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZVJvdXRlTWF0Y2goKVwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIH1cblxuICByZXR1cm4gcGF0aCA/IG1hdGNoUGF0aCh1c2VMb2NhdGlvbigpLnBhdGhuYW1lLCBwYXRoKSA6IHVzZUNvbnRleHQoY29udGV4dCkubWF0Y2g7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgZ2xvYmFsID0gd2luZG93O1xuICAgIHZhciBrZXkgPSBcIl9fcmVhY3Rfcm91dGVyX2J1aWxkX19cIjtcbiAgICB2YXIgYnVpbGROYW1lcyA9IHtcbiAgICAgIGNqczogXCJDb21tb25KU1wiLFxuICAgICAgZXNtOiBcIkVTIG1vZHVsZXNcIixcbiAgICAgIHVtZDogXCJVTURcIlxuICAgIH07XG5cbiAgICBpZiAoZ2xvYmFsW2tleV0gJiYgZ2xvYmFsW2tleV0gIT09IFwiZXNtXCIpIHtcbiAgICAgIHZhciBpbml0aWFsQnVpbGROYW1lID0gYnVpbGROYW1lc1tnbG9iYWxba2V5XV07XG4gICAgICB2YXIgc2Vjb25kYXJ5QnVpbGROYW1lID0gYnVpbGROYW1lc1tcImVzbVwiXTsgLy8gVE9ETzogQWRkIGxpbmsgdG8gYXJ0aWNsZSB0aGF0IGV4cGxhaW5zIGluIGRldGFpbCBob3cgdG8gYXZvaWRcbiAgICAgIC8vIGxvYWRpbmcgMiBkaWZmZXJlbnQgYnVpbGRzLlxuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJZb3UgYXJlIGxvYWRpbmcgdGhlIFwiICsgc2Vjb25kYXJ5QnVpbGROYW1lICsgXCIgYnVpbGQgb2YgUmVhY3QgUm91dGVyIFwiICsgKFwib24gYSBwYWdlIHRoYXQgaXMgYWxyZWFkeSBydW5uaW5nIHRoZSBcIiArIGluaXRpYWxCdWlsZE5hbWUgKyBcIiBcIikgKyBcImJ1aWxkLCBzbyB0aGluZ3Mgd29uJ3Qgd29yayByaWdodC5cIik7XG4gICAgfVxuXG4gICAgZ2xvYmFsW2tleV0gPSBcImVzbVwiO1xuICB9XG59XG5cbmV4cG9ydCB7IE1lbW9yeVJvdXRlciwgUHJvbXB0LCBSZWRpcmVjdCwgUm91dGUsIFJvdXRlciwgU3RhdGljUm91dGVyLCBTd2l0Y2gsIGNvbnRleHQgYXMgX19Sb3V0ZXJDb250ZXh0LCBnZW5lcmF0ZVBhdGgsIG1hdGNoUGF0aCwgdXNlSGlzdG9yeSwgdXNlTG9jYXRpb24sIHVzZVBhcmFtcywgdXNlUm91dGVNYXRjaCwgd2l0aFJvdXRlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVhY3Qtcm91dGVyLmpzLm1hcFxuIiwiaW1wb3J0IHsgUm91dGVyLCBfX1JvdXRlckNvbnRleHQsIG1hdGNoUGF0aCB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5leHBvcnQgKiBmcm9tICdyZWFjdC1yb3V0ZXInO1xuaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNyZWF0ZUJyb3dzZXJIaXN0b3J5LCBjcmVhdGVIYXNoSGlzdG9yeSwgY3JlYXRlTG9jYXRpb24gfSBmcm9tICdoaXN0b3J5JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCB1c2VzIEhUTUw1IGhpc3RvcnkuXG4gKi9cblxudmFyIEJyb3dzZXJSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoQnJvd3NlclJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gQnJvd3NlclJvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlQnJvd3Nlckhpc3RvcnkoX3RoaXMucHJvcHMpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBCcm93c2VyUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwge1xuICAgICAgaGlzdG9yeTogdGhpcy5oaXN0b3J5LFxuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW5cbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gQnJvd3NlclJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBCcm93c2VyUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgZm9yY2VSZWZyZXNoOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBrZXlMZW5ndGg6IFByb3BUeXBlcy5udW1iZXJcbiAgfTtcblxuICBCcm93c2VyUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPEJyb3dzZXJSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBCcm93c2VyUm91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCB1c2VzIHdpbmRvdy5sb2NhdGlvbi5oYXNoLlxuICovXG5cbnZhciBIYXNoUm91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKEhhc2hSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIEhhc2hSb3V0ZXIoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XG4gICAgX3RoaXMuaGlzdG9yeSA9IGNyZWF0ZUhhc2hIaXN0b3J5KF90aGlzLnByb3BzKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gSGFzaFJvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICAgIGhpc3Rvcnk6IHRoaXMuaGlzdG9yeSxcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuXG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIEhhc2hSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgSGFzaFJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAgIGhhc2hUeXBlOiBQcm9wVHlwZXMub25lT2YoW1wiaGFzaGJhbmdcIiwgXCJub3NsYXNoXCIsIFwic2xhc2hcIl0pXG4gIH07XG5cbiAgSGFzaFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxIYXNoUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgSGFzaFJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG52YXIgcmVzb2x2ZVRvTG9jYXRpb24gPSBmdW5jdGlvbiByZXNvbHZlVG9Mb2NhdGlvbih0bywgY3VycmVudExvY2F0aW9uKSB7XG4gIHJldHVybiB0eXBlb2YgdG8gPT09IFwiZnVuY3Rpb25cIiA/IHRvKGN1cnJlbnRMb2NhdGlvbikgOiB0bztcbn07XG52YXIgbm9ybWFsaXplVG9Mb2NhdGlvbiA9IGZ1bmN0aW9uIG5vcm1hbGl6ZVRvTG9jYXRpb24odG8sIGN1cnJlbnRMb2NhdGlvbikge1xuICByZXR1cm4gdHlwZW9mIHRvID09PSBcInN0cmluZ1wiID8gY3JlYXRlTG9jYXRpb24odG8sIG51bGwsIG51bGwsIGN1cnJlbnRMb2NhdGlvbikgOiB0bztcbn07XG5cbnZhciBmb3J3YXJkUmVmU2hpbSA9IGZ1bmN0aW9uIGZvcndhcmRSZWZTaGltKEMpIHtcbiAgcmV0dXJuIEM7XG59O1xuXG52YXIgZm9yd2FyZFJlZiA9IFJlYWN0LmZvcndhcmRSZWY7XG5cbmlmICh0eXBlb2YgZm9yd2FyZFJlZiA9PT0gXCJ1bmRlZmluZWRcIikge1xuICBmb3J3YXJkUmVmID0gZm9yd2FyZFJlZlNoaW07XG59XG5cbmZ1bmN0aW9uIGlzTW9kaWZpZWRFdmVudChldmVudCkge1xuICByZXR1cm4gISEoZXZlbnQubWV0YUtleSB8fCBldmVudC5hbHRLZXkgfHwgZXZlbnQuY3RybEtleSB8fCBldmVudC5zaGlmdEtleSk7XG59XG5cbnZhciBMaW5rQW5jaG9yID0gZm9yd2FyZFJlZihmdW5jdGlvbiAoX3JlZiwgZm9yd2FyZGVkUmVmKSB7XG4gIHZhciBpbm5lclJlZiA9IF9yZWYuaW5uZXJSZWYsXG4gICAgICBuYXZpZ2F0ZSA9IF9yZWYubmF2aWdhdGUsXG4gICAgICBfb25DbGljayA9IF9yZWYub25DbGljayxcbiAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmLCBbXCJpbm5lclJlZlwiLCBcIm5hdmlnYXRlXCIsIFwib25DbGlja1wiXSk7XG5cbiAgdmFyIHRhcmdldCA9IHJlc3QudGFyZ2V0O1xuXG4gIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCByZXN0LCB7XG4gICAgb25DbGljazogZnVuY3Rpb24gb25DbGljayhldmVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgaWYgKF9vbkNsaWNrKSBfb25DbGljayhldmVudCk7XG4gICAgICB9IGNhdGNoIChleCkge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB0aHJvdyBleDtcbiAgICAgIH1cblxuICAgICAgaWYgKCFldmVudC5kZWZhdWx0UHJldmVudGVkICYmIC8vIG9uQ2xpY2sgcHJldmVudGVkIGRlZmF1bHRcbiAgICAgIGV2ZW50LmJ1dHRvbiA9PT0gMCAmJiAoIC8vIGlnbm9yZSBldmVyeXRoaW5nIGJ1dCBsZWZ0IGNsaWNrc1xuICAgICAgIXRhcmdldCB8fCB0YXJnZXQgPT09IFwiX3NlbGZcIikgJiYgLy8gbGV0IGJyb3dzZXIgaGFuZGxlIFwidGFyZ2V0PV9ibGFua1wiIGV0Yy5cbiAgICAgICFpc01vZGlmaWVkRXZlbnQoZXZlbnQpIC8vIGlnbm9yZSBjbGlja3Mgd2l0aCBtb2RpZmllciBrZXlzXG4gICAgICApIHtcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIG5hdmlnYXRlKCk7XG4gICAgICAgIH1cbiAgICB9XG4gIH0pOyAvLyBSZWFjdCAxNSBjb21wYXRcblxuXG4gIGlmIChmb3J3YXJkUmVmU2hpbSAhPT0gZm9yd2FyZFJlZikge1xuICAgIHByb3BzLnJlZiA9IGZvcndhcmRlZFJlZiB8fCBpbm5lclJlZjtcbiAgfSBlbHNlIHtcbiAgICBwcm9wcy5yZWYgPSBpbm5lclJlZjtcbiAgfVxuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYVwiLCBwcm9wcyk7XG59KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBMaW5rQW5jaG9yLmRpc3BsYXlOYW1lID0gXCJMaW5rQW5jaG9yXCI7XG59XG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgYSBoaXN0b3J5LWF3YXJlIDxhPi5cbiAqL1xuXG5cbnZhciBMaW5rID0gZm9yd2FyZFJlZihmdW5jdGlvbiAoX3JlZjIsIGZvcndhcmRlZFJlZikge1xuICB2YXIgX3JlZjIkY29tcG9uZW50ID0gX3JlZjIuY29tcG9uZW50LFxuICAgICAgY29tcG9uZW50ID0gX3JlZjIkY29tcG9uZW50ID09PSB2b2lkIDAgPyBMaW5rQW5jaG9yIDogX3JlZjIkY29tcG9uZW50LFxuICAgICAgcmVwbGFjZSA9IF9yZWYyLnJlcGxhY2UsXG4gICAgICB0byA9IF9yZWYyLnRvLFxuICAgICAgaW5uZXJSZWYgPSBfcmVmMi5pbm5lclJlZixcbiAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmMiwgW1wiY29tcG9uZW50XCIsIFwicmVwbGFjZVwiLCBcInRvXCIsIFwiaW5uZXJSZWZcIl0pO1xuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KF9fUm91dGVyQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPExpbms+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgdmFyIGhpc3RvcnkgPSBjb250ZXh0Lmhpc3Rvcnk7XG4gICAgdmFyIGxvY2F0aW9uID0gbm9ybWFsaXplVG9Mb2NhdGlvbihyZXNvbHZlVG9Mb2NhdGlvbih0bywgY29udGV4dC5sb2NhdGlvbiksIGNvbnRleHQubG9jYXRpb24pO1xuICAgIHZhciBocmVmID0gbG9jYXRpb24gPyBoaXN0b3J5LmNyZWF0ZUhyZWYobG9jYXRpb24pIDogXCJcIjtcblxuICAgIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCByZXN0LCB7XG4gICAgICBocmVmOiBocmVmLFxuICAgICAgbmF2aWdhdGU6IGZ1bmN0aW9uIG5hdmlnYXRlKCkge1xuICAgICAgICB2YXIgbG9jYXRpb24gPSByZXNvbHZlVG9Mb2NhdGlvbih0bywgY29udGV4dC5sb2NhdGlvbik7XG4gICAgICAgIHZhciBtZXRob2QgPSByZXBsYWNlID8gaGlzdG9yeS5yZXBsYWNlIDogaGlzdG9yeS5wdXNoO1xuICAgICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgfVxuICAgIH0pOyAvLyBSZWFjdCAxNSBjb21wYXRcblxuXG4gICAgaWYgKGZvcndhcmRSZWZTaGltICE9PSBmb3J3YXJkUmVmKSB7XG4gICAgICBwcm9wcy5yZWYgPSBmb3J3YXJkZWRSZWYgfHwgaW5uZXJSZWY7XG4gICAgfSBlbHNlIHtcbiAgICAgIHByb3BzLmlubmVyUmVmID0gaW5uZXJSZWY7XG4gICAgfVxuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcyk7XG4gIH0pO1xufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgdmFyIHRvVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5mdW5jXSk7XG4gIHZhciByZWZUeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5zaGFwZSh7XG4gICAgY3VycmVudDogUHJvcFR5cGVzLmFueVxuICB9KV0pO1xuICBMaW5rLmRpc3BsYXlOYW1lID0gXCJMaW5rXCI7XG4gIExpbmsucHJvcFR5cGVzID0ge1xuICAgIGlubmVyUmVmOiByZWZUeXBlLFxuICAgIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuICAgIHJlcGxhY2U6IFByb3BUeXBlcy5ib29sLFxuICAgIHRhcmdldDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0bzogdG9UeXBlLmlzUmVxdWlyZWRcbiAgfTtcbn1cblxudmFyIGZvcndhcmRSZWZTaGltJDEgPSBmdW5jdGlvbiBmb3J3YXJkUmVmU2hpbShDKSB7XG4gIHJldHVybiBDO1xufTtcblxudmFyIGZvcndhcmRSZWYkMSA9IFJlYWN0LmZvcndhcmRSZWY7XG5cbmlmICh0eXBlb2YgZm9yd2FyZFJlZiQxID09PSBcInVuZGVmaW5lZFwiKSB7XG4gIGZvcndhcmRSZWYkMSA9IGZvcndhcmRSZWZTaGltJDE7XG59XG5cbmZ1bmN0aW9uIGpvaW5DbGFzc25hbWVzKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgY2xhc3NuYW1lcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBjbGFzc25hbWVzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgcmV0dXJuIGNsYXNzbmFtZXMuZmlsdGVyKGZ1bmN0aW9uIChpKSB7XG4gICAgcmV0dXJuIGk7XG4gIH0pLmpvaW4oXCIgXCIpO1xufVxuLyoqXG4gKiBBIDxMaW5rPiB3cmFwcGVyIHRoYXQga25vd3MgaWYgaXQncyBcImFjdGl2ZVwiIG9yIG5vdC5cbiAqL1xuXG5cbnZhciBOYXZMaW5rID0gZm9yd2FyZFJlZiQxKGZ1bmN0aW9uIChfcmVmLCBmb3J3YXJkZWRSZWYpIHtcbiAgdmFyIF9yZWYkYXJpYUN1cnJlbnQgPSBfcmVmW1wiYXJpYS1jdXJyZW50XCJdLFxuICAgICAgYXJpYUN1cnJlbnQgPSBfcmVmJGFyaWFDdXJyZW50ID09PSB2b2lkIDAgPyBcInBhZ2VcIiA6IF9yZWYkYXJpYUN1cnJlbnQsXG4gICAgICBfcmVmJGFjdGl2ZUNsYXNzTmFtZSA9IF9yZWYuYWN0aXZlQ2xhc3NOYW1lLFxuICAgICAgYWN0aXZlQ2xhc3NOYW1lID0gX3JlZiRhY3RpdmVDbGFzc05hbWUgPT09IHZvaWQgMCA/IFwiYWN0aXZlXCIgOiBfcmVmJGFjdGl2ZUNsYXNzTmFtZSxcbiAgICAgIGFjdGl2ZVN0eWxlID0gX3JlZi5hY3RpdmVTdHlsZSxcbiAgICAgIGNsYXNzTmFtZVByb3AgPSBfcmVmLmNsYXNzTmFtZSxcbiAgICAgIGV4YWN0ID0gX3JlZi5leGFjdCxcbiAgICAgIGlzQWN0aXZlUHJvcCA9IF9yZWYuaXNBY3RpdmUsXG4gICAgICBsb2NhdGlvblByb3AgPSBfcmVmLmxvY2F0aW9uLFxuICAgICAgc3RyaWN0ID0gX3JlZi5zdHJpY3QsXG4gICAgICBzdHlsZVByb3AgPSBfcmVmLnN0eWxlLFxuICAgICAgdG8gPSBfcmVmLnRvLFxuICAgICAgaW5uZXJSZWYgPSBfcmVmLmlubmVyUmVmLFxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsIFtcImFyaWEtY3VycmVudFwiLCBcImFjdGl2ZUNsYXNzTmFtZVwiLCBcImFjdGl2ZVN0eWxlXCIsIFwiY2xhc3NOYW1lXCIsIFwiZXhhY3RcIiwgXCJpc0FjdGl2ZVwiLCBcImxvY2F0aW9uXCIsIFwic3RyaWN0XCIsIFwic3R5bGVcIiwgXCJ0b1wiLCBcImlubmVyUmVmXCJdKTtcblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChfX1JvdXRlckNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxOYXZMaW5rPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIHZhciBjdXJyZW50TG9jYXRpb24gPSBsb2NhdGlvblByb3AgfHwgY29udGV4dC5sb2NhdGlvbjtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IG5vcm1hbGl6ZVRvTG9jYXRpb24ocmVzb2x2ZVRvTG9jYXRpb24odG8sIGN1cnJlbnRMb2NhdGlvbiksIGN1cnJlbnRMb2NhdGlvbik7XG4gICAgdmFyIHBhdGggPSB0b0xvY2F0aW9uLnBhdGhuYW1lOyAvLyBSZWdleCB0YWtlbiBmcm9tOiBodHRwczovL2dpdGh1Yi5jb20vcGlsbGFyanMvcGF0aC10by1yZWdleHAvYmxvYi9tYXN0ZXIvaW5kZXguanMjTDIwMlxuXG4gICAgdmFyIGVzY2FwZWRQYXRoID0gcGF0aCAmJiBwYXRoLnJlcGxhY2UoLyhbLisqPz1eIToke30oKVtcXF18L1xcXFxdKS9nLCBcIlxcXFwkMVwiKTtcbiAgICB2YXIgbWF0Y2ggPSBlc2NhcGVkUGF0aCA/IG1hdGNoUGF0aChjdXJyZW50TG9jYXRpb24ucGF0aG5hbWUsIHtcbiAgICAgIHBhdGg6IGVzY2FwZWRQYXRoLFxuICAgICAgZXhhY3Q6IGV4YWN0LFxuICAgICAgc3RyaWN0OiBzdHJpY3RcbiAgICB9KSA6IG51bGw7XG4gICAgdmFyIGlzQWN0aXZlID0gISEoaXNBY3RpdmVQcm9wID8gaXNBY3RpdmVQcm9wKG1hdGNoLCBjdXJyZW50TG9jYXRpb24pIDogbWF0Y2gpO1xuICAgIHZhciBjbGFzc05hbWUgPSBpc0FjdGl2ZSA/IGpvaW5DbGFzc25hbWVzKGNsYXNzTmFtZVByb3AsIGFjdGl2ZUNsYXNzTmFtZSkgOiBjbGFzc05hbWVQcm9wO1xuICAgIHZhciBzdHlsZSA9IGlzQWN0aXZlID8gX2V4dGVuZHMoe30sIHN0eWxlUHJvcCwge30sIGFjdGl2ZVN0eWxlKSA6IHN0eWxlUHJvcDtcblxuICAgIHZhciBwcm9wcyA9IF9leHRlbmRzKHtcbiAgICAgIFwiYXJpYS1jdXJyZW50XCI6IGlzQWN0aXZlICYmIGFyaWFDdXJyZW50IHx8IG51bGwsXG4gICAgICBjbGFzc05hbWU6IGNsYXNzTmFtZSxcbiAgICAgIHN0eWxlOiBzdHlsZSxcbiAgICAgIHRvOiB0b0xvY2F0aW9uXG4gICAgfSwgcmVzdCk7IC8vIFJlYWN0IDE1IGNvbXBhdFxuXG5cbiAgICBpZiAoZm9yd2FyZFJlZlNoaW0kMSAhPT0gZm9yd2FyZFJlZiQxKSB7XG4gICAgICBwcm9wcy5yZWYgPSBmb3J3YXJkZWRSZWYgfHwgaW5uZXJSZWY7XG4gICAgfSBlbHNlIHtcbiAgICAgIHByb3BzLmlubmVyUmVmID0gaW5uZXJSZWY7XG4gICAgfVxuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGluaywgcHJvcHMpO1xuICB9KTtcbn0pO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIE5hdkxpbmsuZGlzcGxheU5hbWUgPSBcIk5hdkxpbmtcIjtcbiAgdmFyIGFyaWFDdXJyZW50VHlwZSA9IFByb3BUeXBlcy5vbmVPZihbXCJwYWdlXCIsIFwic3RlcFwiLCBcImxvY2F0aW9uXCIsIFwiZGF0ZVwiLCBcInRpbWVcIiwgXCJ0cnVlXCJdKTtcbiAgTmF2TGluay5wcm9wVHlwZXMgPSBfZXh0ZW5kcyh7fSwgTGluay5wcm9wVHlwZXMsIHtcbiAgICBcImFyaWEtY3VycmVudFwiOiBhcmlhQ3VycmVudFR5cGUsXG4gICAgYWN0aXZlQ2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGFjdGl2ZVN0eWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBleGFjdDogUHJvcFR5cGVzLmJvb2wsXG4gICAgaXNBY3RpdmU6IFByb3BUeXBlcy5mdW5jLFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIHN0cmljdDogUHJvcFR5cGVzLmJvb2wsXG4gICAgc3R5bGU6IFByb3BUeXBlcy5vYmplY3RcbiAgfSk7XG59XG5cbmV4cG9ydCB7IEJyb3dzZXJSb3V0ZXIsIEhhc2hSb3V0ZXIsIExpbmssIE5hdkxpbmsgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlYWN0LXJvdXRlci1kb20uanMubWFwXG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuXG5jbGFzcyBIZWFkbGluZUNvbXBvbmVudCBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGgxPlxuICAgICAgICAgICAgICAgIHlvXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiYmFkZ2UgYmFkZ2UtaW5mb1wiPlxuICAgICAgICAgICAgICAgICAgICB7dGhpcy5wcm9wcy5uYW1lfVxuICAgICAgICAgICAgICAgIDwvc3Bhbj4hXG4gICAgICAgICAgICA8L2gxPlxuICAgICAgICApO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgSGVhZGxpbmVDb21wb25lbnQ7XG4iLCIvLyBVbmlxdWUgSUQgY3JlYXRpb24gcmVxdWlyZXMgYSBoaWdoIHF1YWxpdHkgcmFuZG9tICMgZ2VuZXJhdG9yLiBJbiB0aGUgYnJvd3NlciB3ZSB0aGVyZWZvcmVcbi8vIHJlcXVpcmUgdGhlIGNyeXB0byBBUEkgYW5kIGRvIG5vdCBzdXBwb3J0IGJ1aWx0LWluIGZhbGxiYWNrIHRvIGxvd2VyIHF1YWxpdHkgcmFuZG9tIG51bWJlclxuLy8gZ2VuZXJhdG9ycyAobGlrZSBNYXRoLnJhbmRvbSgpKS5cbi8vIGdldFJhbmRvbVZhbHVlcyBuZWVkcyB0byBiZSBpbnZva2VkIGluIGEgY29udGV4dCB3aGVyZSBcInRoaXNcIiBpcyBhIENyeXB0byBpbXBsZW1lbnRhdGlvbi4gQWxzbyxcbi8vIGZpbmQgdGhlIGNvbXBsZXRlIGltcGxlbWVudGF0aW9uIG9mIGNyeXB0byAobXNDcnlwdG8pIG9uIElFMTEuXG52YXIgZ2V0UmFuZG9tVmFsdWVzID0gdHlwZW9mIGNyeXB0byAhPSAndW5kZWZpbmVkJyAmJiBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzICYmIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMuYmluZChjcnlwdG8pIHx8IHR5cGVvZiBtc0NyeXB0byAhPSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgbXNDcnlwdG8uZ2V0UmFuZG9tVmFsdWVzID09ICdmdW5jdGlvbicgJiYgbXNDcnlwdG8uZ2V0UmFuZG9tVmFsdWVzLmJpbmQobXNDcnlwdG8pO1xudmFyIHJuZHM4ID0gbmV3IFVpbnQ4QXJyYXkoMTYpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJuZygpIHtcbiAgaWYgKCFnZXRSYW5kb21WYWx1ZXMpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2NyeXB0by5nZXRSYW5kb21WYWx1ZXMoKSBub3Qgc3VwcG9ydGVkLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkI2dldHJhbmRvbXZhbHVlcy1ub3Qtc3VwcG9ydGVkJyk7XG4gIH1cblxuICByZXR1cm4gZ2V0UmFuZG9tVmFsdWVzKHJuZHM4KTtcbn0iLCIvKipcbiAqIENvbnZlcnQgYXJyYXkgb2YgMTYgYnl0ZSB2YWx1ZXMgdG8gVVVJRCBzdHJpbmcgZm9ybWF0IG9mIHRoZSBmb3JtOlxuICogWFhYWFhYWFgtWFhYWC1YWFhYLVhYWFgtWFhYWFhYWFhYWFhYXG4gKi9cbnZhciBieXRlVG9IZXggPSBbXTtcblxuZm9yICh2YXIgaSA9IDA7IGkgPCAyNTY7ICsraSkge1xuICBieXRlVG9IZXhbaV0gPSAoaSArIDB4MTAwKS50b1N0cmluZygxNikuc3Vic3RyKDEpO1xufVxuXG5mdW5jdGlvbiBieXRlc1RvVXVpZChidWYsIG9mZnNldCkge1xuICB2YXIgaSA9IG9mZnNldCB8fCAwO1xuICB2YXIgYnRoID0gYnl0ZVRvSGV4OyAvLyBqb2luIHVzZWQgdG8gZml4IG1lbW9yeSBpc3N1ZSBjYXVzZWQgYnkgY29uY2F0ZW5hdGlvbjogaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzE3NSNjNFxuXG4gIHJldHVybiBbYnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSwgJy0nLCBidGhbYnVmW2krK11dLCBidGhbYnVmW2krK11dLCAnLScsIGJ0aFtidWZbaSsrXV0sIGJ0aFtidWZbaSsrXV0sICctJywgYnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSwgJy0nLCBidGhbYnVmW2krK11dLCBidGhbYnVmW2krK11dLCBidGhbYnVmW2krK11dLCBidGhbYnVmW2krK11dLCBidGhbYnVmW2krK11dLCBidGhbYnVmW2krK11dXS5qb2luKCcnKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgYnl0ZXNUb1V1aWQ7IiwiaW1wb3J0IHJuZyBmcm9tICcuL3JuZy5qcyc7XG5pbXBvcnQgYnl0ZXNUb1V1aWQgZnJvbSAnLi9ieXRlc1RvVXVpZC5qcyc7XG5cbmZ1bmN0aW9uIHY0KG9wdGlvbnMsIGJ1Ziwgb2Zmc2V0KSB7XG4gIHZhciBpID0gYnVmICYmIG9mZnNldCB8fCAwO1xuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PSAnc3RyaW5nJykge1xuICAgIGJ1ZiA9IG9wdGlvbnMgPT09ICdiaW5hcnknID8gbmV3IEFycmF5KDE2KSA6IG51bGw7XG4gICAgb3B0aW9ucyA9IG51bGw7XG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgdmFyIHJuZHMgPSBvcHRpb25zLnJhbmRvbSB8fCAob3B0aW9ucy5ybmcgfHwgcm5nKSgpOyAvLyBQZXIgNC40LCBzZXQgYml0cyBmb3IgdmVyc2lvbiBhbmQgYGNsb2NrX3NlcV9oaV9hbmRfcmVzZXJ2ZWRgXG5cbiAgcm5kc1s2XSA9IHJuZHNbNl0gJiAweDBmIHwgMHg0MDtcbiAgcm5kc1s4XSA9IHJuZHNbOF0gJiAweDNmIHwgMHg4MDsgLy8gQ29weSBieXRlcyB0byBidWZmZXIsIGlmIHByb3ZpZGVkXG5cbiAgaWYgKGJ1Zikge1xuICAgIGZvciAodmFyIGlpID0gMDsgaWkgPCAxNjsgKytpaSkge1xuICAgICAgYnVmW2kgKyBpaV0gPSBybmRzW2lpXTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYnVmIHx8IGJ5dGVzVG9VdWlkKHJuZHMpO1xufVxuXG5leHBvcnQgZGVmYXVsdCB2NDsiLCJpbXBvcnQgeyB2NCB9IGZyb20gJ3V1aWQnO1xuXG5pbXBvcnQgeyBTVE9SQUdFX1VTRVJfSUQgfSBmcm9tICcuLi9jb25maWdzL3N0b3JhZ2UnO1xuXG4vLyBpbXBvcnQgSHR0cFVzZXJzU3RvcmFnZVNlcnZpY2UgZnJvbSAnLi4vc2VydmljZXMvaHR0cC11c2Vycy1zdG9yYWdlLnNlcnZpY2UnO1xuaW1wb3J0IExvY2FsU3RvcmFnZVNlcnZpY2UgZnJvbSAnLi4vc2VydmljZXMvbG9jYWwtc3RvcmFnZS5zZXJ2aWNlJztcblxuY2xhc3MgVXNlcklkSGVscGVyIHtcblxuICAgIGNvbnN0cnVjdG9yKHN0b3JhZ2UpIHtcbiAgICAgICAgdGhpcy5zdG9yYWdlID0gc3RvcmFnZTtcbiAgICB9XG5cbiAgICBhc3luYyBnZXRVc2VySWQoKSB7XG4gICAgICAgIGNvbnN0IHJlc3RvcmVkVXNlcklkID0gYXdhaXQgdGhpcy5zdG9yYWdlLnJlYWQoU1RPUkFHRV9VU0VSX0lEKTtcblxuICAgICAgICBpZiAocmVzdG9yZWRVc2VySWQpIHtcbiAgICAgICAgICAgIHJldHVybiByZXN0b3JlZFVzZXJJZDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIGFzeW5jIGNyZWF0ZVVzZXJJZCgpIHtcbiAgICAgICAgY29uc3QgdXNlcklkID0gYXdhaXQgdGhpcy5fZ2VuZXJhdGVVc2VySWQoKTtcbiAgICAgICAgYXdhaXQgdGhpcy5zdG9yYWdlLmNyZWF0ZShTVE9SQUdFX1VTRVJfSUQsIHVzZXJJZCk7XG4gICAgICAgIHJldHVybiB1c2VySWQ7XG4gICAgfVxuXG4gICAgYXN5bmMgX2dlbmVyYXRlVXNlcklkKCkge1xuICAgICAgICByZXR1cm4gdjQoKTtcbiAgICB9XG5cbiAgICBhc3luYyBpc1VzZXJJZENyZWF0ZWQoKSB7XG4gICAgICAgIGNvbnN0IHVzZXJJZCA9IGF3YWl0IHRoaXMuc3RvcmFnZS5yZWFkKFNUT1JBR0VfVVNFUl9JRCk7XG4gICAgICAgIHJldHVybiAodXNlcklkICE9PSBudWxsKTtcbiAgICB9XG5cbiAgICBhc3luYyBjbGVhclN0b3JlZFVzZXJJZCgpIHtcbiAgICAgICAgYXdhaXQgdGhpcy5zdG9yYWdlLnJlbW92ZShTVE9SQUdFX1VTRVJfSUQpO1xuICAgIH1cbn1cblxuLy8gZXhwb3J0IGRlZmF1bHQgbmV3IFVzZXJJZEhlbHBlcihIdHRwVXNlcnNTdG9yYWdlU2VydmljZSk7XG5leHBvcnQgZGVmYXVsdCBuZXcgVXNlcklkSGVscGVyKExvY2FsU3RvcmFnZVNlcnZpY2UpO1xuIiwiZXhwb3J0IGNvbnN0IFNUT1JBR0VfVVNFUl9JRCA9ICd1c2VyLWlkJztcbiIsImV4cG9ydCBkZWZhdWx0IHtcblxuICAgIGFzeW5jIGNyZWF0ZShrZXksIHZhbHVlKSB7XG4gICAgICAgIHJldHVybiBhd2FpdCBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShrZXksIEpTT04uc3RyaW5naWZ5KHZhbHVlKSk7XG4gICAgfSxcblxuICAgIGFzeW5jIHVwZGF0ZShrZXksIHZhbHVlKSB7XG4gICAgICAgIHJldHVybiBhd2FpdCBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShrZXksIEpTT04uc3RyaW5naWZ5KHZhbHVlKSk7XG4gICAgfSxcblxuICAgIGFzeW5jIHJlYWQoa2V5KSB7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UoZGF0YSk7XG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgYXN5bmMgcmVtb3ZlKGtleSkge1xuICAgICAgICByZXR1cm4gYXdhaXQgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oa2V5KTtcbiAgICB9XG5cbn07XG4iLCJleHBvcnQgZGVmYXVsdCB7XG5cbiAgICBhc3luYyBjcmVhdGUodXJsLCBib2R5KSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCB7XG4gICAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShib2R5KVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbiAgICB9LFxuXG4gICAgYXN5bmMgdXBkYXRlKHVybCwgYm9keSkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCwge1xuICAgICAgICAgICAgbWV0aG9kOiAnUFVUJyxcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShib2R5KVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbiAgICB9LFxuXG4gICAgYXN5bmMgcmVhZCh1cmwsIGtleSkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke3VybH0vJHtrZXl9YCwge1xuICAgICAgICAgICAgbWV0aG9kOiAnR0VUJ1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbiAgICB9LFxuXG4gICAgYXN5bmMgcmVtb3ZlKHVybCwga2V5KSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7dXJsfS8ke2tleX1gLCB7XG4gICAgICAgICAgICBtZXRob2Q6ICdERUxFVEUnXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xuICAgIH1cblxufTtcbiIsIi8vIGV4cG9ydCBjb25zdCBTRVJWRVJfVVNFUlNfVVJMID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC91c2Vycyc7XG5leHBvcnQgY29uc3QgU0VSVkVSX1VTRVJTX1VSTCA9ICdodHRwczovL2Zha2VzLmhlcm9rdWFwcC5jb20vdXNlcnMnO1xuIiwiaW1wb3J0IEh0dHBTZXJ2aWNlIGZyb20gXCIuL2h0dHAuc2VydmljZVwiO1xuXG5pbXBvcnQgeyBTRVJWRVJfVVNFUlNfVVJMIH0gZnJvbSAnLi4vY29uZmlncy91cmxzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuXG4gICAgY3JlYXRlKHVzZXJJZCwgYW5zd2Vycykge1xuICAgICAgICBjb25zdCBib2R5ID0gT2JqZWN0LmFzc2lnbih7IGlkOiB1c2VySWQgfSwgYW5zd2Vycyk7XG4gICAgICAgIHJldHVybiBIdHRwU2VydmljZS5jcmVhdGUoU0VSVkVSX1VTRVJTX1VSTCwgYm9keSk7XG4gICAgfSxcblxuICAgIHVwZGF0ZSh1c2VySWQsIGFuc3dlcnMpIHtcbiAgICAgICAgcmV0dXJuIEh0dHBTZXJ2aWNlLnVwZGF0ZShgJHtTRVJWRVJfVVNFUlNfVVJMfS8ke3VzZXJJZH1gLCBhbnN3ZXJzKTtcbiAgICB9LFxuXG4gICAgcmVhZCh1c2VySWQpIHtcbiAgICAgICAgcmV0dXJuIEh0dHBTZXJ2aWNlLnJlYWQoU0VSVkVSX1VTRVJTX1VSTCwgdXNlcklkKTtcbiAgICB9LFxuXG4gICAgcmVtb3ZlKHVzZXJJZCkge1xuICAgICAgICByZXR1cm4gSHR0cFNlcnZpY2UucmVtb3ZlKFNFUlZFUl9VU0VSU19VUkwsIHVzZXJJZCk7XG4gICAgfVxuXG59O1xuIiwiaW1wb3J0IEh0dHBVc2Vyc1N0b3JhZ2VTZXJ2aWNlIGZyb20gJy4uL3NlcnZpY2VzL2h0dHAtdXNlcnMtc3RvcmFnZS5zZXJ2aWNlJztcblxuY2xhc3MgVXNlckhlbHBlciB7XG5cbiAgICBjb25zdHJ1Y3RvcihzdG9yYWdlKSB7XG4gICAgICAgIHRoaXMuc3RvcmFnZSA9IHN0b3JhZ2U7XG4gICAgfVxuXG4gICAgYXN5bmMgY3JlYXRlVXNlcih1c2VySWQpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ1VzZXJIZWxwZXIjc2F2ZUFuc3dlcnMnKTtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuc3RvcmFnZS5jcmVhdGUodXNlcklkKTtcbiAgICB9XG5cbiAgICBhc3luYyByZW1vdmVVc2VyKHVzZXJJZCkge1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5zdG9yYWdlLnJlbW92ZSh1c2VySWQpO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgbmV3IFVzZXJIZWxwZXIoSHR0cFVzZXJzU3RvcmFnZVNlcnZpY2UpO1xuLy8gZXhwb3J0IGRlZmF1bHQgbmV3IEFuc3dlcnNIZWxwZXIoTG9jYWxTdG9yYWdlU2VydmljZSk7XG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgd2l0aFJvdXRlciB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuXG5pbXBvcnQgSGVhZGxpbmUgZnJvbSAnLi9oZWFkbGluZSc7XG5cbmltcG9ydCBVc2VySWRIZWxwZXIgZnJvbSAnLi4vaGVscGVycy91c2VyLWlkLmhlbHBlcic7XG5pbXBvcnQgVXNlckhlbHBlciBmcm9tICcuLi9oZWxwZXJzL3VzZXIuaGVscGVyJztcblxuY2xhc3MgSW50cm9Db21wb25lbnQgZXh0ZW5kcyBDb21wb25lbnQge1xuXG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgdXNlck5hbWU6ICd0aGVyZScsXG4gICAgICAgICAgICBpc1VzZXJDcmVhdGVkOiBmYWxzZVxuICAgICAgICB9O1xuICAgIH1cblxuICAgIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgICB0aGlzLnVwZGF0ZVVzZXJTdGF0ZSgpO1xuICAgIH1cblxuICAgIGFzeW5jIHVwZGF0ZVVzZXJTdGF0ZSgpIHtcbiAgICAgICAgY29uc3QgaXNVc2VyQ3JlYXRlZCA9IGF3YWl0IFVzZXJJZEhlbHBlci5pc1VzZXJJZENyZWF0ZWQoKTtcbiAgICAgICAgY29uc3QgdXNlck5hbWUgPSBhd2FpdCBVc2VySWRIZWxwZXIuZ2V0VXNlcklkKCkgfHwgJ3RoZXJlJztcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSgoc3RhdGUpID0+IHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgICAgICAgaXNVc2VyQ3JlYXRlZCxcbiAgICAgICAgICAgICAgICB1c2VyTmFtZVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBhc3luYyBjcmVhdGVVc2VyKCkge1xuICAgICAgICBjb25zdCB1c2VySWQgPSBhd2FpdCBVc2VySWRIZWxwZXIuY3JlYXRlVXNlcklkKCk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdJbnRyb0NvbXBvbmVudCNjcmVhdGVVc2VyJywgdXNlcklkKTtcbiAgICAgICAgYXdhaXQgVXNlckhlbHBlci5jcmVhdGVVc2VyKHVzZXJJZCk7XG4gICAgICAgIGF3YWl0IHRoaXMudXBkYXRlVXNlclN0YXRlKCk7XG4gICAgfVxuXG4gICAgYXN5bmMgcmVkaXJlY3RUb0Zvcm0oKSB7XG4gICAgICAgIGNvbnN0IHVzZXJJZCA9IGF3YWl0IFVzZXJJZEhlbHBlci5nZXRVc2VySWQoKTtcblxuICAgICAgICAvLyBPbGRzY2hvb2wgd2F5XG4gICAgICAgIC8vIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gYC91c2VyLyR7dXNlcklkfWA7XG5cbiAgICAgICAgLy8gUmVhY3Qgd2F5XG4gICAgICAgIGNvbnN0IHsgaGlzdG9yeSB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgaGlzdG9yeS5wdXNoKGAvdXNlci8ke3VzZXJJZH1gKTtcbiAgICB9XG5cbiAgICBhc3luYyByZW1vdmVVc2VyKCkge1xuICAgICAgICBjb25zdCB1c2VySWQgPSBhd2FpdCBVc2VySWRIZWxwZXIuZ2V0VXNlcklkKCk7XG4gICAgICAgIGF3YWl0IFVzZXJJZEhlbHBlci5jbGVhclN0b3JlZFVzZXJJZCgpO1xuICAgICAgICBhd2FpdCB0aGlzLnVwZGF0ZVVzZXJTdGF0ZSgpO1xuICAgICAgICBhd2FpdCBVc2VySGVscGVyLnJlbW92ZVVzZXIodXNlcklkKTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwianVtYm90cm9uXCI+XG4gICAgICAgICAgICAgICAgICAgIDxIZWFkbGluZSBuYW1lPXt0aGlzLnN0YXRlLnVzZXJOYW1lfS8+XG5cbiAgICAgICAgICAgICAgICAgICAgeyF0aGlzLnN0YXRlLmlzVXNlckNyZWF0ZWQgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJidG4gYnRuLXN1Y2Nlc3NcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB0aGlzLmNyZWF0ZVVzZXIoKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFN0d8OzcnogdcW8eXRrb3duaWthXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLnN0YXRlLmlzVXNlckNyZWF0ZWQgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwibGVhZFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBaZGVmaW5pdWogc3dvamUgdW1pZWrEmXRub8WbY2lcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJ0biBidG4tc3VjY2Vzc1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHRoaXMucmVkaXJlY3RUb0Zvcm0oKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFdwaXN6IHN3b2plIHVtaWVqxJl0bm/Fm2NpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJ0biBidG4tZGFuZ2VyIG1sLTNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB0aGlzLnJlbW92ZVVzZXIoKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFVzdcWEIHphcGlzYW5lIHdhcnRvxZtjaVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgd2l0aFJvdXRlcihJbnRyb0NvbXBvbmVudCk7XG4iLCJpbXBvcnQgSHR0cFVzZXJzU3RvcmFnZVNlcnZpY2UgZnJvbSAnLi4vc2VydmljZXMvaHR0cC11c2Vycy1zdG9yYWdlLnNlcnZpY2UnO1xuLy8gaW1wb3J0IExvY2FsU3RvcmFnZVNlcnZpY2UgZnJvbSAnLi4vc2VydmljZXMvbG9jYWwtc3RvcmFnZS5zZXJ2aWNlJztcblxuY2xhc3MgQW5zd2Vyc0hlbHBlciB7XG5cbiAgICBjb25zdHJ1Y3RvcihzdG9yYWdlKSB7XG4gICAgICAgIHRoaXMuc3RvcmFnZSA9IHN0b3JhZ2U7XG4gICAgfVxuXG4gICAgYXN5bmMgZ2V0QnlVc2VySWQodXNlcklkKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdBbnN3ZXJzSGVscGVyI2dldEJ5VXNlcklkJyk7XG4gICAgICAgIGNvbnN0IEVNUFRZX1JFU1BPTlNFID0ge307XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCB1c2VyID0gYXdhaXQgdGhpcy5zdG9yYWdlLnJlYWQodXNlcklkKTtcbiAgICAgICAgICAgIHJldHVybiB1c2VyICYmIHVzZXIuYW5zd2Vyc1xuICAgICAgICAgICAgICAgID8gdXNlci5hbnN3ZXJzXG4gICAgICAgICAgICAgICAgOiBFTVBUWV9SRVNQT05TRTtcbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICByZXR1cm4gRU1QVFlfUkVTUE9OU0U7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBhc3luYyB1cGRhdGVBbnN3ZXJzKHVzZXJJZCwgYW5zd2Vycykge1xuICAgICAgICBjb25zb2xlLmxvZygnQW5zd2Vyc0hlbHBlciN1cGRhdGVBbnN3ZXJzJyk7XG4gICAgICAgIHJldHVybiBhd2FpdCB0aGlzLnN0b3JhZ2UudXBkYXRlKHVzZXJJZCwgeyBhbnN3ZXJzIH0pO1xuICAgIH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCBuZXcgQW5zd2Vyc0hlbHBlcihIdHRwVXNlcnNTdG9yYWdlU2VydmljZSk7XG4vLyBleHBvcnQgZGVmYXVsdCBuZXcgQW5zd2Vyc0hlbHBlcihMb2NhbFN0b3JhZ2VTZXJ2aWNlKTtcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5pbXBvcnQgU3RhclJhdGluZ0NvbXBvbmVudCBmcm9tICdyZWFjdC1zdGFyLXJhdGluZy1jb21wb25lbnQnO1xuXG5pbXBvcnQgSGVhZGxpbmUgZnJvbSAnLi9oZWFkbGluZSc7XG5pbXBvcnQgVXNlcklkSGVscGVyIGZyb20gJy4uL2hlbHBlcnMvdXNlci1pZC5oZWxwZXInO1xuaW1wb3J0IEFuc3dlcnNIZWxwZXIgZnJvbSAnLi4vaGVscGVycy9hbnN3ZXJzLmhlbHBlcic7XG5cbmNsYXNzIEZvcm1Db21wb25lbnQgZXh0ZW5kcyBDb21wb25lbnQge1xuXG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgYW5zd2Vyczoge1xuICAgICAgICAgICAgICAgIGphdmFzY3JpcHRMZXZlbDogMCxcbiAgICAgICAgICAgICAgICBoYXNWaXNpdGVkV29ya3Nob3BzOiBcIlwiLFxuICAgICAgICAgICAgICAgIGphdmFzY3JpcHREdXJhdGlvbkV4cGVyaWVuY2U6IFwiXCIsXG4gICAgICAgICAgICAgICAgdHlwZXNjcmlwdExldmVsOiAwLFxuICAgICAgICAgICAgICAgIGlzVHlwZVNjcmlwdExvdmVyOiBcIlwiLFxuICAgICAgICAgICAgICAgIGtub3dzSW50ZXJwb2xhdGlvblByb2Nlc3M6IFwiXCIsXG4gICAgICAgICAgICAgICAga25vd3NEaWZmZXJlbmNlQmV0d2VlbkRPTUFuZEhUTUw6IFwiXCIsXG4gICAgICAgICAgICAgICAgaXNTQ1NTTG92ZXI6IFwiXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy4kZm9ybSA9IFJlYWN0LmNyZWF0ZVJlZigpO1xuICAgICAgICB0aGlzLm9uQ2hhbmdlRmllbGRfa25vd3NJbnRlcnBvbGF0aW9uUHJvY2VzcyA9IHRoaXMub25DaGFuZ2VGaWVsZF9rbm93c0ludGVycG9sYXRpb25Qcm9jZXNzLmJpbmQodGhpcyk7XG4gICAgfVxuXG4gICAgYXN5bmMgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICAgIGNvbnN0IHVzZXJJZCA9IGF3YWl0IFVzZXJJZEhlbHBlci5nZXRVc2VySWQoKTtcbiAgICAgICAgY29uc3QgdXNlck5hbWUgPSBhd2FpdCBVc2VySWRIZWxwZXIuZ2V0VXNlcklkKCkgfHwgJ3RoZXJlJztcbiAgICAgICAgY29uc3QgdXNlckFuc3dlcnMgPSBhd2FpdCBBbnN3ZXJzSGVscGVyLmdldEJ5VXNlcklkKHVzZXJJZCk7XG4gICAgICAgIGNvbnN0IGFuc3dlcnMgPSBPYmplY3QuYXNzaWduKHRoaXMuc3RhdGUuYW5zd2VycywgdXNlckFuc3dlcnMpO1xuXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyB1c2VyTmFtZSwgYW5zd2VycyB9KTtcbiAgICB9XG5cbiAgICBhc3luYyBvblN1Ym1pdChldnQpIHtcbiAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgY29uc3QgJGZvcm0gPSBuZXcgRm9ybURhdGEodGhpcy4kZm9ybS5jdXJyZW50KTtcbiAgICAgICAgY29uc3QgZm9ybVN0YXRlID0ge307XG5cbiAgICAgICAgY29uc29sZS5ncm91cCgnRGFuZSBmb3JtdWxhcnphJyk7XG4gICAgICAgIGZvciAobGV0IFtrZXksIHZhbHVlXSBvZiAkZm9ybS5lbnRyaWVzKCkpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGtleSwgdmFsdWUpO1xuICAgICAgICAgICAgZm9ybVN0YXRlW2tleV0gPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zb2xlLmdyb3VwRW5kKCk7XG5cbiAgICAgICAgY29uc3QgYW5zd2VycyA9IE9iamVjdC5hc3NpZ24odGhpcy5zdGF0ZS5hbnN3ZXJzLCBmb3JtU3RhdGUpO1xuXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBhbnN3ZXJzIH0pO1xuXG4gICAgICAgIGNvbnN0IHVzZXJJZCA9IHRoaXMucHJvcHMubWF0Y2gucGFyYW1zLmlkO1xuICAgICAgICBhd2FpdCBBbnN3ZXJzSGVscGVyLnVwZGF0ZUFuc3dlcnModXNlcklkLCBmb3JtU3RhdGUpO1xuICAgIH1cblxuICAgIF91cGRhdGVTdGF0ZUZpZWxkKGZpZWxkLCBzdGF0dXMpIHtcbiAgICAgICAgY29uc29sZS53YXJuKCdfdXBkYXRlU3RhdGVGaWVsZCcsIGZpZWxkLCBzdGF0dXMoKSk7XG4gICAgICAgIGNvbnN0IGFuc3dlcnMgPSBPYmplY3QuYXNzaWduKHRoaXMuc3RhdGUuYW5zd2Vycywge1xuICAgICAgICAgICAgW2ZpZWxkXTogc3RhdHVzKClcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBhbnN3ZXJzIH0pO1xuICAgIH1cblxuICAgIG9uQ2hhbmdlRmllbGRfaGFzVmlzaXRlZFdvcmtzaG9wcyhldnQpIHtcbiAgICAgICAgdGhpcy5fdXBkYXRlU3RhdGVGaWVsZCgnaGFzVmlzaXRlZFdvcmtzaG9wcycsICgpID0+IGV2dC50YXJnZXQudmFsdWUpO1xuICAgIH1cblxuICAgIG9uQ2hhbmdlRmllbGRfamF2YXNjcmlwdExldmVsKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuX3VwZGF0ZVN0YXRlRmllbGQoJ2phdmFzY3JpcHRMZXZlbCcsICgpID0+IHZhbHVlKTtcbiAgICB9XG5cbiAgICBvbkNoYW5nZUZpZWxkX2phdmFzY3JpcHREdXJhdGlvbkV4cGVyaWVuY2UoZXZ0KSB7XG4gICAgICAgIHRoaXMuX3VwZGF0ZVN0YXRlRmllbGQoJ2phdmFzY3JpcHREdXJhdGlvbkV4cGVyaWVuY2UnLCAoKSA9PiBldnQudGFyZ2V0LnZhbHVlKTtcbiAgICB9XG5cbiAgICBvbkNoYW5nZUZpZWxkX3R5cGVzY3JpcHRMZXZlbCh2YWx1ZSkge1xuICAgICAgICB0aGlzLl91cGRhdGVTdGF0ZUZpZWxkKCd0eXBlc2NyaXB0TGV2ZWwnLCAoKSA9PiB2YWx1ZSk7XG4gICAgfVxuXG4gICAgb25DaGFuZ2VGaWVsZF9pc1R5cGVTY3JpcHRMb3ZlcihldnQpIHtcbiAgICAgICAgdGhpcy5fdXBkYXRlU3RhdGVGaWVsZCgnaXNUeXBlU2NyaXB0TG92ZXInLCAoKSA9PiAhdGhpcy5zdGF0ZS5hbnN3ZXJzLmlzVHlwZVNjcmlwdExvdmVyKTtcbiAgICB9XG5cbiAgICBvbkNoYW5nZUZpZWxkX2tub3dzSW50ZXJwb2xhdGlvblByb2Nlc3MoZXZ0KSB7XG4gICAgICAgIHRoaXMuX3VwZGF0ZVN0YXRlRmllbGQoJ2tub3dzSW50ZXJwb2xhdGlvblByb2Nlc3MnLCAoKSA9PiAhdGhpcy5zdGF0ZS5hbnN3ZXJzLmtub3dzSW50ZXJwb2xhdGlvblByb2Nlc3MpO1xuICAgIH1cblxuICAgIG9uQ2hhbmdlRmllbGRfa25vd3NEaWZmZXJlbmNlQmV0d2VlbkRPTUFuZEhUTUwoZXZ0KSB7XG4gICAgICAgIHRoaXMuX3VwZGF0ZVN0YXRlRmllbGQoJ2tub3dzRGlmZmVyZW5jZUJldHdlZW5ET01BbmRIVE1MJywgKCkgPT4gIXRoaXMuc3RhdGUuYW5zd2Vycy5rbm93c0RpZmZlcmVuY2VCZXR3ZWVuRE9NQW5kSFRNTCk7XG4gICAgfVxuXG4gICAgb25DaGFuZ2VGaWVsZF9pc1NDU1NMb3ZlcihldnQpIHtcbiAgICAgICAgdGhpcy5fdXBkYXRlU3RhdGVGaWVsZCgnaXNTQ1NTTG92ZXInLCAoKSA9PiAhdGhpcy5zdGF0ZS5hbnN3ZXJzLmlzU0NTU0xvdmVyKTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwianVtYm90cm9uXCI+XG4gICAgICAgICAgICAgICAgICAgIDxIZWFkbGluZSBuYW1lPXt0aGlzLnN0YXRlLnVzZXJOYW1lfS8+XG5cbiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwibGVhZFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgT2Rwb3dpYWRhaiBuYSBweXRhbmlhIGJleiBwcnpla8WCYW15d2FuaWEuXG4gICAgICAgICAgICAgICAgICAgIDwvcD5cblxuICAgICAgICAgICAgICAgICAgICA8TGluayB0bz1cIi9cIiBjbGFzc05hbWU9XCJidG4gYnRuLXdhcm5pbmdcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIFBvd3LDs3QgZG8gc3Ryb255IGfFgsOzd25lalxuICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8Zm9ybSBvblN1Ym1pdD17KGV2dCkgPT4gdGhpcy5vblN1Ym1pdChldnQpfSByZWY9e3RoaXMuJGZvcm19PlxuICAgICAgICAgICAgICAgICAgICA8aDIgY2xhc3NOYW1lPVwiYmctZGFyayB0ZXh0LXdoaXRlIHAtMlwiPlB5dGFuaWE8L2gyPlxuXG4gICAgICAgICAgICAgICAgICAgIDxoMz5KYXZhU2NyaXB0PC9oMz5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImp1bWJvdHJvbiBweS00XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvcm0tZ3JvdXBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE9rcmXFm2wgc3fDs2ogcG96aW9tIHpuYWpvbW/Fm2NpIGrEmXp5a2EgSmF2YVNjcmlwdDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPFN0YXJSYXRpbmdDb21wb25lbnRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInN0YXJzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJqYXZhc2NyaXB0TGV2ZWxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhckNvdW50PXsxMH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtOdW1iZXIodGhpcy5zdGF0ZS5hbnN3ZXJzLmphdmFzY3JpcHRMZXZlbCl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvblN0YXJDbGljaz17KHZhbHVlKSA9PiB0aGlzLm9uQ2hhbmdlRmllbGRfamF2YXNjcmlwdExldmVsKHZhbHVlKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvcm0tZ3JvdXBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgaHRtbEZvcj1cImhhcy12aXNpdGVkLXdvcmtzaG9wc1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDenkgYnnFgmXFmyBraWVkecWbIG5hIHdhcnN6dGF0YWNoP1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvd1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJjb2wtMyB0ZXh0LWRhbmdlciB0ZXh0LWNlbnRlclwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTmllXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkPVwiaGFzLXZpc2l0ZWQtd29ya3Nob3BzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJyYW5nZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJmb3JtLWNvbnRyb2wtcmFuZ2UgY29sLTYgcC0wXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJoYXNWaXNpdGVkV29ya3Nob3BzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0ZXA9XCIxXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1pbj1cIjBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF4PVwiMVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17dGhpcy5zdGF0ZS5hbnN3ZXJzLmhhc1Zpc2l0ZWRXb3Jrc2hvcHN9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGV2dCkgPT4gdGhpcy5vbkNoYW5nZUZpZWxkX2hhc1Zpc2l0ZWRXb3Jrc2hvcHMoZXZ0KX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJjb2wtMyB0ZXh0LXN1Y2Nlc3MgdGV4dC1jZW50ZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRha1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmb3JtLWdyb3VwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJqYXZhc2NyaXB0LWV4cGVyaWVuY2VcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgT2QgaWx1IGxhdCBwcm9ncmFtdWplc3ogdyBKYXZhU2NyaXB0P1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJmb3JtLWNvbnRyb2xcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZD1cImphdmFzY3JpcHQtZHVyYXRpb24tZXhwZXJpZW5jZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJqYXZhc2NyaXB0RHVyYXRpb25FeHBlcmllbmNlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3RoaXMuc3RhdGUuYW5zd2Vycy5qYXZhc2NyaXB0RHVyYXRpb25FeHBlcmllbmNlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGV2dCkgPT4gdGhpcy5vbkNoYW5nZUZpZWxkX2phdmFzY3JpcHREdXJhdGlvbkV4cGVyaWVuY2UoZXZ0KX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCIwXCI+d3liaWVyejwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uPjE8L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbj4yPC9vcHRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24+Mzwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uPjQ8L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbj41PC9vcHRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24+Njwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uPjc8L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbj44PC9vcHRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24+OTwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uPjEwPC9vcHRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgPGgzPlR5cGVTY3JpcHQ8L2gzPlxuXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwianVtYm90cm9uIHB5LTRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9ybS1ncm91cFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBodG1sRm9yPVwiZm9ybUNvbnRyb2xSYW5nZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBPa3JlxZtsIHN3w7NqIHBvemlvbSB6bmFqb21vxZtjaSBqxJl6eWthIFR5cGVTY3JpcHQ6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxTdGFyUmF0aW5nQ29tcG9uZW50XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInN0YXJzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT1cInR5cGVzY3JpcHRMZXZlbFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJDb3VudD17MTB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uU3RhckNsaWNrPXt0aGlzLm9uU3RhckNsaWNrfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17TnVtYmVyKHRoaXMuc3RhdGUuYW5zd2Vycy50eXBlc2NyaXB0TGV2ZWwpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvblN0YXJDbGljaz17KHZhbHVlKSA9PiB0aGlzLm9uQ2hhbmdlRmllbGRfdHlwZXNjcmlwdExldmVsKHZhbHVlKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9ybS1ncm91cCBmb3JtLWNoZWNrXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT1cImZvcm0tY2hlY2stbGFiZWxcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJmb3JtLWNoZWNrLWlucHV0XCIgdHlwZT1cImNoZWNrYm94XCIgdmFsdWU9XCIxXCIgbmFtZT1cImlzVHlwZVNjcmlwdExvdmVyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrZWQ9e3RoaXMuc3RhdGUuYW5zd2Vycy5pc1R5cGVTY3JpcHRMb3Zlcn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZXZ0KSA9PiB0aGlzLm9uQ2hhbmdlRmllbGRfaXNUeXBlU2NyaXB0TG92ZXIoZXZ0KX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ3p5IHByZWZlcnVqZXN6IHBpc2FuaWUga29kdSB3IFR5cGVTY3JpcHQ/XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICA8aDM+SFRNTDwvaDM+XG5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJqdW1ib3Ryb24gcHktNFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmb3JtLWdyb3VwIGZvcm0tY2hlY2tcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwiZm9ybS1jaGVjay1sYWJlbFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZvcm0tY2hlY2staW5wdXRcIiB0eXBlPVwiY2hlY2tib3hcIiB2YWx1ZT1cIjFcIiBuYW1lPVwia25vd3NJbnRlcnBvbGF0aW9uUHJvY2Vzc1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGVja2VkPXt0aGlzLnN0YXRlLmFuc3dlcnMua25vd3NJbnRlcnBvbGF0aW9uUHJvY2Vzc31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLm9uQ2hhbmdlRmllbGRfa25vd3NJbnRlcnBvbGF0aW9uUHJvY2Vzc31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ3p5IHdpZXN6IGNvIHRvIGplc3QgaW50ZXJwb2xhY2phP1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9ybS1ncm91cCBmb3JtLWNoZWNrXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT1cImZvcm0tY2hlY2stbGFiZWxcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJmb3JtLWNoZWNrLWlucHV0XCIgdHlwZT1cImNoZWNrYm94XCIgdmFsdWU9XCIxXCIgbmFtZT1cImtub3dzRGlmZmVyZW5jZUJldHdlZW5ET01BbmRIVE1MXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrZWQ9e3RoaXMuc3RhdGUuYW5zd2Vycy5rbm93c0RpZmZlcmVuY2VCZXR3ZWVuRE9NQW5kSFRNTH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZXZ0KSA9PiB0aGlzLm9uQ2hhbmdlRmllbGRfa25vd3NEaWZmZXJlbmNlQmV0d2VlbkRPTUFuZEhUTUwoZXZ0KX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ3p5IHpuYXN6IHJvxbxuaWPEmSBtacSZZHp5IGVsZW1lbnRlbSBET00gYSB6bmFjem5pa2llbSBIVE1MP1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgPGgzPlNBU1M8L2gzPlxuXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwianVtYm90cm9uIHB5LTRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9ybS1ncm91cCBmb3JtLWNoZWNrXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT1cImZvcm0tY2hlY2stbGFiZWxcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJmb3JtLWNoZWNrLWlucHV0XCIgdHlwZT1cImNoZWNrYm94XCIgdmFsdWU9XCIxXCIgbmFtZT1cImlzU0NTU0xvdmVyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrZWQ9e3RoaXMuc3RhdGUuYW5zd2Vycy5pc1NDU1NMb3Zlcn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZXZ0KSA9PiB0aGlzLm9uQ2hhbmdlRmllbGRfaXNTQ1NTTG92ZXIoZXZ0KX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ3p5IHpuYXN6IHNrxYJhZG5pxJkgU0NTUz9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9ybS1ncm91cFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeVwiIHR5cGU9XCJzdWJtaXRcIiB2YWx1ZT1cIlphcGlzelwiIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZm9ybT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRm9ybUNvbXBvbmVudDtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1xuICAgIC8vIEJyb3dzZXJSb3V0ZXIgYXMgUm91dGVyLFxuICAgIEhhc2hSb3V0ZXIgYXMgUm91dGVyLFxuICAgIFJvdXRlXG59IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuXG5pbXBvcnQgSW50cm8gZnJvbSAnLi9pbnRybyc7XG5pbXBvcnQgRm9ybSBmcm9tICcuL2Zvcm0nO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIFJlYWN0LlB1cmVDb21wb25lbnQge1xuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPFJvdXRlcj5cbiAgICAgICAgICAgICAgICA8ZGl2IGlkPVwibWFpblwiIGNsYXNzTmFtZT1cIm15LTRcIj5cbiAgICAgICAgICAgICAgICAgICAgPFJvdXRlIGV4YWN0IHBhdGg9XCIvXCIgY29tcG9uZW50PXtJbnRyb30gLz5cbiAgICAgICAgICAgICAgICAgICAgPFJvdXRlIGV4YWN0IHBhdGg9XCIvdXNlci86aWRcIiBjb21wb25lbnQ9e0Zvcm19IC8+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L1JvdXRlcj5cbiAgICAgICAgKVxuICAgIH1cblxufVxuIiwiaW1wb3J0ICcuLi9zdHlsZXMvbWFpbi5zY3NzJztcbmltcG9ydCAnLi4vaW5kZXguaHRtbCc7XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3REb20gZnJvbSAncmVhY3QtZG9tJztcblxuaW1wb3J0IEFwcENvbXBvbmVudCBmcm9tICcuL2NvbXBvbmVudHMvYXBwJztcblxuUmVhY3REb20ucmVuZGVyKFxuICAgIDxBcHBDb21wb25lbnQvPixcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYXBwJylcbik7XG4iXSwic291cmNlUm9vdCI6IiJ9